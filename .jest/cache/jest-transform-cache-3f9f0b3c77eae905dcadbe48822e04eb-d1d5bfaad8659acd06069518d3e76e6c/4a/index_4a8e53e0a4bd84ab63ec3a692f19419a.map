{"version":3,"sources":["index.js"],"names":["propagate","events","source","dest","arguments","length","undefined","eventsIsObject","explicitPropagate","shouldPropagate","eventName","includes","oldEmit","emit","args","oldEmitHadListeners","call","destEmitHadListeners","end","module","exports","eventsIn","eventsOut","Array","isArray","Object","keys","map","key","listeners","event","prototype","slice","unshift","apply","forEach","register","listener","i","on","unregister","removeListener"],"mappings":"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","sourcesContent":["'use strict'\n\nfunction propagate(events, source, dest) {\n  if (arguments.length < 3) {\n    dest = source\n    source = events\n    events = undefined\n  }\n\n  // events should be an array or object\n  const eventsIsObject = typeof events === 'object'\n  if (events && !eventsIsObject) events = [events]\n\n  if (eventsIsObject) {\n    return explicitPropagate(events, source, dest)\n  }\n\n  const shouldPropagate = eventName =>\n    events === undefined || events.includes(eventName)\n\n  const oldEmit = source.emit\n\n  // Returns true if the event had listeners, false otherwise.\n  // https://nodejs.org/api/events.html#events_emitter_emit_eventname_args\n  source.emit = (eventName, ...args) => {\n    const oldEmitHadListeners = oldEmit.call(source, eventName, ...args)\n\n    let destEmitHadListeners = false\n    if (shouldPropagate(eventName)) {\n      destEmitHadListeners = dest.emit(eventName, ...args)\n    }\n\n    return oldEmitHadListeners || destEmitHadListeners\n  }\n\n  function end() {\n    source.emit = oldEmit\n  }\n\n  return {\n    end,\n  }\n}\n\nmodule.exports = propagate\n\nfunction explicitPropagate(events, source, dest) {\n  let eventsIn\n  let eventsOut\n  if (Array.isArray(events)) {\n    eventsIn = events\n    eventsOut = events\n  } else {\n    eventsIn = Object.keys(events)\n    eventsOut = eventsIn.map(function(key) {\n      return events[key]\n    })\n  }\n\n  const listeners = eventsOut.map(function(event) {\n    return function() {\n      const args = Array.prototype.slice.call(arguments)\n      args.unshift(event)\n      dest.emit.apply(dest, args)\n    }\n  })\n\n  listeners.forEach(register)\n\n  return {\n    end,\n  }\n\n  function register(listener, i) {\n    source.on(eventsIn[i], listener)\n  }\n\n  function unregister(listener, i) {\n    source.removeListener(eventsIn[i], listener)\n  }\n\n  function end() {\n    listeners.forEach(unregister)\n  }\n}\n"]}