{"version":3,"sources":["call-with-safe-iteration-closing.js"],"names":["anObject","require","iteratorClose","module","exports","iterator","fn","value","ENTRIES","error"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,0BAAtB;;AACA,IAAIC,aAAa,GAAGD,OAAO,+BAA3B;;AAGAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoBC,EAApB,EAAwBC,KAAxB,EAA+BC,OAA/B,EAAwC;AACvD,MAAI;AACF,WAAOA,OAAO,GAAGF,EAAE,CAACN,QAAQ,CAACO,KAAD,CAAR,CAAgB,CAAhB,CAAD,EAAqBA,KAAK,CAAC,CAAD,CAA1B,CAAL,GAAsCD,EAAE,CAACC,KAAD,CAAtD;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACdP,IAAAA,aAAa,CAACG,QAAD,CAAb;AACA,UAAMI,KAAN;AACD;AACF,CAPD","sourcesContent":["var anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (error) {\n    iteratorClose(iterator);\n    throw error;\n  }\n};\n"]}