{"version":3,"sources":["reject.js"],"names":["_complement","require","_curry2","filter","reject","pred","filterable","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAgBC,OAAO,0BAAtC;;AAEA,IAAIC,OAAO,GAAgBD,OAAO,sBAAlC;;AAEA,IAAIE,MAAM,GAAgBF,OAAO,YAAjC;;AA4BA,IAAIG,MAAM,GAAgBF,OAAO,CAAC,SAASE,MAAT,CAAgBC,IAAhB,EAAsBC,UAAtB,EAAkC;AAClE,SAAOH,MAAM,CAACH,WAAW,CAACK,IAAD,CAAZ,EAAoBC,UAApB,CAAb;AACD,CAFgC,CAAjC;;AAGAC,MAAM,CAACC,OAAP,GAAiBJ,MAAjB","sourcesContent":["var _complement = /*#__PURE__*/require('./internal/_complement');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar filter = /*#__PURE__*/require('./filter');\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;"]}