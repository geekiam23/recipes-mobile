{"version":3,"sources":["title.js"],"names":["Object","defineProperty","exports","value","findByTitle","findAllByTitle","getAllByTitle","getByTitle","queryAllByTitle","queryByTitle","_queryHelpers","require","_helpers","_allUtils","isSvgTitle","node","_node$parentElement","tagName","toLowerCase","parentElement","container","text","exact","collapseWhitespace","trim","normalizer","checkContainerType","matcher","matches","fuzzyMatches","matchNormalizer","makeNormalizer","Array","from","querySelectorAll","filter","getAttribute","getNodeText","getMultipleError","c","title","getMissingError","queryAllByTitleWithSuggestions","wrapAllByQueryWithSuggestion","name","buildQueries"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findByTitle = exports.findAllByTitle = exports.getAllByTitle = exports.getByTitle = exports.queryAllByTitle = exports.queryByTitle = void 0;\n\nvar _queryHelpers = require(\"../query-helpers\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _allUtils = require(\"./all-utils\");\n\nconst isSvgTitle = node => {\n  var _node$parentElement;\n\n  return node.tagName.toLowerCase() === 'title' && ((_node$parentElement = node.parentElement) == null ? void 0 : _node$parentElement.tagName.toLowerCase()) === 'svg';\n};\n\nconst queryAllByTitle = (container, text, {\n  exact = true,\n  collapseWhitespace,\n  trim,\n  normalizer\n} = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  return Array.from(container.querySelectorAll('[title], svg > title')).filter(node => matcher(node.getAttribute('title'), node, text, matchNormalizer) || isSvgTitle(node) && matcher((0, _allUtils.getNodeText)(node), node, text, matchNormalizer));\n};\n\nconst getMultipleError = (c, title) => `Found multiple elements with the title: ${title}.`;\n\nconst getMissingError = (c, title) => `Unable to find an element with the title: ${title}.`;\n\nconst queryAllByTitleWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByTitle, queryAllByTitle.name, 'queryAll');\nexports.queryAllByTitle = queryAllByTitleWithSuggestions;\nconst [queryByTitle, getAllByTitle, getByTitle, findAllByTitle, findByTitle] = (0, _allUtils.buildQueries)(queryAllByTitle, getMultipleError, getMissingError);\nexports.findByTitle = findByTitle;\nexports.findAllByTitle = findAllByTitle;\nexports.getByTitle = getByTitle;\nexports.getAllByTitle = getAllByTitle;\nexports.queryByTitle = queryByTitle;"]}