8b2c55ca65f83cd7a4a630db437d66df
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _verifyComponentAttributeEquivalence = _interopRequireDefault(require("./verifyComponentAttributeEquivalence"));

var ReactNativeViewConfigRegistry = require("../Renderer/shims/ReactNativeViewConfigRegistry");

var ReactNativeViewViewConfig = require("../Components/View/ReactNativeViewViewConfig");

function registerGeneratedViewConfig(componentName, viewConfig) {
  var mergedViewConfig = {
    uiViewClassName: componentName,
    Commands: {},
    bubblingEventTypes: (0, _extends2.default)({}, ReactNativeViewViewConfig.bubblingEventTypes, viewConfig.bubblingEventTypes || {}),
    directEventTypes: (0, _extends2.default)({}, ReactNativeViewViewConfig.directEventTypes, viewConfig.directEventTypes || {}),
    validAttributes: (0, _extends2.default)({}, ReactNativeViewViewConfig.validAttributes, viewConfig.validAttributes || {})
  };
  ReactNativeViewConfigRegistry.register(componentName, function () {
    (0, _verifyComponentAttributeEquivalence.default)(componentName, mergedViewConfig);
    return mergedViewConfig;
  });
}

module.exports = registerGeneratedViewConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyR2VuZXJhdGVkVmlld0NvbmZpZy5qcyJdLCJuYW1lcyI6WyJSZWFjdE5hdGl2ZVZpZXdDb25maWdSZWdpc3RyeSIsInJlcXVpcmUiLCJSZWFjdE5hdGl2ZVZpZXdWaWV3Q29uZmlnIiwicmVnaXN0ZXJHZW5lcmF0ZWRWaWV3Q29uZmlnIiwiY29tcG9uZW50TmFtZSIsInZpZXdDb25maWciLCJtZXJnZWRWaWV3Q29uZmlnIiwidWlWaWV3Q2xhc3NOYW1lIiwiQ29tbWFuZHMiLCJidWJibGluZ0V2ZW50VHlwZXMiLCJkaXJlY3RFdmVudFR5cGVzIiwidmFsaWRBdHRyaWJ1dGVzIiwicmVnaXN0ZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7O0FBSUE7O0FBRkEsSUFBTUEsNkJBQTZCLEdBQUdDLE9BQU8sbURBQTdDOztBQUNBLElBQU1DLHlCQUF5QixHQUFHRCxPQUFPLGdEQUF6Qzs7QUFnQ0EsU0FBU0UsMkJBQVQsQ0FDRUMsYUFERixFQUVFQyxVQUZGLEVBR0U7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBRztBQUN2QkMsSUFBQUEsZUFBZSxFQUFFSCxhQURNO0FBRXZCSSxJQUFBQSxRQUFRLEVBQUUsRUFGYTtBQU12QkMsSUFBQUEsa0JBQWtCLDZCQUNiUCx5QkFBeUIsQ0FBQ08sa0JBRGIsRUFFWkosVUFBVSxDQUFDSSxrQkFBWCxJQUFpQyxFQUZyQixDQU5LO0FBYXZCQyxJQUFBQSxnQkFBZ0IsNkJBQ1hSLHlCQUF5QixDQUFDUSxnQkFEZixFQUVWTCxVQUFVLENBQUNLLGdCQUFYLElBQStCLEVBRnJCLENBYk87QUFvQnZCQyxJQUFBQSxlQUFlLDZCQUNWVCx5QkFBeUIsQ0FBQ1MsZUFEaEIsRUFFVE4sVUFBVSxDQUFDTSxlQUFYLElBQThCLEVBRnJCO0FBcEJRLEdBQXpCO0FBMEJBWCxFQUFBQSw2QkFBNkIsQ0FBQ1ksUUFBOUIsQ0FBdUNSLGFBQXZDLEVBQXNELFlBQU07QUFDMUQsc0RBQW9DQSxhQUFwQyxFQUFtREUsZ0JBQW5EO0FBRUEsV0FBT0EsZ0JBQVA7QUFDRCxHQUpEO0FBS0Q7O0FBRURPLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlgsMkJBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3ROYXRpdmVWaWV3Q29uZmlnUmVnaXN0cnkgPSByZXF1aXJlKCcuLi9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVZpZXdDb25maWdSZWdpc3RyeScpO1xuY29uc3QgUmVhY3ROYXRpdmVWaWV3Vmlld0NvbmZpZyA9IHJlcXVpcmUoJy4uL0NvbXBvbmVudHMvVmlldy9SZWFjdE5hdGl2ZVZpZXdWaWV3Q29uZmlnJyk7XG5pbXBvcnQgdmVyaWZ5Q29tcG9uZW50QXR0cmlidXRlRXF1aXZhbGVuY2UgZnJvbSAnLi92ZXJpZnlDb21wb25lbnRBdHRyaWJ1dGVFcXVpdmFsZW5jZSc7XG5cbmV4cG9ydCB0eXBlIEdlbmVyYXRlZFZpZXdDb25maWcgPSB7XG4gIHVpVmlld0NsYXNzTmFtZTogc3RyaW5nLFxuICBidWJibGluZ0V2ZW50VHlwZXM/OiAkUmVhZE9ubHk8e1xuICAgIFtldmVudE5hbWU6IHN0cmluZ106ICRSZWFkT25seTx7fFxuICAgICAgcGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6ICRSZWFkT25seTx7fFxuICAgICAgICBjYXB0dXJlZDogc3RyaW5nLFxuICAgICAgICBidWJibGVkOiBzdHJpbmcsXG4gICAgICB8fT4sXG4gICAgfH0+LFxuICAgIC4uLixcbiAgfT4sXG4gIGRpcmVjdEV2ZW50VHlwZXM/OiAkUmVhZE9ubHk8e1xuICAgIFtldmVudE5hbWU6IHN0cmluZ106ICRSZWFkT25seTx7fFxuICAgICAgcmVnaXN0cmF0aW9uTmFtZTogc3RyaW5nLFxuICAgIHx9PixcbiAgICAuLi4sXG4gIH0+LFxuICB2YWxpZEF0dHJpYnV0ZXM/OiB7XG4gICAgW3Byb3BOYW1lOiBzdHJpbmddOlxuICAgICAgfCB0cnVlXG4gICAgICB8ICRSZWFkT25seTx7fFxuICAgICAgICAgIGRpZmY/OiA8VD4oYXJnMTogYW55LCBhcmcyOiBhbnkpID0+IGJvb2xlYW4sXG4gICAgICAgICAgcHJvY2Vzcz86IChhcmcxOiBhbnkpID0+IGFueSxcbiAgICAgICAgfH0+LFxuICAgIC4uLixcbiAgfSxcbiAgLi4uXG59O1xuXG5mdW5jdGlvbiByZWdpc3RlckdlbmVyYXRlZFZpZXdDb25maWcoXG4gIGNvbXBvbmVudE5hbWU6IHN0cmluZyxcbiAgdmlld0NvbmZpZzogR2VuZXJhdGVkVmlld0NvbmZpZyxcbikge1xuICBjb25zdCBtZXJnZWRWaWV3Q29uZmlnID0ge1xuICAgIHVpVmlld0NsYXNzTmFtZTogY29tcG9uZW50TmFtZSxcbiAgICBDb21tYW5kczoge30sXG4gICAgLyogJEZsb3dGaXhNZSg+PTAuMTIyLjAgc2l0ZT1yZWFjdF9uYXRpdmVfZmIpIFRoaXMgY29tbWVudCBzdXBwcmVzc2VzIGFuXG4gICAgICogZXJyb3IgZm91bmQgd2hlbiBGbG93IHYwLjEyMi4wIHdhcyBkZXBsb3llZC4gVG8gc2VlIHRoZSBlcnJvciwgZGVsZXRlXG4gICAgICogdGhpcyBjb21tZW50IGFuZCBydW4gRmxvdy4gKi9cbiAgICBidWJibGluZ0V2ZW50VHlwZXM6IHtcbiAgICAgIC4uLlJlYWN0TmF0aXZlVmlld1ZpZXdDb25maWcuYnViYmxpbmdFdmVudFR5cGVzLFxuICAgICAgLi4uKHZpZXdDb25maWcuYnViYmxpbmdFdmVudFR5cGVzIHx8IHt9KSxcbiAgICB9LFxuICAgIC8qICRGbG93Rml4TWUoPj0wLjEyMi4wIHNpdGU9cmVhY3RfbmF0aXZlX2ZiKSBUaGlzIGNvbW1lbnQgc3VwcHJlc3NlcyBhblxuICAgICAqIGVycm9yIGZvdW5kIHdoZW4gRmxvdyB2MC4xMjIuMCB3YXMgZGVwbG95ZWQuIFRvIHNlZSB0aGUgZXJyb3IsIGRlbGV0ZVxuICAgICAqIHRoaXMgY29tbWVudCBhbmQgcnVuIEZsb3cuICovXG4gICAgZGlyZWN0RXZlbnRUeXBlczoge1xuICAgICAgLi4uUmVhY3ROYXRpdmVWaWV3Vmlld0NvbmZpZy5kaXJlY3RFdmVudFR5cGVzLFxuICAgICAgLi4uKHZpZXdDb25maWcuZGlyZWN0RXZlbnRUeXBlcyB8fCB7fSksXG4gICAgfSxcbiAgICAvKiAkRmxvd0ZpeE1lKD49MC4xMjIuMCBzaXRlPXJlYWN0X25hdGl2ZV9mYikgVGhpcyBjb21tZW50IHN1cHByZXNzZXMgYW5cbiAgICAgKiBlcnJvciBmb3VuZCB3aGVuIEZsb3cgdjAuMTIyLjAgd2FzIGRlcGxveWVkLiBUbyBzZWUgdGhlIGVycm9yLCBkZWxldGVcbiAgICAgKiB0aGlzIGNvbW1lbnQgYW5kIHJ1biBGbG93LiAqL1xuICAgIHZhbGlkQXR0cmlidXRlczoge1xuICAgICAgLi4uUmVhY3ROYXRpdmVWaWV3Vmlld0NvbmZpZy52YWxpZEF0dHJpYnV0ZXMsXG4gICAgICAuLi4odmlld0NvbmZpZy52YWxpZEF0dHJpYnV0ZXMgfHwge30pLFxuICAgIH0sXG4gIH07XG5cbiAgUmVhY3ROYXRpdmVWaWV3Q29uZmlnUmVnaXN0cnkucmVnaXN0ZXIoY29tcG9uZW50TmFtZSwgKCkgPT4ge1xuICAgIHZlcmlmeUNvbXBvbmVudEF0dHJpYnV0ZUVxdWl2YWxlbmNlKGNvbXBvbmVudE5hbWUsIG1lcmdlZFZpZXdDb25maWcpO1xuXG4gICAgcmV0dXJuIG1lcmdlZFZpZXdDb25maWc7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJlZ2lzdGVyR2VuZXJhdGVkVmlld0NvbmZpZztcbiJdfQ==