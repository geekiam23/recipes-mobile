{"version":3,"sources":["traverse.js"],"names":["_curry3","require","map","sequence","traverse","of","f","traversable","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAgBC,OAAO,sBAAlC;;AAEA,IAAIC,GAAG,GAAgBD,OAAO,SAA9B;;AAEA,IAAIE,QAAQ,GAAgBF,OAAO,cAAnC;;AA8BA,IAAIG,QAAQ,GAAgBJ,OAAO,CAAC,SAASI,QAAT,CAAkBC,EAAlB,EAAsBC,CAAtB,EAAyBC,WAAzB,EAAsC;AACxE,SAAO,OAAOA,WAAW,CAAC,uBAAD,CAAlB,KAAgD,UAAhD,GAA6DA,WAAW,CAAC,uBAAD,CAAX,CAAqCD,CAArC,EAAwCD,EAAxC,CAA7D,GAA2GF,QAAQ,CAACE,EAAD,EAAKH,GAAG,CAACI,CAAD,EAAIC,WAAJ,CAAR,CAA1H;AACD,CAFkC,CAAnC;;AAGAC,MAAM,CAACC,OAAP,GAAiBL,QAAjB","sourcesContent":["var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar map = /*#__PURE__*/require('./map');\n\nvar sequence = /*#__PURE__*/require('./sequence');\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\n\n\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nmodule.exports = traverse;"]}