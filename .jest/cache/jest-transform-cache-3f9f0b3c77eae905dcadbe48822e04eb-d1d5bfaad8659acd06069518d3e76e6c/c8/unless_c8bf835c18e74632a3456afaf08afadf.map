{"version":3,"sources":["unless.js"],"names":["_curry3","require","unless","pred","whenFalseFn","x","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAgBC,OAAO,sBAAlC;;AA4BA,IAAIC,MAAM,GAAgBF,OAAO,CAAC,SAASE,MAAT,CAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,CAAnC,EAAsC;AACtE,SAAOF,IAAI,CAACE,CAAD,CAAJ,GAAUA,CAAV,GAAcD,WAAW,CAACC,CAAD,CAAhC;AACD,CAFgC,CAAjC;;AAGAC,MAAM,CAACC,OAAP,GAAiBL,MAAjB","sourcesContent":["var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\n\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nmodule.exports = unless;"]}