4ddc8e6fb54178d372bfcca32db34cd4
"use strict";

exports.__esModule = true;
exports.default = getRole;

var _util = require("./util");

var localNameToRoleMappings = {
  article: "article",
  aside: "complementary",
  body: "document",
  button: "button",
  datalist: "listbox",
  dd: "definition",
  details: "group",
  dialog: "dialog",
  dt: "term",
  fieldset: "group",
  figure: "figure",
  form: "form",
  footer: "contentinfo",
  h1: "heading",
  h2: "heading",
  h3: "heading",
  h4: "heading",
  h5: "heading",
  h6: "heading",
  header: "banner",
  hr: "separator",
  legend: "legend",
  li: "listitem",
  math: "math",
  main: "main",
  menu: "list",
  nav: "navigation",
  ol: "list",
  optgroup: "group",
  option: "option",
  output: "status",
  progress: "progressbar",
  section: "region",
  summary: "button",
  table: "table",
  tbody: "rowgroup",
  textarea: "textbox",
  tfoot: "rowgroup",
  td: "cell",
  th: "columnheader",
  thead: "rowgroup",
  tr: "row",
  ul: "list"
};
var prohibitedAttributes = {
  caption: new Set(["aria-label", "aria-labelledby"]),
  code: new Set(["aria-label", "aria-labelledby"]),
  deletion: new Set(["aria-label", "aria-labelledby"]),
  emphasis: new Set(["aria-label", "aria-labelledby"]),
  generic: new Set(["aria-label", "aria-labelledby", "aria-roledescription"]),
  insertion: new Set(["aria-label", "aria-labelledby"]),
  paragraph: new Set(["aria-label", "aria-labelledby"]),
  presentation: new Set(["aria-label", "aria-labelledby"]),
  strong: new Set(["aria-label", "aria-labelledby"]),
  subscript: new Set(["aria-label", "aria-labelledby"]),
  superscript: new Set(["aria-label", "aria-labelledby"])
};

function hasGlobalAriaAttributes(element, role) {
  return ["aria-atomic", "aria-busy", "aria-controls", "aria-current", "aria-describedby", "aria-details", "aria-dropeffect", "aria-flowto", "aria-grabbed", "aria-hidden", "aria-keyshortcuts", "aria-label", "aria-labelledby", "aria-live", "aria-owns", "aria-relevant", "aria-roledescription"].some(function (attributeName) {
    var _prohibitedAttributes;

    return element.hasAttribute(attributeName) && !((_prohibitedAttributes = prohibitedAttributes[role]) !== null && _prohibitedAttributes !== void 0 && _prohibitedAttributes.has(attributeName));
  });
}

function ignorePresentationalRole(element, implicitRole) {
  return hasGlobalAriaAttributes(element, implicitRole);
}

function getRole(element) {
  var explicitRole = getExplicitRole(element);

  if (explicitRole === null || explicitRole === "presentation") {
    var implicitRole = getImplicitRole(element);

    if (explicitRole !== "presentation" || ignorePresentationalRole(element, implicitRole || "")) {
      return implicitRole;
    }
  }

  return explicitRole;
}

function getImplicitRole(element) {
  var mappedByTag = localNameToRoleMappings[(0, _util.getLocalName)(element)];

  if (mappedByTag !== undefined) {
    return mappedByTag;
  }

  switch ((0, _util.getLocalName)(element)) {
    case "a":
    case "area":
    case "link":
      if (element.hasAttribute("href")) {
        return "link";
      }

      break;

    case "img":
      if (element.getAttribute("alt") === "" && !ignorePresentationalRole(element, "img")) {
        return "presentation";
      }

      return "img";

    case "input":
      {
        var _ref = element,
            type = _ref.type;

        switch (type) {
          case "button":
          case "image":
          case "reset":
          case "submit":
            return "button";

          case "checkbox":
          case "radio":
            return type;

          case "range":
            return "slider";

          case "email":
          case "tel":
          case "text":
          case "url":
            if (element.hasAttribute("list")) {
              return "combobox";
            }

            return "textbox";

          case "search":
            if (element.hasAttribute("list")) {
              return "combobox";
            }

            return "searchbox";

          default:
            return null;
        }
      }

    case "select":
      if (element.hasAttribute("multiple") || element.size > 1) {
        return "listbox";
      }

      return "combobox";
  }

  return null;
}

function getExplicitRole(element) {
  var role = element.getAttribute("role");

  if (role !== null) {
    var explicitRole = role.trim().split(" ")[0];

    if (explicitRole.length > 0) {
      return explicitRole;
    }
  }

  return null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NvdXJjZXMvZ2V0Um9sZS50cyJdLCJuYW1lcyI6WyJsb2NhbE5hbWVUb1JvbGVNYXBwaW5ncyIsImFydGljbGUiLCJhc2lkZSIsImJvZHkiLCJidXR0b24iLCJkYXRhbGlzdCIsImRkIiwiZGV0YWlscyIsImRpYWxvZyIsImR0IiwiZmllbGRzZXQiLCJmaWd1cmUiLCJmb3JtIiwiZm9vdGVyIiwiaDEiLCJoMiIsImgzIiwiaDQiLCJoNSIsImg2IiwiaGVhZGVyIiwiaHIiLCJsZWdlbmQiLCJsaSIsIm1hdGgiLCJtYWluIiwibWVudSIsIm5hdiIsIm9sIiwib3B0Z3JvdXAiLCJvcHRpb24iLCJvdXRwdXQiLCJwcm9ncmVzcyIsInNlY3Rpb24iLCJzdW1tYXJ5IiwidGFibGUiLCJ0Ym9keSIsInRleHRhcmVhIiwidGZvb3QiLCJ0ZCIsInRoIiwidGhlYWQiLCJ0ciIsInVsIiwicHJvaGliaXRlZEF0dHJpYnV0ZXMiLCJjYXB0aW9uIiwiY29kZSIsImRlbGV0aW9uIiwiZW1waGFzaXMiLCJnZW5lcmljIiwiaW5zZXJ0aW9uIiwicGFyYWdyYXBoIiwicHJlc2VudGF0aW9uIiwic3Ryb25nIiwic3Vic2NyaXB0Iiwic3VwZXJzY3JpcHQiLCJlbGVtZW50IiwiaGFzR2xvYmFsQXJpYUF0dHJpYnV0ZXMiLCJleHBsaWNpdFJvbGUiLCJnZXRFeHBsaWNpdFJvbGUiLCJpbXBsaWNpdFJvbGUiLCJnZXRJbXBsaWNpdFJvbGUiLCJpZ25vcmVQcmVzZW50YXRpb25hbFJvbGUiLCJtYXBwZWRCeVRhZyIsInR5cGUiLCJyb2xlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUVBLElBQUEsS0FBQSxHQUFBLE9BQUEsVUFBQTs7QUFFQSxJQUFNQSx1QkFBMkQsR0FBRztBQUNuRUMsRUFBQUEsT0FBTyxFQUQ0RCxTQUFBO0FBRW5FQyxFQUFBQSxLQUFLLEVBRjhELGVBQUE7QUFHbkVDLEVBQUFBLElBQUksRUFIK0QsVUFBQTtBQUluRUMsRUFBQUEsTUFBTSxFQUo2RCxRQUFBO0FB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QSxlQUFBLE9BQUE7QUFDQyxtQkFBQSxJQUFBOztBQUNELGVBQUEsT0FBQTtBQUNDLG1CQUFBLFFBQUE7O0FBQ0QsZUFBQSxPQUFBO0FBQ0EsZUFBQSxLQUFBO0FBQ0EsZUFBQSxNQUFBO0FBQ0EsZUFBQSxLQUFBO0FBQ0MsZ0JBQUlSLE9BQU8sQ0FBUEEsWUFBQUEsQ0FBSixNQUFJQSxDQUFKLEVBQWtDO0FBQ2pDLHFCQUFBLFVBQUE7QUFDQTs7QUFDRCxtQkFBQSxTQUFBOztBQUVELGVBQUEsUUFBQTtBQUNDLGdCQUFJQSxPQUFPLENBQVBBLFlBQUFBLENBQUosTUFBSUEsQ0FBSixFQUFrQztBQUNqQyxxQkFBQSxVQUFBO0FBQ0E7O0FBQ0QsbUJBQUEsV0FBQTs7QUFDRDtBQUNDLG1CQUFBLElBQUE7QUExQkY7QUE0QkE7O0FBQ0QsU0FBQSxRQUFBO0FBQ0MsVUFDQ0EsT0FBTyxDQUFQQSxZQUFBQSxDQUFBQSxVQUFBQSxLQUNDQSxPQUFELENBQUEsSUFBQ0EsR0FGRixDQUFBLEVBR0U7QUFDRCxlQUFBLFNBQUE7QUFDQTs7QUFDRCxhQUFBLFVBQUE7QUF0REY7O0FBd0RBLFNBQUEsSUFBQTtBQUNBOztBQUVELFNBQUEsZUFBQSxDQUFBLE9BQUEsRUFBMEQ7QUFDekQsTUFBTVMsSUFBSSxHQUFHVCxPQUFPLENBQVBBLFlBQUFBLENBQWIsTUFBYUEsQ0FBYjs7QUFDQSxNQUFJUyxJQUFJLEtBQVIsSUFBQSxFQUFtQjtBQUNsQixRQUFNUCxZQUFZLEdBQUdPLElBQUksQ0FBSkEsSUFBQUEsR0FBQUEsS0FBQUEsQ0FBQUEsR0FBQUEsRUFESCxDQUNHQSxDQUFyQjs7QUFHQSxRQUFJUCxZQUFZLENBQVpBLE1BQUFBLEdBQUosQ0FBQSxFQUE2QjtBQUM1QixhQUFBLFlBQUE7QUFDQTtBQUNEOztBQUVELFNBQUEsSUFBQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaHR0cHM6Ly93M2MuZ2l0aHViLmlvL2h0bWwtYXJpYS8jZG9jdW1lbnQtY29uZm9ybWFuY2UtcmVxdWlyZW1lbnRzLWZvci11c2Utb2YtYXJpYS1hdHRyaWJ1dGVzLWluLWh0bWxcblxuaW1wb3J0IHsgZ2V0TG9jYWxOYW1lIH0gZnJvbSBcIi4vdXRpbFwiO1xuXG5jb25zdCBsb2NhbE5hbWVUb1JvbGVNYXBwaW5nczogUmVjb3JkPHN0cmluZywgc3RyaW5nIHwgdW5kZWZpbmVkPiA9IHtcblx0YXJ0aWNsZTogXCJhcnRpY2xlXCIsXG5cdGFzaWRlOiBcImNvbXBsZW1lbnRhcnlcIixcblx0Ym9keTogXCJkb2N1bWVudFwiLFxuXHRidXR0b246IFwiYnV0dG9uXCIsXG5cdGRhdGFsaXN0OiBcImxpc3Rib3hcIixcblx0ZGQ6IFwiZGVmaW5pdGlvblwiLFxuXHRkZXRhaWxzOiBcImdyb3VwXCIsXG5cdGRpYWxvZzogXCJkaWFsb2dcIixcblx0ZHQ6IFwidGVybVwiLFxuXHRmaWVsZHNldDogXCJncm91cFwiLFxuXHRmaWd1cmU6IFwiZmlndXJlXCIsXG5cdC8vIFdBUk5JTkc6IE9ubHkgd2l0aCBhbiBhY2Nlc3NpYmxlIG5hbWVcblx0Zm9ybTogXCJmb3JtXCIsXG5cdGZvb3RlcjogXCJjb250ZW50aW5mb1wiLFxuXHRoMTogXCJoZWFkaW5nXCIsXG5cdGgyOiBcImhlYWRpbmdcIixcblx0aDM6IFwiaGVhZGluZ1wiLFxuXHRoNDogXCJoZWFkaW5nXCIsXG5cdGg1OiBcImhlYWRpbmdcIixcblx0aDY6IFwiaGVhZGluZ1wiLFxuXHRoZWFkZXI6IFwiYmFubmVyXCIsXG5cdGhyOiBcInNlcGFyYXRvclwiLFxuXHRsZWdlbmQ6IFwibGVnZW5kXCIsXG5cdGxpOiBcImxpc3RpdGVtXCIsXG5cdG1hdGg6IFwibWF0aFwiLFxuXHRtYWluOiBcIm1haW5cIixcblx0bWVudTogXCJsaXN0XCIsXG5cdG5hdjogXCJuYXZpZ2F0aW9uXCIsXG5cdG9sOiBcImxpc3RcIixcblx0b3B0Z3JvdXA6IFwiZ3JvdXBcIixcblx0Ly8gV0FSTklORzogT25seSBpbiBjZXJ0YWluIGNvbnRleHRcblx0b3B0aW9uOiBcIm9wdGlvblwiLFxuXHRvdXRwdXQ6IFwic3RhdHVzXCIsXG5cdHByb2dyZXNzOiBcInByb2dyZXNzYmFyXCIsXG5cdC8vIFdBUk5JTkc6IE9ubHkgd2l0aCBhbiBhY2Nlc3NpYmxlIG5hbWVcblx0c2VjdGlvbjogXCJyZWdpb25cIixcblx0c3VtbWFyeTogXCJidXR0b25cIixcblx0dGFibGU6IFwidGFibGVcIixcblx0dGJvZHk6IFwicm93Z3JvdXBcIixcblx0dGV4dGFyZWE6IFwidGV4dGJveFwiLFxuXHR0Zm9vdDogXCJyb3dncm91cFwiLFxuXHQvLyBXQVJOSU5HOiBPbmx5IGluIGNlcnRhaW4gY29udGV4dFxuXHR0ZDogXCJjZWxsXCIsXG5cdHRoOiBcImNvbHVtbmhlYWRlclwiLFxuXHR0aGVhZDogXCJyb3dncm91cFwiLFxuXHR0cjogXCJyb3dcIixcblx0dWw6IFwibGlzdFwiLFxufTtcblxuY29uc3QgcHJvaGliaXRlZEF0dHJpYnV0ZXM6IFJlY29yZDxzdHJpbmcsIFNldDxzdHJpbmc+PiA9IHtcblx0Y2FwdGlvbjogbmV3IFNldChbXCJhcmlhLWxhYmVsXCIsIFwiYXJpYS1sYWJlbGxlZGJ5XCJdKSxcblx0Y29kZTogbmV3IFNldChbXCJhcmlhLWxhYmVsXCIsIFwiYXJpYS1sYWJlbGxlZGJ5XCJdKSxcblx0ZGVsZXRpb246IG5ldyBTZXQoW1wiYXJpYS1sYWJlbFwiLCBcImFyaWEtbGFiZWxsZWRieVwiXSksXG5cdGVtcGhhc2lzOiBuZXcgU2V0KFtcImFyaWEtbGFiZWxcIiwgXCJhcmlhLWxhYmVsbGVkYnlcIl0pLFxuXHRnZW5lcmljOiBuZXcgU2V0KFtcImFyaWEtbGFiZWxcIiwgXCJhcmlhLWxhYmVsbGVkYnlcIiwgXCJhcmlhLXJvbGVkZXNjcmlwdGlvblwiXSksXG5cdGluc2VydGlvbjogbmV3IFNldChbXCJhcmlhLWxhYmVsXCIsIFwiYXJpYS1sYWJlbGxlZGJ5XCJdKSxcblx0cGFyYWdyYXBoOiBuZXcgU2V0KFtcImFyaWEtbGFiZWxcIiwgXCJhcmlhLWxhYmVsbGVkYnlcIl0pLFxuXHRwcmVzZW50YXRpb246IG5ldyBTZXQoW1wiYXJpYS1sYWJlbFwiLCBcImFyaWEtbGFiZWxsZWRieVwiXSksXG5cdHN0cm9uZzogbmV3IFNldChbXCJhcmlhLWxhYmVsXCIsIFwiYXJpYS1sYWJlbGxlZGJ5XCJdKSxcblx0c3Vic2NyaXB0OiBuZXcgU2V0KFtcImFyaWEtbGFiZWxcIiwgXCJhcmlhLWxhYmVsbGVkYnlcIl0pLFxuXHRzdXBlcnNjcmlwdDogbmV3IFNldChbXCJhcmlhLWxhYmVsXCIsIFwiYXJpYS1sYWJlbGxlZGJ5XCJdKSxcbn07XG5cbi8qKlxuICpcbiAqIEBwYXJhbSBlbGVtZW50XG4gKiBAcGFyYW0gcm9sZSBUaGUgcm9sZSB1c2VkIGZvciB0aGlzIGVsZW1lbnQuIFRoaXMgaXMgc3BlY2lmaWVkIHRvIGNvbnRyb2wgd2hldGhlciB5b3Ugd2FudCB0byB1c2UgdGhlIGltcGxpY2l0IG9yIGV4cGxpY2l0IHJvbGUuXG4gKi9cbmZ1bmN0aW9uIGhhc0dsb2JhbEFyaWFBdHRyaWJ1dGVzKGVsZW1lbnQ6IEVsZW1lbnQsIHJvbGU6IHN0cmluZyk6IGJvb2xlYW4ge1xuXHQvLyBodHRwczovL3Jhd2dpdC5jb20vdzNjL2FyaWEvc3RhYmxlLyNnbG9iYWxfc3RhdGVzXG5cdC8vIGNvbW1lbnRlZCBhdHRyaWJ1dGVzIGFyZSBkZXByZWNhdGVkXG5cdHJldHVybiBbXG5cdFx0XCJhcmlhLWF0b21pY1wiLFxuXHRcdFwiYXJpYS1idXN5XCIsXG5cdFx0XCJhcmlhLWNvbnRyb2xzXCIsXG5cdFx0XCJhcmlhLWN1cnJlbnRcIixcblx0XHRcImFyaWEtZGVzY3JpYmVkYnlcIixcblx0XHRcImFyaWEtZGV0YWlsc1wiLFxuXHRcdC8vIFwiZGlzYWJsZWRcIixcblx0XHRcImFyaWEtZHJvcGVmZmVjdFwiLFxuXHRcdC8vIFwiZXJyb3JtZXNzYWdlXCIsXG5cdFx0XCJhcmlhLWZsb3d0b1wiLFxuXHRcdFwiYXJpYS1ncmFiYmVkXCIsXG5cdFx0Ly8gXCJoYXNwb3B1cFwiLFxuXHRcdFwiYXJpYS1oaWRkZW5cIixcblx0XHQvLyBcImludmFsaWRcIixcblx0XHRcImFyaWEta2V5c2hvcnRjdXRzXCIsXG5cdFx0XCJhcmlhLWxhYmVsXCIsXG5cdFx0XCJhcmlhLWxhYmVsbGVkYnlcIixcblx0XHRcImFyaWEtbGl2ZVwiLFxuXHRcdFwiYXJpYS1vd25zXCIsXG5cdFx0XCJhcmlhLXJlbGV2YW50XCIsXG5cdFx0XCJhcmlhLXJvbGVkZXNjcmlwdGlvblwiLFxuXHRdLnNvbWUoKGF0dHJpYnV0ZU5hbWUpID0+IHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0ZWxlbWVudC5oYXNBdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSkgJiZcblx0XHRcdCFwcm9oaWJpdGVkQXR0cmlidXRlc1tyb2xlXT8uaGFzKGF0dHJpYnV0ZU5hbWUpXG5cdFx0KTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGlnbm9yZVByZXNlbnRhdGlvbmFsUm9sZShcblx0ZWxlbWVudDogRWxlbWVudCxcblx0aW1wbGljaXRSb2xlOiBzdHJpbmdcbik6IGJvb2xlYW4ge1xuXHQvLyBodHRwczovL3Jhd2dpdC5jb20vdzNjL2FyaWEvc3RhYmxlLyNjb25mbGljdF9yZXNvbHV0aW9uX3ByZXNlbnRhdGlvbl9ub25lXG5cdHJldHVybiBoYXNHbG9iYWxBcmlhQXR0cmlidXRlcyhlbGVtZW50LCBpbXBsaWNpdFJvbGUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRSb2xlKGVsZW1lbnQ6IEVsZW1lbnQpOiBzdHJpbmcgfCBudWxsIHtcblx0Y29uc3QgZXhwbGljaXRSb2xlID0gZ2V0RXhwbGljaXRSb2xlKGVsZW1lbnQpO1xuXHRpZiAoZXhwbGljaXRSb2xlID09PSBudWxsIHx8IGV4cGxpY2l0Um9sZSA9PT0gXCJwcmVzZW50YXRpb25cIikge1xuXHRcdGNvbnN0IGltcGxpY2l0Um9sZSA9IGdldEltcGxpY2l0Um9sZShlbGVtZW50KTtcblx0XHRpZiAoXG5cdFx0XHRleHBsaWNpdFJvbGUgIT09IFwicHJlc2VudGF0aW9uXCIgfHxcblx0XHRcdGlnbm9yZVByZXNlbnRhdGlvbmFsUm9sZShlbGVtZW50LCBpbXBsaWNpdFJvbGUgfHwgXCJcIilcblx0XHQpIHtcblx0XHRcdHJldHVybiBpbXBsaWNpdFJvbGU7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGV4cGxpY2l0Um9sZTtcbn1cblxuZnVuY3Rpb24gZ2V0SW1wbGljaXRSb2xlKGVsZW1lbnQ6IEVsZW1lbnQpOiBzdHJpbmcgfCBudWxsIHtcblx0Y29uc3QgbWFwcGVkQnlUYWcgPSBsb2NhbE5hbWVUb1JvbGVNYXBwaW5nc1tnZXRMb2NhbE5hbWUoZWxlbWVudCldO1xuXHRpZiAobWFwcGVkQnlUYWcgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBtYXBwZWRCeVRhZztcblx0fVxuXG5cdHN3aXRjaCAoZ2V0TG9jYWxOYW1lKGVsZW1lbnQpKSB7XG5cdFx0Y2FzZSBcImFcIjpcblx0XHRjYXNlIFwiYXJlYVwiOlxuXHRcdGNhc2UgXCJsaW5rXCI6XG5cdFx0XHRpZiAoZWxlbWVudC5oYXNBdHRyaWJ1dGUoXCJocmVmXCIpKSB7XG5cdFx0XHRcdHJldHVybiBcImxpbmtcIjtcblx0XHRcdH1cblx0XHRcdGJyZWFrO1xuXHRcdGNhc2UgXCJpbWdcIjpcblx0XHRcdGlmIChcblx0XHRcdFx0ZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJhbHRcIikgPT09IFwiXCIgJiZcblx0XHRcdFx0IWlnbm9yZVByZXNlbnRhdGlvbmFsUm9sZShlbGVtZW50LCBcImltZ1wiKVxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybiBcInByZXNlbnRhdGlvblwiO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIFwiaW1nXCI7XG5cdFx0Y2FzZSBcImlucHV0XCI6IHtcblx0XHRcdGNvbnN0IHsgdHlwZSB9ID0gZWxlbWVudCBhcyBIVE1MSW5wdXRFbGVtZW50O1xuXHRcdFx0c3dpdGNoICh0eXBlKSB7XG5cdFx0XHRcdGNhc2UgXCJidXR0b25cIjpcblx0XHRcdFx0Y2FzZSBcImltYWdlXCI6XG5cdFx0XHRcdGNhc2UgXCJyZXNldFwiOlxuXHRcdFx0XHRjYXNlIFwic3VibWl0XCI6XG5cdFx0XHRcdFx0cmV0dXJuIFwiYnV0dG9uXCI7XG5cdFx0XHRcdGNhc2UgXCJjaGVja2JveFwiOlxuXHRcdFx0XHRjYXNlIFwicmFkaW9cIjpcblx0XHRcdFx0XHRyZXR1cm4gdHlwZTtcblx0XHRcdFx0Y2FzZSBcInJhbmdlXCI6XG5cdFx0XHRcdFx0cmV0dXJuIFwic2xpZGVyXCI7XG5cdFx0XHRcdGNhc2UgXCJlbWFpbFwiOlxuXHRcdFx0XHRjYXNlIFwidGVsXCI6XG5cdFx0XHRcdGNhc2UgXCJ0ZXh0XCI6XG5cdFx0XHRcdGNhc2UgXCJ1cmxcIjpcblx0XHRcdFx0XHRpZiAoZWxlbWVudC5oYXNBdHRyaWJ1dGUoXCJsaXN0XCIpKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gXCJjb21ib2JveFwiO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gXCJ0ZXh0Ym94XCI7XG5cblx0XHRcdFx0Y2FzZSBcInNlYXJjaFwiOlxuXHRcdFx0XHRcdGlmIChlbGVtZW50Lmhhc0F0dHJpYnV0ZShcImxpc3RcIikpIHtcblx0XHRcdFx0XHRcdHJldHVybiBcImNvbWJvYm94XCI7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiBcInNlYXJjaGJveFwiO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRjYXNlIFwic2VsZWN0XCI6XG5cdFx0XHRpZiAoXG5cdFx0XHRcdGVsZW1lbnQuaGFzQXR0cmlidXRlKFwibXVsdGlwbGVcIikgfHxcblx0XHRcdFx0KGVsZW1lbnQgYXMgSFRNTFNlbGVjdEVsZW1lbnQpLnNpemUgPiAxXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuIFwibGlzdGJveFwiO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIFwiY29tYm9ib3hcIjtcblx0fVxuXHRyZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gZ2V0RXhwbGljaXRSb2xlKGVsZW1lbnQ6IEVsZW1lbnQpOiBzdHJpbmcgfCBudWxsIHtcblx0Y29uc3Qgcm9sZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwicm9sZVwiKTtcblx0aWYgKHJvbGUgIT09IG51bGwpIHtcblx0XHRjb25zdCBleHBsaWNpdFJvbGUgPSByb2xlLnRyaW0oKS5zcGxpdChcIiBcIilbMF07XG5cdFx0Ly8gU3RyaW5nLnByb3RvdHlwZS5zcGxpdChzZXAsIGxpbWl0KSB3aWxsIGFsd2F5cyByZXR1cm4gYW4gYXJyYXkgd2l0aCBhdCBsZWFzdCBvbmUgbWVtYmVyXG5cdFx0Ly8gYXMgbG9uZyBhcyBsaW1pdCBpcyBlaXRoZXIgdW5kZWZpbmVkIG9yID4gMFxuXHRcdGlmIChleHBsaWNpdFJvbGUubGVuZ3RoID4gMCkge1xuXHRcdFx0cmV0dXJuIGV4cGxpY2l0Um9sZTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbnVsbDtcbn1cbiJdfQ==