{"version":3,"sources":["../../sources/polyfills/SetLike.ts"],"names":["SetLike","items","previousLength","item","callbackfn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBMA,O;AAGL,WAAA,OAAA,GAA6B;AAAA,QAAjBC,KAAiB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AAC5B,SAAA,KAAA,GAAA,KAAA;AACA;;;;WAED,SAAA,GAAA,CAAA,KAAA,EAAoB;AACnB,UAAI,KAAA,GAAA,CAAA,KAAA,MAAJ,KAAA,EAA+B;AAC9B,aAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AACA;;AACD,aAAA,IAAA;AACA;;;WACD,SAAA,KAAA,GAAc;AACb,WAAA,KAAA,GAAA,EAAA;AACA;;;WACD,SAAA,OAAA,CAAA,KAAA,EAA0B;AACzB,UAAMC,cAAc,GAAG,KAAA,KAAA,CAAvB,MAAA;AACA,WAAA,KAAA,GAAa,KAAA,KAAA,CAAA,MAAA,CAAkB,UAAA,IAAA,EAAA;AAAA,eAAUC,IAAI,KAAd,KAAA;AAA/B,OAAa,CAAb;AAEA,aAAOD,cAAc,KAAK,KAAA,KAAA,CAA1B,MAAA;AACA;;;WACD,SAAA,OAAA,CAAA,UAAA,EAAsE;AAAA,UAAA,KAAA,GAAA,IAAA;;AACrE,WAAA,KAAA,CAAA,OAAA,CAAmB,UAAA,IAAA,EAAU;AAC5BE,QAAAA,UAAU,CAAA,IAAA,EAAA,IAAA,EAAVA,KAAU,CAAVA;AADD,OAAA;AAGA;;;WACD,SAAA,GAAA,CAAA,KAAA,EAAuB;AACtB,aAAO,KAAA,KAAA,CAAA,OAAA,CAAA,KAAA,MAA8B,CAArC,CAAA;AACA;;;SAED,SAAA,GAAA,GAAmB;AAClB,aAAO,KAAA,KAAA,CAAP,MAAA;AACA;;;;;;eAGa,OAAA,GAAA,KAAA,WAAA,GAAA,GAAA,GAAmCJ,O","sourcesContent":["declare global {\n\tclass Set<T> {\n\t\t// es2015.collection.d.ts\n\t\tconstructor(items?: T[]);\n\t\tadd(value: T): this;\n\t\tclear(): void;\n\t\tdelete(value: T): boolean;\n\t\tforEach(\n\t\t\tcallbackfn: (value: T, value2: T, set: Set<T>) => void,\n\t\t\tthisArg?: unknown\n\t\t): void;\n\t\thas(value: T): boolean;\n\t\treadonly size: number;\n\n\t\t// es2015.iterable.d.ts\n\t\t// no  implemennted\n\t}\n}\n\n// for environments without Set we fallback to arrays with unique members\nclass SetLike<T> implements Set<T> {\n\tprivate items: T[];\n\n\tconstructor(items: T[] = []) {\n\t\tthis.items = items;\n\t}\n\n\tadd(value: T): this {\n\t\tif (this.has(value) === false) {\n\t\t\tthis.items.push(value);\n\t\t}\n\t\treturn this;\n\t}\n\tclear(): void {\n\t\tthis.items = [];\n\t}\n\tdelete(value: T): boolean {\n\t\tconst previousLength = this.items.length;\n\t\tthis.items = this.items.filter((item) => item !== value);\n\n\t\treturn previousLength !== this.items.length;\n\t}\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void): void {\n\t\tthis.items.forEach((item) => {\n\t\t\tcallbackfn(item, item, this);\n\t\t});\n\t}\n\thas(value: T): boolean {\n\t\treturn this.items.indexOf(value) !== -1;\n\t}\n\n\tget size(): number {\n\t\treturn this.items.length;\n\t}\n}\n\nexport default typeof Set === \"undefined\" ? Set : SetLike;\n"]}