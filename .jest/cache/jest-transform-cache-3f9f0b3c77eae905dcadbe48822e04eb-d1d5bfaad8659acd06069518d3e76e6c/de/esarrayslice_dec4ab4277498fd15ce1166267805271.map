{"version":3,"sources":["es.array.slice.js"],"names":["$","require","isObject","isArray","toAbsoluteIndex","toLength","toIndexedObject","createProperty","wellKnownSymbol","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","SPECIES","nativeSlice","slice","max","Math","target","proto","forced","start","end","O","length","k","fin","undefined","Constructor","result","n","constructor","Array","prototype","call"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,uBAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,0BAAtB;;AACA,IAAIE,OAAO,GAAGF,OAAO,yBAArB;;AACA,IAAIG,eAAe,GAAGH,OAAO,kCAA7B;;AACA,IAAII,QAAQ,GAAGJ,OAAO,0BAAtB;;AACA,IAAIK,eAAe,GAAGL,OAAO,kCAA7B;;AACA,IAAIM,cAAc,GAAGN,OAAO,gCAA5B;;AACA,IAAIO,eAAe,GAAGP,OAAO,kCAA7B;;AACA,IAAIQ,4BAA4B,GAAGR,OAAO,iDAA1C;;AAEA,IAAIS,mBAAmB,GAAGD,4BAA4B,CAAC,OAAD,CAAtD;AAEA,IAAIE,OAAO,GAAGH,eAAe,CAAC,SAAD,CAA7B;AACA,IAAII,WAAW,GAAG,GAAGC,KAArB;AACA,IAAIC,GAAG,GAAGC,IAAI,CAACD,GAAf;AAKAd,CAAC,CAAC;AAAEgB,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAE,CAACR;AAAzC,CAAD,EAAiE;AAChEG,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeM,KAAf,EAAsBC,GAAtB,EAA2B;AAChC,QAAIC,CAAC,GAAGf,eAAe,CAAC,IAAD,CAAvB;AACA,QAAIgB,MAAM,GAAGjB,QAAQ,CAACgB,CAAC,CAACC,MAAH,CAArB;AACA,QAAIC,CAAC,GAAGnB,eAAe,CAACe,KAAD,EAAQG,MAAR,CAAvB;AACA,QAAIE,GAAG,GAAGpB,eAAe,CAACgB,GAAG,KAAKK,SAAR,GAAoBH,MAApB,GAA6BF,GAA9B,EAAmCE,MAAnC,CAAzB;AAEA,QAAII,WAAJ,EAAiBC,MAAjB,EAAyBC,CAAzB;;AACA,QAAIzB,OAAO,CAACkB,CAAD,CAAX,EAAgB;AACdK,MAAAA,WAAW,GAAGL,CAAC,CAACQ,WAAhB;;AAEA,UAAI,OAAOH,WAAP,IAAsB,UAAtB,KAAqCA,WAAW,KAAKI,KAAhB,IAAyB3B,OAAO,CAACuB,WAAW,CAACK,SAAb,CAArE,CAAJ,EAAmG;AACjGL,QAAAA,WAAW,GAAGD,SAAd;AACD,OAFD,MAEO,IAAIvB,QAAQ,CAACwB,WAAD,CAAZ,EAA2B;AAChCA,QAAAA,WAAW,GAAGA,WAAW,CAACf,OAAD,CAAzB;AACA,YAAIe,WAAW,KAAK,IAApB,EAA0BA,WAAW,GAAGD,SAAd;AAC3B;;AACD,UAAIC,WAAW,KAAKI,KAAhB,IAAyBJ,WAAW,KAAKD,SAA7C,EAAwD;AACtD,eAAOb,WAAW,CAACoB,IAAZ,CAAiBX,CAAjB,EAAoBE,CAApB,EAAuBC,GAAvB,CAAP;AACD;AACF;;AACDG,IAAAA,MAAM,GAAG,KAAKD,WAAW,KAAKD,SAAhB,GAA4BK,KAA5B,GAAoCJ,WAAzC,EAAsDZ,GAAG,CAACU,GAAG,GAAGD,CAAP,EAAU,CAAV,CAAzD,CAAT;;AACA,SAAKK,CAAC,GAAG,CAAT,EAAYL,CAAC,GAAGC,GAAhB,EAAqBD,CAAC,IAAIK,CAAC,EAA3B;AAA+B,UAAIL,CAAC,IAAIF,CAAT,EAAYd,cAAc,CAACoB,MAAD,EAASC,CAAT,EAAYP,CAAC,CAACE,CAAD,CAAb,CAAd;AAA3C;;AACAI,IAAAA,MAAM,CAACL,MAAP,GAAgBM,CAAhB;AACA,WAAOD,MAAP;AACD;AAzB+D,CAAjE,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n"]}