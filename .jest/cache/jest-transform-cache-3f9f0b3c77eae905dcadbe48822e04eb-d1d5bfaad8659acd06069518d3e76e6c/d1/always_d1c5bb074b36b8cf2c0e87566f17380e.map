{"version":3,"sources":["always.js"],"names":["_curry1","require","always","val","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAgBC,OAAO,sBAAlC;;AAuBA,IAAIC,MAAM,GAAgBF,OAAO,CAAC,SAASE,MAAT,CAAgBC,GAAhB,EAAqB;AACrD,SAAO,YAAY;AACjB,WAAOA,GAAP;AACD,GAFD;AAGD,CAJgC,CAAjC;;AAKAC,MAAM,CAACC,OAAP,GAAiBH,MAAjB","sourcesContent":["var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\n\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nmodule.exports = always;"]}