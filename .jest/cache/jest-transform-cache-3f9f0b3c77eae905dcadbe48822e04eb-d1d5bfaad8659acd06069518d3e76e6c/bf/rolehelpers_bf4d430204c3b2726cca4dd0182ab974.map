{"version":3,"sources":["role-helpers.js"],"names":["Object","defineProperty","exports","value","getRoles","getImplicitAriaRoles","isSubtreeInaccessible","prettyRoles","isInaccessible","computeAriaSelected","computeAriaChecked","computeAriaPressed","computeAriaExpanded","computeHeadingLevel","logRoles","_ariaQuery","require","_domAccessibilityApi","_prettyDom","_config","elementRoleList","buildElementRoleList","elementRoles","element","hidden","getAttribute","window","ownerDocument","defaultView","getComputedStyle","display","options","isSubtreeInaccessibleImpl","visibility","currentElement","parentElement","currentNode","match","roles","elementRolesMap","makeElementSelector","name","attributes","map","attributeName","constraints","shouldNotExist","indexOf","join","getSelectorSpecificity","length","bySelectorSpecificity","leftSpecificity","specificity","rightSpecificity","node","typeTextIndex","findIndex","attribute","slice","type","matches","result","entries","Array","from","sort","container","flattenDOM","children","reduce","acc","child","filter","hasAttribute","split","rolesAcc","role","isArray","dom","elements","delimiterBar","repeat","elementsString","el","nameString","computeAccessibleName","computedStyleSupportsPseudoElements","getConfig","domString","prettyDOM","cloneNode","console","log","tagName","selected","checkBooleanAttribute","indeterminate","undefined","checked","attributeValue","implicitHeadingLevels","H1","H2","H3","H4","H5","H6","ariaLevelAttribute","Number"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRoles = getRoles;\nexports.getImplicitAriaRoles = getImplicitAriaRoles;\nexports.isSubtreeInaccessible = isSubtreeInaccessible;\nexports.prettyRoles = prettyRoles;\nexports.isInaccessible = isInaccessible;\nexports.computeAriaSelected = computeAriaSelected;\nexports.computeAriaChecked = computeAriaChecked;\nexports.computeAriaPressed = computeAriaPressed;\nexports.computeAriaExpanded = computeAriaExpanded;\nexports.computeHeadingLevel = computeHeadingLevel;\nexports.logRoles = void 0;\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\n\nvar _prettyDom = require(\"./pretty-dom\");\n\nvar _config = require(\"./config\");\n\nconst elementRoleList = buildElementRoleList(_ariaQuery.elementRoles);\n/**\n * @param {Element} element -\n * @returns {boolean} - `true` if `element` and its subtree are inaccessible\n */\n\nfunction isSubtreeInaccessible(element) {\n  if (element.hidden === true) {\n    return true;\n  }\n\n  if (element.getAttribute('aria-hidden') === 'true') {\n    return true;\n  }\n\n  const window = element.ownerDocument.defaultView;\n\n  if (window.getComputedStyle(element).display === 'none') {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param {Element} element -\n * @param {object} [options] -\n * @param {function (element: Element): boolean} options.isSubtreeInaccessible -\n * can be used to return cached results from previous isSubtreeInaccessible calls\n * @returns {boolean} true if excluded, otherwise false\n */\n\n\nfunction isInaccessible(element, options = {}) {\n  const {\n    isSubtreeInaccessible: isSubtreeInaccessibleImpl = isSubtreeInaccessible\n  } = options;\n  const window = element.ownerDocument.defaultView; // since visibility is inherited we can exit early\n\n  if (window.getComputedStyle(element).visibility === 'hidden') {\n    return true;\n  }\n\n  let currentElement = element;\n\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement)) {\n      return true;\n    }\n\n    currentElement = currentElement.parentElement;\n  }\n\n  return false;\n}\n\nfunction getImplicitAriaRoles(currentNode) {\n  // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n  for (const {\n    match,\n    roles\n  } of elementRoleList) {\n    if (match(currentNode)) {\n      return [...roles];\n    }\n  }\n\n  return [];\n}\n\nfunction buildElementRoleList(elementRolesMap) {\n  function makeElementSelector({\n    name,\n    attributes\n  }) {\n    return `${name}${attributes.map(({\n      name: attributeName,\n      value,\n      constraints = []\n    }) => {\n      const shouldNotExist = constraints.indexOf('undefined') !== -1;\n\n      if (shouldNotExist) {\n        return `:not([${attributeName}])`;\n      } else if (value) {\n        return `[${attributeName}=\"${value}\"]`;\n      } else {\n        return `[${attributeName}]`;\n      }\n    }).join('')}`;\n  }\n\n  function getSelectorSpecificity({\n    attributes = []\n  }) {\n    return attributes.length;\n  }\n\n  function bySelectorSpecificity({\n    specificity: leftSpecificity\n  }, {\n    specificity: rightSpecificity\n  }) {\n    return rightSpecificity - leftSpecificity;\n  }\n\n  function match(element) {\n    return node => {\n      let {\n        attributes = []\n      } = element; // https://github.com/testing-library/dom-testing-library/issues/814\n\n      const typeTextIndex = attributes.findIndex(attribute => attribute.value && attribute.name === 'type' && attribute.value === 'text');\n\n      if (typeTextIndex >= 0) {\n        // not using splice to not mutate the attributes array\n        attributes = [...attributes.slice(0, typeTextIndex), ...attributes.slice(typeTextIndex + 1)];\n\n        if (node.type !== 'text') {\n          return false;\n        }\n      }\n\n      return node.matches(makeElementSelector({ ...element,\n        attributes\n      }));\n    };\n  }\n\n  let result = []; // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n\n  for (const [element, roles] of elementRolesMap.entries()) {\n    result = [...result, {\n      match: match(element),\n      roles: Array.from(roles),\n      specificity: getSelectorSpecificity(element)\n    }];\n  }\n\n  return result.sort(bySelectorSpecificity);\n}\n\nfunction getRoles(container, {\n  hidden = false\n} = {}) {\n  function flattenDOM(node) {\n    return [node, ...Array.from(node.children).reduce((acc, child) => [...acc, ...flattenDOM(child)], [])];\n  }\n\n  return flattenDOM(container).filter(element => {\n    return hidden === false ? isInaccessible(element) === false : true;\n  }).reduce((acc, node) => {\n    let roles = []; // TODO: This violates html-aria which does not allow any role on every element\n\n    if (node.hasAttribute('role')) {\n      roles = node.getAttribute('role').split(' ').slice(0, 1);\n    } else {\n      roles = getImplicitAriaRoles(node);\n    }\n\n    return roles.reduce((rolesAcc, role) => Array.isArray(rolesAcc[role]) ? { ...rolesAcc,\n      [role]: [...rolesAcc[role], node]\n    } : { ...rolesAcc,\n      [role]: [node]\n    }, acc);\n  }, {});\n}\n\nfunction prettyRoles(dom, {\n  hidden\n}) {\n  const roles = getRoles(dom, {\n    hidden\n  }); // We prefer to skip generic role, we don't recommend it\n\n  return Object.entries(roles).filter(([role]) => role !== 'generic').map(([role, elements]) => {\n    const delimiterBar = '-'.repeat(50);\n    const elementsString = elements.map(el => {\n      const nameString = `Name \"${(0, _domAccessibilityApi.computeAccessibleName)(el, {\n        computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n      })}\":\\n`;\n      const domString = (0, _prettyDom.prettyDOM)(el.cloneNode(false));\n      return `${nameString}${domString}`;\n    }).join('\\n\\n');\n    return `${role}:\\n\\n${elementsString}\\n\\n${delimiterBar}`;\n  }).join('\\n');\n}\n\nconst logRoles = (dom, {\n  hidden = false\n} = {}) => console.log(prettyRoles(dom, {\n  hidden\n}));\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)selected, undefined if not selectable\n */\n\n\nexports.logRoles = logRoles;\n\nfunction computeAriaSelected(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-97\n  if (element.tagName === 'OPTION') {\n    return element.selected;\n  } // explicit value\n\n\n  return checkBooleanAttribute(element, 'aria-selected');\n}\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)checked, undefined if not checked-able\n */\n\n\nfunction computeAriaChecked(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-56\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-67\n  if ('indeterminate' in element && element.indeterminate) {\n    return undefined;\n  }\n\n  if ('checked' in element) {\n    return element.checked;\n  } // explicit value\n\n\n  return checkBooleanAttribute(element, 'aria-checked');\n}\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)pressed, undefined if not press-able\n */\n\n\nfunction computeAriaPressed(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-pressed\n  return checkBooleanAttribute(element, 'aria-pressed');\n}\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)expanded, undefined if not expand-able\n */\n\n\nfunction computeAriaExpanded(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-expanded\n  return checkBooleanAttribute(element, 'aria-expanded');\n}\n\nfunction checkBooleanAttribute(element, attribute) {\n  const attributeValue = element.getAttribute(attribute);\n\n  if (attributeValue === 'true') {\n    return true;\n  }\n\n  if (attributeValue === 'false') {\n    return false;\n  }\n\n  return undefined;\n}\n/**\n * @param {Element} element -\n * @returns {number | undefined} - number if implicit heading or aria-level present, otherwise undefined\n */\n\n\nfunction computeHeadingLevel(element) {\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  const implicitHeadingLevels = {\n    H1: 1,\n    H2: 2,\n    H3: 3,\n    H4: 4,\n    H5: 5,\n    H6: 6\n  }; // explicit aria-level value\n  // https://www.w3.org/TR/wai-aria-1.2/#aria-level\n\n  const ariaLevelAttribute = element.getAttribute('aria-level') && Number(element.getAttribute('aria-level'));\n  return ariaLevelAttribute || implicitHeadingLevels[element.tagName];\n}"]}