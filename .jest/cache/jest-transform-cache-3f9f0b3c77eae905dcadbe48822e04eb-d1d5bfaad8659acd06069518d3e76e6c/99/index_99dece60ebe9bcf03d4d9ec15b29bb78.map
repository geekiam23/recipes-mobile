{"version":3,"sources":["index.js"],"names":["os","require","tty","hasFlag","process","env","forceColor","FORCE_COLOR","length","Math","min","parseInt","translateLevel","level","hasBasic","has256","has16m","supportsColor","haveStream","streamIsTTY","undefined","TERM","platform","osRelease","release","split","Number","some","sign","CI_NAME","test","TEAMCITY_VERSION","COLORTERM","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","getSupportLevel","stream","isTTY","module","exports","stdout","isatty","stderr"],"mappings":"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","sourcesContent":["'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n"]}