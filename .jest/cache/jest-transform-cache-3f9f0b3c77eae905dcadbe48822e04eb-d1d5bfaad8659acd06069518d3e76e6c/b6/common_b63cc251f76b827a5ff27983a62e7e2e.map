{"version":3,"sources":["common.js"],"names":["debug","require","set","timers","url","util","normalizeRequestOptions","options","proto","port","host","hostname","split","length","forEach","attr","toLowerCase","isUtf8Representable","buffer","utfEncodedBuffer","toString","reconstructedBuffer","Buffer","from","equals","requestOverrides","overrideRequests","newRequest","moduleName","module","http","https","overriddenRequest","request","overriddenGet","get","Error","input","callback","bind","req","end","restoreOverriddenRequests","Object","entries","normalizeOrigin","hostHasPort","includes","portIsStandard","portStr","stringifyRequest","body","method","path","origin","log","headers","JSON","stringify","isContentEncoded","contentEncoding","encoder","undefined","isJSONContent","contentType","String","startsWith","headersFieldNamesToLowerCase","isPlainObject","lowerCaseHeaders","fieldName","fieldValue","key","headersFieldsArrayToLowerCase","Set","map","headersInputToRawArray","Array","isArray","types","isMap","concat","k","v","headersArrayToObject","rawHeaders","accumulator","forEachHeader","value","addHeaderLine","noDuplicatesHeaders","name","values","push","has","separator","join","deleteHeadersField","fieldNameToDelete","lowerCaseFieldNameToDelete","keys","filter","i","percentDecode","str","decodeURIComponent","replace","e","percentEncode","encodeURIComponent","c","charCodeAt","toUpperCase","matchStringOrRegexp","target","pattern","targetStr","RegExp","lastIndex","test","formatQueryValue","stringFormattingFn","val","idx","reduce","acc","subKey","subVal","subPair","isStream","obj","isBuffer","setEncoding","normalizeClientRequestArgs","cb","urlToOptions","URL","protocol","slice","hash","search","pathname","href","Number","username","password","auth","dataEqual","expected","actual","expand","deepEqual","every","expVal","allKeys","isObjectLike","tag","prototype","call","getPrototypeOf","mapValue","object","iteratee","result","timeouts","intervals","immediates","wrapTimer","timer","ids","id","setTimeout","setInterval","setImmediate","clearTimer","clear","shift","removeAllTimers","clearTimeout","clearInterval","clearImmediate","isRequestDestroyed","destroyed","aborted","socket","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst debug = require('debug')('nock.common')\nconst set = require('lodash.set')\nconst timers = require('timers')\nconst url = require('url')\nconst util = require('util')\n\n/**\n * Normalizes the request options so that it always has `host` property.\n *\n * @param  {Object} options - a parsed options object of the request\n */\nfunction normalizeRequestOptions(options) {\n  options.proto = options.proto || 'http'\n  options.port = options.port || (options.proto === 'http' ? 80 : 443)\n  if (options.host) {\n    debug('options.host:', options.host)\n    if (!options.hostname) {\n      if (options.host.split(':').length === 2) {\n        options.hostname = options.host.split(':')[0]\n      } else {\n        options.hostname = options.host\n      }\n    }\n  }\n  debug('options.hostname in the end: %j', options.hostname)\n  options.host = `${options.hostname || 'localhost'}:${options.port}`\n  debug('options.host in the end: %j', options.host)\n\n  /// lowercase host names\n  ;['hostname', 'host'].forEach(function (attr) {\n    if (options[attr]) {\n      options[attr] = options[attr].toLowerCase()\n    }\n  })\n\n  return options\n}\n\n/**\n * Returns true if the data contained in buffer can be reconstructed\n * from its utf8 representation.\n *\n * @param  {Object} buffer - a Buffer object\n * @returns {boolean}\n */\nfunction isUtf8Representable(buffer) {\n  const utfEncodedBuffer = buffer.toString('utf8')\n  const reconstructedBuffer = Buffer.from(utfEncodedBuffer, 'utf8')\n  return reconstructedBuffer.equals(buffer)\n}\n\n//  Array where all information about all the overridden requests are held.\nlet requestOverrides = {}\n\n/**\n * Overrides the current `request` function of `http` and `https` modules with\n * our own version which intercepts issues HTTP/HTTPS requests and forwards them\n * to the given `newRequest` function.\n *\n * @param  {Function} newRequest - a function handling requests; it accepts four arguments:\n *   - proto - a string with the overridden module's protocol name (either `http` or `https`)\n *   - overriddenRequest - the overridden module's request function already bound to module's object\n *   - options - the options of the issued request\n *   - callback - the callback of the issued request\n */\nfunction overrideRequests(newRequest) {\n  debug('overriding requests')\n  ;['http', 'https'].forEach(function (proto) {\n    debug('- overriding request for', proto)\n\n    const moduleName = proto // 1 to 1 match of protocol and module is fortunate :)\n    const module = {\n      http: require('http'),\n      https: require('https'),\n    }[moduleName]\n    const overriddenRequest = module.request\n    const overriddenGet = module.get\n\n    if (requestOverrides[moduleName]) {\n      throw new Error(\n        `Module's request already overridden for ${moduleName} protocol.`\n      )\n    }\n\n    //  Store the properties of the overridden request so that it can be restored later on.\n    requestOverrides[moduleName] = {\n      module,\n      request: overriddenRequest,\n      get: overriddenGet,\n    }\n    // https://nodejs.org/api/http.html#http_http_request_url_options_callback\n    module.request = function (input, options, callback) {\n      return newRequest(proto, overriddenRequest.bind(module), [\n        input,\n        options,\n        callback,\n      ])\n    }\n    // https://nodejs.org/api/http.html#http_http_get_options_callback\n    module.get = function (input, options, callback) {\n      const req = newRequest(proto, overriddenGet.bind(module), [\n        input,\n        options,\n        callback,\n      ])\n      req.end()\n      return req\n    }\n\n    debug('- overridden request for', proto)\n  })\n}\n\n/**\n * Restores `request` function of `http` and `https` modules to values they\n * held before they were overridden by us.\n */\nfunction restoreOverriddenRequests() {\n  debug('restoring requests')\n  Object.entries(requestOverrides).forEach(\n    ([proto, { module, request, get }]) => {\n      debug('- restoring request for', proto)\n      module.request = request\n      module.get = get\n      debug('- restored request for', proto)\n    }\n  )\n  requestOverrides = {}\n}\n\n/**\n * In WHATWG URL vernacular, this returns the origin portion of a URL.\n * However, the port is not included if it's standard and not already present on the host.\n */\nfunction normalizeOrigin(proto, host, port) {\n  const hostHasPort = host.includes(':')\n  const portIsStandard =\n    (proto === 'http' && (port === 80 || port === '80')) ||\n    (proto === 'https' && (port === 443 || port === '443'))\n  const portStr = hostHasPort || portIsStandard ? '' : `:${port}`\n\n  return `${proto}://${host}${portStr}`\n}\n\n/**\n * Get high level information about request as string\n * @param  {Object} options\n * @param  {string} options.method\n * @param  {number|string} options.port\n * @param  {string} options.proto Set internally. always http or https\n * @param  {string} options.hostname\n * @param  {string} options.path\n * @param  {Object} options.headers\n * @param  {string} body\n * @return {string}\n */\nfunction stringifyRequest(options, body) {\n  const { method = 'GET', path = '', port } = options\n  const origin = normalizeOrigin(options.proto, options.hostname, port)\n\n  const log = {\n    method,\n    url: `${origin}${path}`,\n    headers: options.headers,\n  }\n\n  if (body) {\n    log.body = body\n  }\n\n  return JSON.stringify(log, null, 2)\n}\n\nfunction isContentEncoded(headers) {\n  const contentEncoding = headers['content-encoding']\n  return typeof contentEncoding === 'string' && contentEncoding !== ''\n}\n\nfunction contentEncoding(headers, encoder) {\n  const contentEncoding = headers['content-encoding']\n  return contentEncoding !== undefined && contentEncoding.toString() === encoder\n}\n\nfunction isJSONContent(headers) {\n  // https://tools.ietf.org/html/rfc8259\n  const contentType = String(headers['content-type'] || '').toLowerCase()\n  return contentType.startsWith('application/json')\n}\n\n/**\n * Return a new object with all field names of the headers lower-cased.\n *\n * Duplicates throw an error.\n */\nfunction headersFieldNamesToLowerCase(headers) {\n  if (!isPlainObject(headers)) {\n    throw Error('Headers must be provided as an object')\n  }\n\n  const lowerCaseHeaders = {}\n  Object.entries(headers).forEach(([fieldName, fieldValue]) => {\n    const key = fieldName.toLowerCase()\n    if (lowerCaseHeaders[key] !== undefined) {\n      throw Error(\n        `Failed to convert header keys to lower case due to field name conflict: ${key}`\n      )\n    }\n    lowerCaseHeaders[key] = fieldValue\n  })\n\n  return lowerCaseHeaders\n}\n\nconst headersFieldsArrayToLowerCase = headers => [\n  ...new Set(headers.map(fieldName => fieldName.toLowerCase())),\n]\n\n/**\n * Converts the various accepted formats of headers into a flat array representing \"raw headers\".\n *\n * Nock allows headers to be provided as a raw array, a plain object, or a Map.\n *\n * While all the header names are expected to be strings, the values are left intact as they can\n * be functions, strings, or arrays of strings.\n *\n *  https://nodejs.org/api/http.html#http_message_rawheaders\n */\nfunction headersInputToRawArray(headers) {\n  if (headers === undefined) {\n    return []\n  }\n\n  if (Array.isArray(headers)) {\n    // If the input is an array, assume it's already in the raw format and simply return a copy\n    // but throw an error if there aren't an even number of items in the array\n    if (headers.length % 2) {\n      throw new Error(\n        `Raw headers must be provided as an array with an even number of items. [fieldName, value, ...]`\n      )\n    }\n    return [...headers]\n  }\n\n  // [].concat(...) is used instead of Array.flat until v11 is the minimum Node version\n  if (util.types.isMap(headers)) {\n    return [].concat(...Array.from(headers, ([k, v]) => [k.toString(), v]))\n  }\n\n  if (isPlainObject(headers)) {\n    return [].concat(...Object.entries(headers))\n  }\n\n  throw new Error(\n    `Headers must be provided as an array of raw values, a Map, or a plain Object. ${headers}`\n  )\n}\n\n/**\n * Converts an array of raw headers to an object, using the same rules as Nodes `http.IncomingMessage.headers`.\n *\n * Header names/keys are lower-cased.\n */\nfunction headersArrayToObject(rawHeaders) {\n  if (!Array.isArray(rawHeaders)) {\n    throw Error('Expected a header array')\n  }\n\n  const accumulator = {}\n\n  forEachHeader(rawHeaders, (value, fieldName) => {\n    addHeaderLine(accumulator, fieldName, value)\n  })\n\n  return accumulator\n}\n\nconst noDuplicatesHeaders = new Set([\n  'age',\n  'authorization',\n  'content-length',\n  'content-type',\n  'etag',\n  'expires',\n  'from',\n  'host',\n  'if-modified-since',\n  'if-unmodified-since',\n  'last-modified',\n  'location',\n  'max-forwards',\n  'proxy-authorization',\n  'referer',\n  'retry-after',\n  'user-agent',\n])\n\n/**\n * Set key/value data in accordance with Node's logic for folding duplicate headers.\n *\n * The `value` param should be a function, string, or array of strings.\n *\n * Node's docs and source:\n * https://nodejs.org/api/http.html#http_message_headers\n * https://github.com/nodejs/node/blob/908292cf1f551c614a733d858528ffb13fb3a524/lib/_http_incoming.js#L245\n *\n * Header names are lower-cased.\n * Duplicates in raw headers are handled in the following ways, depending on the header name:\n * - Duplicates of field names listed in `noDuplicatesHeaders` (above) are discarded.\n * - `set-cookie` is always an array. Duplicates are added to the array.\n * - For duplicate `cookie` headers, the values are joined together with '; '.\n * - For all other headers, the values are joined together with ', '.\n *\n * Node's implementation is larger because it highly optimizes for not having to call `toLowerCase()`.\n * We've opted to always call `toLowerCase` in exchange for a more concise function.\n *\n * While Node has the luxury of knowing `value` is always a string, we do an extra step of coercion at the top.\n */\nfunction addHeaderLine(headers, name, value) {\n  let values // code below expects `values` to be an array of strings\n  if (typeof value === 'function') {\n    // Function values are evaluated towards the end of the response, before that we use a placeholder\n    // string just to designate that the header exists. Useful when `Content-Type` is set with a function.\n    values = [value.name]\n  } else if (Array.isArray(value)) {\n    values = value.map(String)\n  } else {\n    values = [String(value)]\n  }\n\n  const key = name.toLowerCase()\n  if (key === 'set-cookie') {\n    // Array header -- only Set-Cookie at the moment\n    if (headers['set-cookie'] === undefined) {\n      headers['set-cookie'] = values\n    } else {\n      headers['set-cookie'].push(...values)\n    }\n  } else if (noDuplicatesHeaders.has(key)) {\n    if (headers[key] === undefined) {\n      // Drop duplicates\n      headers[key] = values[0]\n    }\n  } else {\n    if (headers[key] !== undefined) {\n      values = [headers[key], ...values]\n    }\n\n    const separator = key === 'cookie' ? '; ' : ', '\n    headers[key] = values.join(separator)\n  }\n}\n\n/**\n * Deletes the given `fieldName` property from `headers` object by performing\n * case-insensitive search through keys.\n *\n * @headers   {Object} headers - object of header field names and values\n * @fieldName {String} field name - string with the case-insensitive field name\n */\nfunction deleteHeadersField(headers, fieldNameToDelete) {\n  if (!isPlainObject(headers)) {\n    throw Error('headers must be an object')\n  }\n\n  if (typeof fieldNameToDelete !== 'string') {\n    throw Error('field name must be a string')\n  }\n\n  const lowerCaseFieldNameToDelete = fieldNameToDelete.toLowerCase()\n\n  // Search through the headers and delete all values whose field name matches the given field name.\n  Object.keys(headers)\n    .filter(fieldName => fieldName.toLowerCase() === lowerCaseFieldNameToDelete)\n    .forEach(fieldName => delete headers[fieldName])\n}\n\n/**\n * Utility for iterating over a raw headers array.\n *\n * The callback is called with:\n *  - The header value. string, array of strings, or a function\n *  - The header field name. string\n *  - Index of the header field in the raw header array.\n */\nfunction forEachHeader(rawHeaders, callback) {\n  for (let i = 0; i < rawHeaders.length; i += 2) {\n    callback(rawHeaders[i + 1], rawHeaders[i], i)\n  }\n}\n\nfunction percentDecode(str) {\n  try {\n    return decodeURIComponent(str.replace(/\\+/g, ' '))\n  } catch (e) {\n    return str\n  }\n}\n\n/**\n * URI encode the provided string, stringently adhering to RFC 3986.\n *\n * RFC 3986 reserves !, ', (, ), and * but encodeURIComponent does not encode them so we do it manually.\n *\n * https://tools.ietf.org/html/rfc3986\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\n */\nfunction percentEncode(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n  })\n}\n\nfunction matchStringOrRegexp(target, pattern) {\n  const targetStr =\n    target === undefined || target === null ? '' : String(target)\n\n  if (pattern instanceof RegExp) {\n    // if the regexp happens to have a global flag, we want to ensure we test the entire target\n    pattern.lastIndex = 0\n    return pattern.test(targetStr)\n  }\n  return targetStr === String(pattern)\n}\n\n/**\n * Formats a query parameter.\n *\n * @param key                The key of the query parameter to format.\n * @param value              The value of the query parameter to format.\n * @param stringFormattingFn The function used to format string values. Can\n *                           be used to encode or decode the query value.\n *\n * @returns *[] the formatted [key, value] pair.\n */\nfunction formatQueryValue(key, value, stringFormattingFn) {\n  // TODO: Probably refactor code to replace `switch(true)` with `if`/`else`.\n  switch (true) {\n    case typeof value === 'number': // fall-through\n    case typeof value === 'boolean':\n      value = value.toString()\n      break\n    case value === null:\n    case value === undefined:\n      value = ''\n      break\n    case typeof value === 'string':\n      if (stringFormattingFn) {\n        value = stringFormattingFn(value)\n      }\n      break\n    case value instanceof RegExp:\n      break\n    case Array.isArray(value): {\n      value = value.map(function (val, idx) {\n        return formatQueryValue(idx, val, stringFormattingFn)[1]\n      })\n      break\n    }\n    case typeof value === 'object': {\n      value = Object.entries(value).reduce(function (acc, [subKey, subVal]) {\n        const subPair = formatQueryValue(subKey, subVal, stringFormattingFn)\n        acc[subPair[0]] = subPair[1]\n\n        return acc\n      }, {})\n      break\n    }\n  }\n\n  if (stringFormattingFn) key = stringFormattingFn(key)\n  return [key, value]\n}\n\nfunction isStream(obj) {\n  return (\n    obj &&\n    typeof obj !== 'string' &&\n    !Buffer.isBuffer(obj) &&\n    typeof obj.setEncoding === 'function'\n  )\n}\n\n/**\n * Converts the arguments from the various signatures of http[s].request into a standard\n * options object and an optional callback function.\n *\n * https://nodejs.org/api/http.html#http_http_request_url_options_callback\n *\n * Taken from the beginning of the native `ClientRequest`.\n * https://github.com/nodejs/node/blob/908292cf1f551c614a733d858528ffb13fb3a524/lib/_http_client.js#L68\n */\nfunction normalizeClientRequestArgs(input, options, cb) {\n  if (typeof input === 'string') {\n    input = urlToOptions(new url.URL(input))\n  } else if (input instanceof url.URL) {\n    input = urlToOptions(input)\n  } else {\n    cb = options\n    options = input\n    input = null\n  }\n\n  if (typeof options === 'function') {\n    cb = options\n    options = input || {}\n  } else {\n    options = Object.assign(input || {}, options)\n  }\n\n  return { options, callback: cb }\n}\n\n/**\n * Utility function that converts a URL object into an ordinary\n * options object as expected by the http.request and https.request APIs.\n *\n * This was copied from Node's source\n * https://github.com/nodejs/node/blob/908292cf1f551c614a733d858528ffb13fb3a524/lib/internal/url.js#L1257\n */\nfunction urlToOptions(url) {\n  const options = {\n    protocol: url.protocol,\n    hostname:\n      typeof url.hostname === 'string' && url.hostname.startsWith('[')\n        ? url.hostname.slice(1, -1)\n        : url.hostname,\n    hash: url.hash,\n    search: url.search,\n    pathname: url.pathname,\n    path: `${url.pathname}${url.search || ''}`,\n    href: url.href,\n  }\n  if (url.port !== '') {\n    options.port = Number(url.port)\n  }\n  if (url.username || url.password) {\n    options.auth = `${url.username}:${url.password}`\n  }\n  return options\n}\n\n/**\n * Determines if request data matches the expected schema.\n *\n * Used for comparing decoded search parameters, request body JSON objects,\n * and URL decoded request form bodies.\n *\n * Performs a general recursive strict comparision with two caveats:\n *  - The expected data can use regexp to compare values\n *  - JSON path notation and nested objects are considered equal\n */\nconst dataEqual = (expected, actual) => {\n  if (isPlainObject(expected)) {\n    expected = expand(expected)\n  }\n  if (isPlainObject(actual)) {\n    actual = expand(actual)\n  }\n  return deepEqual(expected, actual)\n}\n\n/**\n * Converts flat objects whose keys use JSON path notation to nested objects.\n *\n * The input object is not mutated.\n *\n * @example\n * { 'foo[bar][0]': 'baz' } -> { foo: { bar: [ 'baz' ] } }\n */\nconst expand = input =>\n  Object.entries(input).reduce((acc, [k, v]) => set(acc, k, v), {})\n\n/**\n * Performs a recursive strict comparison between two values.\n *\n * Expected values or leaf nodes of expected object values that are RegExp use test() for comparison.\n */\nfunction deepEqual(expected, actual) {\n  debug('deepEqual comparing', typeof expected, expected, typeof actual, actual)\n  if (expected instanceof RegExp) {\n    return expected.test(actual)\n  }\n\n  if (Array.isArray(expected) && Array.isArray(actual)) {\n    if (expected.length !== actual.length) {\n      return false\n    }\n\n    return expected.every((expVal, idx) => deepEqual(expVal, actual[idx]))\n  }\n\n  if (isPlainObject(expected) && isPlainObject(actual)) {\n    const allKeys = Array.from(\n      new Set(Object.keys(expected).concat(Object.keys(actual)))\n    )\n\n    return allKeys.every(key => deepEqual(expected[key], actual[key]))\n  }\n\n  return expected === actual\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n * https://github.com/lodash/lodash/blob/588bf3e20db0ae039a822a14a8fa238c5b298e65/isPlainObject.js\n *\n * @param {*} value The value to check.\n * @return {boolean}\n */\nfunction isPlainObject(value) {\n  const isObjectLike = typeof value === 'object' && value !== null\n  const tag = Object.prototype.toString.call(value)\n  if (!isObjectLike || tag !== '[object Object]') {\n    return false\n  }\n  if (Object.getPrototypeOf(value) === null) {\n    return true\n  }\n  let proto = value\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto)\n  }\n  return Object.getPrototypeOf(value) === proto\n}\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. (iteration order is not guaranteed)\n * The iteratee is invoked with three arguments: (value, key, object).\n * https://github.com/lodash/lodash/blob/588bf3e20db0ae039a822a14a8fa238c5b298e65/mapValue.js\n *\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n */\nfunction mapValue(object, iteratee) {\n  object = Object(object)\n  const result = {}\n\n  Object.keys(object).forEach(key => {\n    result[key] = iteratee(object[key], key, object)\n  })\n  return result\n}\n\nconst timeouts = []\nconst intervals = []\nconst immediates = []\n\nconst wrapTimer = (timer, ids) => (...args) => {\n  const id = timer(...args)\n  ids.push(id)\n  return id\n}\n\nconst setTimeout = wrapTimer(timers.setTimeout, timeouts)\nconst setInterval = wrapTimer(timers.setInterval, intervals)\nconst setImmediate = wrapTimer(timers.setImmediate, immediates)\n\nfunction clearTimer(clear, ids) {\n  while (ids.length) {\n    clear(ids.shift())\n  }\n}\n\nfunction removeAllTimers() {\n  clearTimer(clearTimeout, timeouts)\n  clearTimer(clearInterval, intervals)\n  clearTimer(clearImmediate, immediates)\n}\n\n/**\n * Check if the Client Request has been cancelled.\n *\n * Until Node 14 is the minimum, we need to look at both flags to see if the request has been cancelled.\n * The two flags have the same purpose, but the Node maintainers are migrating from `abort(ed)` to\n * `destroy(ed)` terminology, to be more consistent with `stream.Writable`.\n * In Node 14.x+, Calling `abort()` will set both `aborted` and `destroyed` to true, however,\n * calling `destroy()` will only set `destroyed` to true.\n * Falling back on checking if the socket is destroyed to cover the case of Node <14.x where\n * `destroy()` is called, but `destroyed` is undefined.\n *\n * Node Client Request history:\n * - `request.abort()`: Added in: v0.3.8, Deprecated since: v14.1.0, v13.14.0\n * - `request.aborted`: Added in: v0.11.14, Became a boolean instead of a timestamp: v11.0.0, Not deprecated (yet)\n * - `request.destroy()`: Added in: v0.3.0\n * - `request.destroyed`: Added in: v14.1.0, v13.14.0\n *\n * @param {ClientRequest} req\n * @returns {boolean}\n */\nfunction isRequestDestroyed(req) {\n  return !!(\n    req.destroyed === true ||\n    req.aborted ||\n    (req.socket && req.socket.destroyed)\n  )\n}\n\nmodule.exports = {\n  contentEncoding,\n  dataEqual,\n  deleteHeadersField,\n  forEachHeader,\n  formatQueryValue,\n  headersArrayToObject,\n  headersFieldNamesToLowerCase,\n  headersFieldsArrayToLowerCase,\n  headersInputToRawArray,\n  isContentEncoded,\n  isJSONContent,\n  isPlainObject,\n  isRequestDestroyed,\n  isStream,\n  isUtf8Representable,\n  mapValue,\n  matchStringOrRegexp,\n  normalizeClientRequestArgs,\n  normalizeOrigin,\n  normalizeRequestOptions,\n  overrideRequests,\n  percentDecode,\n  percentEncode,\n  removeAllTimers,\n  restoreOverriddenRequests,\n  setImmediate,\n  setInterval,\n  setTimeout,\n  stringifyRequest,\n}\n"]}