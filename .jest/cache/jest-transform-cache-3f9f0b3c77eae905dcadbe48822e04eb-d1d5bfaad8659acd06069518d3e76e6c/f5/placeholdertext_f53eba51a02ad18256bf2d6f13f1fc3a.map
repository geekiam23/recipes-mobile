{"version":3,"sources":["placeholder-text.js"],"names":["Object","defineProperty","exports","value","findByPlaceholderText","findAllByPlaceholderText","getAllByPlaceholderText","getByPlaceholderText","queryAllByPlaceholderText","queryByPlaceholderText","_queryHelpers","require","_helpers","_allUtils","args","checkContainerType","queryAllByAttribute","getMultipleError","c","text","getMissingError","queryAllByPlaceholderTextWithSuggestions","wrapAllByQueryWithSuggestion","name","buildQueries"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,qBAAR,GAAgCF,OAAO,CAACG,wBAAR,GAAmCH,OAAO,CAACI,uBAAR,GAAkCJ,OAAO,CAACK,oBAAR,GAA+BL,OAAO,CAACM,yBAAR,GAAoCN,OAAO,CAACO,sBAAR,GAAiC,KAAK,CAA9M;;AAEA,IAAIC,aAAa,GAAGC,OAAO,oBAA3B;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,cAAtB;;AAEA,IAAIE,SAAS,GAAGF,OAAO,eAAvB;;AAEA,IAAMH,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAa;AAAA,oCAATM,IAAS;AAATA,IAAAA,IAAS;AAAA;;AAC7C,GAAC,GAAGF,QAAQ,CAACG,kBAAb,EAAiCD,IAAI,CAAC,CAAD,CAArC;AAIA,SAAO,CAAC,GAAGD,SAAS,CAACG,mBAAd,iBAAmC,aAAnC,SAAqDF,IAArD,EAAP;AACD,CAND;;AAQA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAIC,IAAJ;AAAA,oEAAsEA,IAAtE;AAAA,CAAzB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACF,CAAD,EAAIC,IAAJ;AAAA,sEAAwEA,IAAxE;AAAA,CAAxB;;AAEA,IAAME,wCAAwC,GAAG,CAAC,GAAGX,aAAa,CAACY,4BAAlB,EAAgDd,yBAAhD,EAA2EA,yBAAyB,CAACe,IAArG,EAA2G,UAA3G,CAAjD;AACArB,OAAO,CAACM,yBAAR,GAAoCa,wCAApC;;AACA,WAAiI,CAAC,GAAGR,SAAS,CAACW,YAAd,EAA4BhB,yBAA5B,EAAuDS,gBAAvD,EAAyEG,eAAzE,CAAjI;AAAA;AAAA,IAAOX,sBAAP;AAAA,IAA+BH,uBAA/B;AAAA,IAAwDC,oBAAxD;AAAA,IAA8EF,wBAA9E;AAAA,IAAwGD,qBAAxG;;AACAF,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC;AACAF,OAAO,CAACG,wBAAR,GAAmCA,wBAAnC;AACAH,OAAO,CAACK,oBAAR,GAA+BA,oBAA/B;AACAL,OAAO,CAACI,uBAAR,GAAkCA,uBAAlC;AACAJ,OAAO,CAACO,sBAAR,GAAiCA,sBAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findByPlaceholderText = exports.findAllByPlaceholderText = exports.getAllByPlaceholderText = exports.getByPlaceholderText = exports.queryAllByPlaceholderText = exports.queryByPlaceholderText = void 0;\n\nvar _queryHelpers = require(\"../query-helpers\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _allUtils = require(\"./all-utils\");\n\nconst queryAllByPlaceholderText = (...args) => {\n  (0, _helpers.checkContainerType)(args[0]); // TODO: Remove ignore after `queryAllByAttribute` will be moved to TS\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n\n  return (0, _allUtils.queryAllByAttribute)('placeholder', ...args);\n};\n\nconst getMultipleError = (c, text) => `Found multiple elements with the placeholder text of: ${text}`;\n\nconst getMissingError = (c, text) => `Unable to find an element with the placeholder text of: ${text}`;\n\nconst queryAllByPlaceholderTextWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByPlaceholderText, queryAllByPlaceholderText.name, 'queryAll');\nexports.queryAllByPlaceholderText = queryAllByPlaceholderTextWithSuggestions;\nconst [queryByPlaceholderText, getAllByPlaceholderText, getByPlaceholderText, findAllByPlaceholderText, findByPlaceholderText] = (0, _allUtils.buildQueries)(queryAllByPlaceholderText, getMultipleError, getMissingError);\nexports.findByPlaceholderText = findByPlaceholderText;\nexports.findAllByPlaceholderText = findAllByPlaceholderText;\nexports.getByPlaceholderText = getByPlaceholderText;\nexports.getAllByPlaceholderText = getAllByPlaceholderText;\nexports.queryByPlaceholderText = queryByPlaceholderText;"]}