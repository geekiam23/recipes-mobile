7e110e9e98dcbe0cbf0e039b6eac203f
var _curryN = require("./_curryN");

var _has = require("./_has");

var _xfBase = require("./_xfBase");

var XReduceBy = function () {
  function XReduceBy(valueFn, valueAcc, keyFn, xf) {
    this.valueFn = valueFn;
    this.valueAcc = valueAcc;
    this.keyFn = keyFn;
    this.xf = xf;
    this.inputs = {};
  }

  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;

  XReduceBy.prototype['@@transducer/result'] = function (result) {
    var key;

    for (key in this.inputs) {
      if (_has(key, this.inputs)) {
        result = this.xf['@@transducer/step'](result, this.inputs[key]);

        if (result['@@transducer/reduced']) {
          result = result['@@transducer/value'];
          break;
        }
      }
    }

    this.inputs = null;
    return this.xf['@@transducer/result'](result);
  };

  XReduceBy.prototype['@@transducer/step'] = function (result, input) {
    var key = this.keyFn(input);
    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
    return result;
  };

  return XReduceBy;
}();

var _xreduceBy = _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
  return new XReduceBy(valueFn, valueAcc, keyFn, xf);
});

module.exports = _xreduceBy;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl94cmVkdWNlQnkuanMiXSwibmFtZXMiOlsiX2N1cnJ5TiIsInJlcXVpcmUiLCJfaGFzIiwiX3hmQmFzZSIsIlhSZWR1Y2VCeSIsInZhbHVlRm4iLCJ2YWx1ZUFjYyIsImtleUZuIiwieGYiLCJpbnB1dHMiLCJwcm90b3R5cGUiLCJpbml0IiwicmVzdWx0Iiwia2V5IiwiaW5wdXQiLCJfeHJlZHVjZUJ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFnQkMsT0FBTyxhQUFsQzs7QUFFQSxJQUFJQyxJQUFJLEdBQWdCRCxPQUFPLFVBQS9COztBQUVBLElBQUlFLE9BQU8sR0FBZ0JGLE9BQU8sYUFBbEM7O0FBRUEsSUFBSUcsU0FBUyxHQUFnQixZQUFZO0FBRXZDLFdBQVNBLFNBQVQsQ0FBbUJDLE9BQW5CLEVBQTRCQyxRQUE1QixFQUFzQ0MsS0FBdEMsRUFBNkNDLEVBQTdDLEVBQWlEO0FBQy9DLFNBQUtILE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsU0FBS0MsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsU0FBS0MsRUFBTCxHQUFVQSxFQUFWO0FBQ0EsU0FBS0MsTUFBTCxHQUFjLEVBQWQ7QUFDRDs7QUFDREwsRUFBQUEsU0FBUyxDQUFDTSxTQUFWLENBQW9CLG1CQUFwQixJQUEyQ1AsT0FBTyxDQUFDUSxJQUFuRDs7QUFDQVAsRUFBQUEsU0FBUyxDQUFDTSxTQUFWLENBQW9CLHFCQUFwQixJQUE2QyxVQUFVRSxNQUFWLEVBQWtCO0FBQzdELFFBQUlDLEdBQUo7O0FBQ0EsU0FBS0EsR0FBTCxJQUFZLEtBQUtKLE1BQWpCLEVBQXlCO0FBQ3ZCLFVBQUlQLElBQUksQ0FBQ1csR0FBRCxFQUFNLEtBQUtKLE1BQVgsQ0FBUixFQUE0QjtBQUMxQkcsUUFBQUEsTUFBTSxHQUFHLEtBQUtKLEVBQUwsQ0FBUSxtQkFBUixFQUE2QkksTUFBN0IsRUFBcUMsS0FBS0gsTUFBTCxDQUFZSSxHQUFaLENBQXJDLENBQVQ7O0FBQ0EsWUFBSUQsTUFBTSxDQUFDLHNCQUFELENBQVYsRUFBb0M7QUFDbENBLFVBQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDLG9CQUFELENBQWY7QUFDQTtBQUNEO0FBQ0Y7QUFDRjs7QUFDRCxTQUFLSCxNQUFMLEdBQWMsSUFBZDtBQUNBLFdBQU8sS0FBS0QsRUFBTCxDQUFRLHFCQUFSLEVBQStCSSxNQUEvQixDQUFQO0FBQ0QsR0FiRDs7QUFjQVIsRUFBQUEsU0FBUyxDQUFDTSxTQUFWLENBQW9CLG1CQUFwQixJQUEyQyxVQUFVRSxNQUFWLEVBQWtCRSxLQUFsQixFQUF5QjtBQUNsRSxRQUFJRCxHQUFHLEdBQUcsS0FBS04sS0FBTCxDQUFXTyxLQUFYLENBQVY7QUFDQSxTQUFLTCxNQUFMLENBQVlJLEdBQVosSUFBbUIsS0FBS0osTUFBTCxDQUFZSSxHQUFaLEtBQW9CLENBQUNBLEdBQUQsRUFBTSxLQUFLUCxRQUFYLENBQXZDO0FBQ0EsU0FBS0csTUFBTCxDQUFZSSxHQUFaLEVBQWlCLENBQWpCLElBQXNCLEtBQUtSLE9BQUwsQ0FBYSxLQUFLSSxNQUFMLENBQVlJLEdBQVosRUFBaUIsQ0FBakIsQ0FBYixFQUFrQ0MsS0FBbEMsQ0FBdEI7QUFDQSxXQUFPRixNQUFQO0FBQ0QsR0FMRDs7QUFPQSxTQUFPUixTQUFQO0FBQ0QsQ0FoQzRCLEVBQTdCOztBQWtDQSxJQUFJVyxVQUFVLEdBQWdCZixPQUFPLENBQUMsQ0FBRCxFQUFJLEVBQUosRUFBUSxTQUFTZSxVQUFULENBQW9CVixPQUFwQixFQUE2QkMsUUFBN0IsRUFBdUNDLEtBQXZDLEVBQThDQyxFQUE5QyxFQUFrRDtBQUM3RixTQUFPLElBQUlKLFNBQUosQ0FBY0MsT0FBZCxFQUF1QkMsUUFBdkIsRUFBaUNDLEtBQWpDLEVBQXdDQyxFQUF4QyxDQUFQO0FBQ0QsQ0FGb0MsQ0FBckM7O0FBR0FRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsVUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2N1cnJ5TiA9IC8qI19fUFVSRV9fKi9yZXF1aXJlKCcuL19jdXJyeU4nKTtcblxudmFyIF9oYXMgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi9faGFzJyk7XG5cbnZhciBfeGZCYXNlID0gLyojX19QVVJFX18qL3JlcXVpcmUoJy4vX3hmQmFzZScpO1xuXG52YXIgWFJlZHVjZUJ5ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcblxuICBmdW5jdGlvbiBYUmVkdWNlQnkodmFsdWVGbiwgdmFsdWVBY2MsIGtleUZuLCB4Zikge1xuICAgIHRoaXMudmFsdWVGbiA9IHZhbHVlRm47XG4gICAgdGhpcy52YWx1ZUFjYyA9IHZhbHVlQWNjO1xuICAgIHRoaXMua2V5Rm4gPSBrZXlGbjtcbiAgICB0aGlzLnhmID0geGY7XG4gICAgdGhpcy5pbnB1dHMgPSB7fTtcbiAgfVxuICBYUmVkdWNlQnkucHJvdG90eXBlWydAQHRyYW5zZHVjZXIvaW5pdCddID0gX3hmQmFzZS5pbml0O1xuICBYUmVkdWNlQnkucHJvdG90eXBlWydAQHRyYW5zZHVjZXIvcmVzdWx0J10gPSBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgdmFyIGtleTtcbiAgICBmb3IgKGtleSBpbiB0aGlzLmlucHV0cykge1xuICAgICAgaWYgKF9oYXMoa2V5LCB0aGlzLmlucHV0cykpIHtcbiAgICAgICAgcmVzdWx0ID0gdGhpcy54ZlsnQEB0cmFuc2R1Y2VyL3N0ZXAnXShyZXN1bHQsIHRoaXMuaW5wdXRzW2tleV0pO1xuICAgICAgICBpZiAocmVzdWx0WydAQHRyYW5zZHVjZXIvcmVkdWNlZCddKSB7XG4gICAgICAgICAgcmVzdWx0ID0gcmVzdWx0WydAQHRyYW5zZHVjZXIvdmFsdWUnXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLmlucHV0cyA9IG51bGw7XG4gICAgcmV0dXJuIHRoaXMueGZbJ0BAdHJhbnNkdWNlci9yZXN1bHQnXShyZXN1bHQpO1xuICB9O1xuICBYUmVkdWNlQnkucHJvdG90eXBlWydAQHRyYW5zZHVjZXIvc3RlcCddID0gZnVuY3Rpb24gKHJlc3VsdCwgaW5wdXQpIHtcbiAgICB2YXIga2V5ID0gdGhpcy5rZXlGbihpbnB1dCk7XG4gICAgdGhpcy5pbnB1dHNba2V5XSA9IHRoaXMuaW5wdXRzW2tleV0gfHwgW2tleSwgdGhpcy52YWx1ZUFjY107XG4gICAgdGhpcy5pbnB1dHNba2V5XVsxXSA9IHRoaXMudmFsdWVGbih0aGlzLmlucHV0c1trZXldWzFdLCBpbnB1dCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICByZXR1cm4gWFJlZHVjZUJ5O1xufSgpO1xuXG52YXIgX3hyZWR1Y2VCeSA9IC8qI19fUFVSRV9fKi9fY3VycnlOKDQsIFtdLCBmdW5jdGlvbiBfeHJlZHVjZUJ5KHZhbHVlRm4sIHZhbHVlQWNjLCBrZXlGbiwgeGYpIHtcbiAgcmV0dXJuIG5ldyBYUmVkdWNlQnkodmFsdWVGbiwgdmFsdWVBY2MsIGtleUZuLCB4Zik7XG59KTtcbm1vZHVsZS5leHBvcnRzID0gX3hyZWR1Y2VCeTsiXX0=