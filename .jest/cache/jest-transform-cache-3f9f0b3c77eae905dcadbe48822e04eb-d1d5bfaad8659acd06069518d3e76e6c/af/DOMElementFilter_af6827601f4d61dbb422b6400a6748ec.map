{"version":3,"sources":["DOMElementFilter.js"],"names":["Object","defineProperty","exports","value","default","createDOMElementFilter","test","escapeHTML","str","replace","printProps","keys","props","config","indentation","depth","refs","printer","indentationNext","indent","colors","map","key","printed","indexOf","spacingOuter","spacingInner","prop","open","close","join","NodeTypeTextNode","printChildren","children","child","printedChild","printText","nodeType","text","contentColor","content","printComment","comment","commentColor","printElement","type","printedProps","printedChildren","tagColor","tag","min","printElementAsLeaf","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","FRAGMENT_NODE","ELEMENT_REGEXP","testNode","val","constructorName","constructor","name","tagName","isCustomElement","includes","hasAttribute","_val$constructor","nodeIsText","node","nodeIsComment","nodeIsFragment","filterNode","_val$constructor2","serialize","data","toLowerCase","maxDepth","Array","from","attributes","attr","sort","reduce","attribute","prototype","slice","call","childNodes","filter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createDOMElementFilter;\nexports.test = void 0;\n\n/**\n * Source: https://github.com/facebook/jest/blob/e7bb6a1e26ffab90611b2593912df15b69315611/packages/pretty-format/src/plugins/DOMElement.ts\n */\n\n/* eslint-disable -- trying to stay as close to the original as possible */\n\n/* istanbul ignore file */\nfunction escapeHTML(str) {\n  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n} // Return empty string if keys is empty.\n\n\nconst printProps = (keys, props, config, indentation, depth, refs, printer) => {\n  const indentationNext = indentation + config.indent;\n  const colors = config.colors;\n  return keys.map(key => {\n    const value = props[key];\n    let printed = printer(value, config, indentationNext, depth, refs);\n\n    if (typeof value !== 'string') {\n      if (printed.indexOf('\\n') !== -1) {\n        printed = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation;\n      }\n\n      printed = '{' + printed + '}';\n    }\n\n    return config.spacingInner + indentation + colors.prop.open + key + colors.prop.close + '=' + colors.value.open + printed + colors.value.close;\n  }).join('');\n}; // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#node_type_constants\n\n\nconst NodeTypeTextNode = 3; // Return empty string if children is empty.\n\nconst printChildren = (children, config, indentation, depth, refs, printer) => children.map(child => {\n  const printedChild = typeof child === 'string' ? printText(child, config) : printer(child, config, indentation, depth, refs);\n\n  if (printedChild === '' && typeof child === 'object' && child !== null && child.nodeType !== NodeTypeTextNode) {\n    // A plugin serialized this Node to '' meaning we should ignore it.\n    return '';\n  }\n\n  return config.spacingOuter + indentation + printedChild;\n}).join('');\n\nconst printText = (text, config) => {\n  const contentColor = config.colors.content;\n  return contentColor.open + escapeHTML(text) + contentColor.close;\n};\n\nconst printComment = (comment, config) => {\n  const commentColor = config.colors.comment;\n  return commentColor.open + '<!--' + escapeHTML(comment) + '-->' + commentColor.close;\n}; // Separate the functions to format props, children, and element,\n// so a plugin could override a particular function, if needed.\n// Too bad, so sad: the traditional (but unnecessary) space\n// in a self-closing tagColor requires a second test of printedProps.\n\n\nconst printElement = (type, printedProps, printedChildren, config, indentation) => {\n  const tagColor = config.colors.tag;\n  return tagColor.open + '<' + type + (printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open) + (printedChildren ? '>' + tagColor.close + printedChildren + config.spacingOuter + indentation + tagColor.open + '</' + type : (printedProps && !config.min ? '' : ' ') + '/') + '>' + tagColor.close;\n};\n\nconst printElementAsLeaf = (type, config) => {\n  const tagColor = config.colors.tag;\n  return tagColor.open + '<' + type + tagColor.close + ' …' + tagColor.open + ' />' + tagColor.close;\n};\n\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n\nconst testNode = val => {\n  const constructorName = val.constructor.name;\n  const {\n    nodeType,\n    tagName\n  } = val;\n  const isCustomElement = typeof tagName === 'string' && tagName.includes('-') || typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n  return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === 'Text' || nodeType === COMMENT_NODE && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n};\n\nconst test = val => {\n  var _val$constructor;\n\n  return (val == null ? void 0 : (_val$constructor = val.constructor) == null ? void 0 : _val$constructor.name) && testNode(val);\n};\n\nexports.test = test;\n\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\n\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\n\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\n\nfunction createDOMElementFilter(filterNode) {\n  return {\n    test: val => {\n      var _val$constructor2;\n\n      return (val == null ? void 0 : (_val$constructor2 = val.constructor) == null ? void 0 : _val$constructor2.name) && testNode(val);\n    },\n    serialize: (node, config, indentation, depth, refs, printer) => {\n      if (nodeIsText(node)) {\n        return printText(node.data, config);\n      }\n\n      if (nodeIsComment(node)) {\n        return printComment(node.data, config);\n      }\n\n      const type = nodeIsFragment(node) ? `DocumentFragment` : node.tagName.toLowerCase();\n\n      if (++depth > config.maxDepth) {\n        return printElementAsLeaf(type, config);\n      }\n\n      return printElement(type, printProps(nodeIsFragment(node) ? [] : Array.from(node.attributes).map(attr => attr.name).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce((props, attribute) => {\n        props[attribute.name] = attribute.value;\n        return props;\n      }, {}), config, indentation + config.indent, depth, refs, printer), printChildren(Array.prototype.slice.call(node.childNodes || node.children).filter(filterNode), config, indentation + config.indent, depth, refs, printer), config, indentation);\n    }\n  };\n}"]}