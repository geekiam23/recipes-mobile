{"version":3,"sources":["adjust.js"],"names":["_concat","require","_curry3","adjust","idx","fn","list","length","start","_idx","_list","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAgBC,OAAO,sBAAlC;;AAEA,IAAIC,OAAO,GAAgBD,OAAO,sBAAlC;;AA6BA,IAAIE,MAAM,GAAgBD,OAAO,CAAC,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,EAArB,EAAyBC,IAAzB,EAA+B;AAC/D,MAAIF,GAAG,IAAIE,IAAI,CAACC,MAAZ,IAAsBH,GAAG,GAAG,CAACE,IAAI,CAACC,MAAtC,EAA8C;AAC5C,WAAOD,IAAP;AACD;;AACD,MAAIE,KAAK,GAAGJ,GAAG,GAAG,CAAN,GAAUE,IAAI,CAACC,MAAf,GAAwB,CAApC;;AACA,MAAIE,IAAI,GAAGD,KAAK,GAAGJ,GAAnB;;AACA,MAAIM,KAAK,GAAGV,OAAO,CAACM,IAAD,CAAnB;;AACAI,EAAAA,KAAK,CAACD,IAAD,CAAL,GAAcJ,EAAE,CAACC,IAAI,CAACG,IAAD,CAAL,CAAhB;AACA,SAAOC,KAAP;AACD,CATgC,CAAjC;;AAUAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB","sourcesContent":["var _concat = /*#__PURE__*/require('./internal/_concat');\n\nvar _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\n\n\nvar adjust = /*#__PURE__*/_curry3(function adjust(idx, fn, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nmodule.exports = adjust;"]}