{"version":3,"sources":["array-for-each.js"],"names":["$forEach","require","forEach","arrayMethodIsStrict","STRICT_METHOD","module","exports","callbackfn","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,gCAAP,CAAwCC,OAAvD;;AACA,IAAIC,mBAAmB,GAAGF,OAAO,uCAAjC;;AAEA,IAAIG,aAAa,GAAGD,mBAAmB,CAAC,SAAD,CAAvC;AAIAE,MAAM,CAACC,OAAP,GAAiB,CAACF,aAAD,GAAiB,SAASF,OAAT,CAAiBK,UAAjB,EAA6C;AAC7E,SAAOP,QAAQ,CAAC,IAAD,EAAOO,UAAP,EAAmBC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAzD,CAAf;AAED,CAHgB,GAGb,GAAGR,OAHP","sourcesContent":["'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n"]}