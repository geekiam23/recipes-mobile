537ca20b1a180f0c25fda22d7f6cd519
var _curry1 = require("./internal/_curry1");

var _has = require("./internal/_has");

var keys = require("./keys");

var invert = _curry1(function invert(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    var val = obj[key];
    var list = _has(val, out) ? out[val] : out[val] = [];
    list[list.length] = key;
    idx += 1;
  }

  return out;
});

module.exports = invert;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludmVydC5qcyJdLCJuYW1lcyI6WyJfY3VycnkxIiwicmVxdWlyZSIsIl9oYXMiLCJrZXlzIiwiaW52ZXJ0Iiwib2JqIiwicHJvcHMiLCJsZW4iLCJsZW5ndGgiLCJpZHgiLCJvdXQiLCJrZXkiLCJ2YWwiLCJsaXN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFnQkMsT0FBTyxzQkFBbEM7O0FBRUEsSUFBSUMsSUFBSSxHQUFnQkQsT0FBTyxtQkFBL0I7O0FBRUEsSUFBSUUsSUFBSSxHQUFnQkYsT0FBTyxVQUEvQjs7QUEwQkEsSUFBSUcsTUFBTSxHQUFnQkosT0FBTyxDQUFDLFNBQVNJLE1BQVQsQ0FBZ0JDLEdBQWhCLEVBQXFCO0FBQ3JELE1BQUlDLEtBQUssR0FBR0gsSUFBSSxDQUFDRSxHQUFELENBQWhCO0FBQ0EsTUFBSUUsR0FBRyxHQUFHRCxLQUFLLENBQUNFLE1BQWhCO0FBQ0EsTUFBSUMsR0FBRyxHQUFHLENBQVY7QUFDQSxNQUFJQyxHQUFHLEdBQUcsRUFBVjs7QUFFQSxTQUFPRCxHQUFHLEdBQUdGLEdBQWIsRUFBa0I7QUFDaEIsUUFBSUksR0FBRyxHQUFHTCxLQUFLLENBQUNHLEdBQUQsQ0FBZjtBQUNBLFFBQUlHLEdBQUcsR0FBR1AsR0FBRyxDQUFDTSxHQUFELENBQWI7QUFDQSxRQUFJRSxJQUFJLEdBQUdYLElBQUksQ0FBQ1UsR0FBRCxFQUFNRixHQUFOLENBQUosR0FBaUJBLEdBQUcsQ0FBQ0UsR0FBRCxDQUFwQixHQUE0QkYsR0FBRyxDQUFDRSxHQUFELENBQUgsR0FBVyxFQUFsRDtBQUNBQyxJQUFBQSxJQUFJLENBQUNBLElBQUksQ0FBQ0wsTUFBTixDQUFKLEdBQW9CRyxHQUFwQjtBQUNBRixJQUFBQSxHQUFHLElBQUksQ0FBUDtBQUNEOztBQUNELFNBQU9DLEdBQVA7QUFDRCxDQWRnQyxDQUFqQzs7QUFlQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCWCxNQUFqQiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfY3VycnkxID0gLyojX19QVVJFX18qL3JlcXVpcmUoJy4vaW50ZXJuYWwvX2N1cnJ5MScpO1xuXG52YXIgX2hhcyA9IC8qI19fUFVSRV9fKi9yZXF1aXJlKCcuL2ludGVybmFsL19oYXMnKTtcblxudmFyIGtleXMgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi9rZXlzJyk7XG5cbi8qKlxuICogU2FtZSBhcyBbYFIuaW52ZXJ0T2JqYF0oI2ludmVydE9iaiksIGhvd2V2ZXIgdGhpcyBhY2NvdW50cyBmb3Igb2JqZWN0cyB3aXRoXG4gKiBkdXBsaWNhdGUgdmFsdWVzIGJ5IHB1dHRpbmcgdGhlIHZhbHVlcyBpbnRvIGFuIGFycmF5LlxuICpcbiAqIEBmdW5jXG4gKiBAbWVtYmVyT2YgUlxuICogQHNpbmNlIHYwLjkuMFxuICogQGNhdGVnb3J5IE9iamVjdFxuICogQHNpZyB7czogeH0gLT4ge3g6IFsgcywgLi4uIF19XG4gKiBAcGFyYW0ge09iamVjdH0gb2JqIFRoZSBvYmplY3Qgb3IgYXJyYXkgdG8gaW52ZXJ0XG4gKiBAcmV0dXJuIHtPYmplY3R9IG91dCBBIG5ldyBvYmplY3Qgd2l0aCBrZXlzIGluIGFuIGFycmF5LlxuICogQHNlZSBSLmludmVydE9ialxuICogQGV4YW1wbGVcbiAqXG4gKiAgICAgIGNvbnN0IHJhY2VSZXN1bHRzQnlGaXJzdE5hbWUgPSB7XG4gKiAgICAgICAgZmlyc3Q6ICdhbGljZScsXG4gKiAgICAgICAgc2Vjb25kOiAnamFrZScsXG4gKiAgICAgICAgdGhpcmQ6ICdhbGljZScsXG4gKiAgICAgIH07XG4gKiAgICAgIFIuaW52ZXJ0KHJhY2VSZXN1bHRzQnlGaXJzdE5hbWUpO1xuICogICAgICAvLz0+IHsgJ2FsaWNlJzogWydmaXJzdCcsICd0aGlyZCddLCAnamFrZSc6WydzZWNvbmQnXSB9XG4gKi9cblxuXG52YXIgaW52ZXJ0ID0gLyojX19QVVJFX18qL19jdXJyeTEoZnVuY3Rpb24gaW52ZXJ0KG9iaikge1xuICB2YXIgcHJvcHMgPSBrZXlzKG9iaik7XG4gIHZhciBsZW4gPSBwcm9wcy5sZW5ndGg7XG4gIHZhciBpZHggPSAwO1xuICB2YXIgb3V0ID0ge307XG5cbiAgd2hpbGUgKGlkeCA8IGxlbikge1xuICAgIHZhciBrZXkgPSBwcm9wc1tpZHhdO1xuICAgIHZhciB2YWwgPSBvYmpba2V5XTtcbiAgICB2YXIgbGlzdCA9IF9oYXModmFsLCBvdXQpID8gb3V0W3ZhbF0gOiBvdXRbdmFsXSA9IFtdO1xuICAgIGxpc3RbbGlzdC5sZW5ndGhdID0ga2V5O1xuICAgIGlkeCArPSAxO1xuICB9XG4gIHJldHVybiBvdXQ7XG59KTtcbm1vZHVsZS5leHBvcnRzID0gaW52ZXJ0OyJdfQ==