414bd6968469f5d0a9ce15ecf4ca93d7
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findByDisplayValue = exports.findAllByDisplayValue = exports.getAllByDisplayValue = exports.getByDisplayValue = exports.queryAllByDisplayValue = exports.queryByDisplayValue = void 0;

var _queryHelpers = require("../query-helpers");

var _helpers = require("../helpers");

var _allUtils = require("./all-utils");

var queryAllByDisplayValue = function queryAllByDisplayValue(container, value) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      _ref$exact = _ref.exact,
      exact = _ref$exact === void 0 ? true : _ref$exact,
      collapseWhitespace = _ref.collapseWhitespace,
      trim = _ref.trim,
      normalizer = _ref.normalizer;

  (0, _helpers.checkContainerType)(container);
  var matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;
  var matchNormalizer = (0, _allUtils.makeNormalizer)({
    collapseWhitespace: collapseWhitespace,
    trim: trim,
    normalizer: normalizer
  });
  return Array.from(container.querySelectorAll("input,textarea,select")).filter(function (node) {
    if (node.tagName === 'SELECT') {
      var selectedOptions = Array.from(node.options).filter(function (option) {
        return option.selected;
      });
      return selectedOptions.some(function (optionNode) {
        return matcher((0, _allUtils.getNodeText)(optionNode), optionNode, value, matchNormalizer);
      });
    } else {
      return matcher(node.value, node, value, matchNormalizer);
    }
  });
};

var getMultipleError = function getMultipleError(c, value) {
  return "Found multiple elements with the display value: " + value + ".";
};

var getMissingError = function getMissingError(c, value) {
  return "Unable to find an element with the display value: " + value + ".";
};

var queryAllByDisplayValueWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByDisplayValue, queryAllByDisplayValue.name, 'queryAll');
exports.queryAllByDisplayValue = queryAllByDisplayValueWithSuggestions;

var _ref2 = (0, _allUtils.buildQueries)(queryAllByDisplayValue, getMultipleError, getMissingError),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 5),
    queryByDisplayValue = _ref3[0],
    getAllByDisplayValue = _ref3[1],
    getByDisplayValue = _ref3[2],
    findAllByDisplayValue = _ref3[3],
    findByDisplayValue = _ref3[4];

exports.findByDisplayValue = findByDisplayValue;
exports.findAllByDisplayValue = findAllByDisplayValue;
exports.getByDisplayValue = getByDisplayValue;
exports.getAllByDisplayValue = getAllByDisplayValue;
exports.queryByDisplayValue = queryByDisplayValue;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpc3BsYXktdmFsdWUuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJmaW5kQnlEaXNwbGF5VmFsdWUiLCJmaW5kQWxsQnlEaXNwbGF5VmFsdWUiLCJnZXRBbGxCeURpc3BsYXlWYWx1ZSIsImdldEJ5RGlzcGxheVZhbHVlIiwicXVlcnlBbGxCeURpc3BsYXlWYWx1ZSIsInF1ZXJ5QnlEaXNwbGF5VmFsdWUiLCJfcXVlcnlIZWxwZXJzIiwicmVxdWlyZSIsIl9oZWxwZXJzIiwiX2FsbFV0aWxzIiwiY29udGFpbmVyIiwiZXhhY3QiLCJjb2xsYXBzZVdoaXRlc3BhY2UiLCJ0cmltIiwibm9ybWFsaXplciIsImNoZWNrQ29udGFpbmVyVHlwZSIsIm1hdGNoZXIiLCJtYXRjaGVzIiwiZnV6enlNYXRjaGVzIiwibWF0Y2hOb3JtYWxpemVyIiwibWFrZU5vcm1hbGl6ZXIiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiZmlsdGVyIiwibm9kZSIsInRhZ05hbWUiLCJzZWxlY3RlZE9wdGlvbnMiLCJvcHRpb25zIiwib3B0aW9uIiwic2VsZWN0ZWQiLCJzb21lIiwib3B0aW9uTm9kZSIsImdldE5vZGVUZXh0IiwiZ2V0TXVsdGlwbGVFcnJvciIsImMiLCJnZXRNaXNzaW5nRXJyb3IiLCJxdWVyeUFsbEJ5RGlzcGxheVZhbHVlV2l0aFN1Z2dlc3Rpb25zIiwid3JhcEFsbEJ5UXVlcnlXaXRoU3VnZ2VzdGlvbiIsIm5hbWUiLCJidWlsZFF1ZXJpZXMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFFQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRG9DLENBQTdDO0FBR0FELE9BQU8sQ0FBQ0Usa0JBQVIsR0FBNkJGLE9BQU8sQ0FBQ0cscUJBQVIsR0FBZ0NILE9BQU8sQ0FBQ0ksb0JBQVIsR0FBK0JKLE9B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QUE2QkEsa0JBQTdCO0FBQ0FGLE9BQU8sQ0FBQ0cscUJBQVIsR0FBZ0NBLHFCQUFoQztBQUNBSCxPQUFPLENBQUNLLGlCQUFSLEdBQTRCQSxpQkFBNUI7QUFDQUwsT0FBTyxDQUFDSSxvQkFBUixHQUErQkEsb0JBQS9CO0FBQ0FKLE9BQU8sQ0FBQ08sbUJBQVIsR0FBOEJBLG1CQUE5QiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5maW5kQnlEaXNwbGF5VmFsdWUgPSBleHBvcnRzLmZpbmRBbGxCeURpc3BsYXlWYWx1ZSA9IGV4cG9ydHMuZ2V0QWxsQnlEaXNwbGF5VmFsdWUgPSBleHBvcnRzLmdldEJ5RGlzcGxheVZhbHVlID0gZXhwb3J0cy5xdWVyeUFsbEJ5RGlzcGxheVZhbHVlID0gZXhwb3J0cy5xdWVyeUJ5RGlzcGxheVZhbHVlID0gdm9pZCAwO1xuXG52YXIgX3F1ZXJ5SGVscGVycyA9IHJlcXVpcmUoXCIuLi9xdWVyeS1oZWxwZXJzXCIpO1xuXG52YXIgX2hlbHBlcnMgPSByZXF1aXJlKFwiLi4vaGVscGVyc1wiKTtcblxudmFyIF9hbGxVdGlscyA9IHJlcXVpcmUoXCIuL2FsbC11dGlsc1wiKTtcblxuY29uc3QgcXVlcnlBbGxCeURpc3BsYXlWYWx1ZSA9IChjb250YWluZXIsIHZhbHVlLCB7XG4gIGV4YWN0ID0gdHJ1ZSxcbiAgY29sbGFwc2VXaGl0ZXNwYWNlLFxuICB0cmltLFxuICBub3JtYWxpemVyXG59ID0ge30pID0+IHtcbiAgKDAsIF9oZWxwZXJzLmNoZWNrQ29udGFpbmVyVHlwZSkoY29udGFpbmVyKTtcbiAgY29uc3QgbWF0Y2hlciA9IGV4YWN0ID8gX2FsbFV0aWxzLm1hdGNoZXMgOiBfYWxsVXRpbHMuZnV6enlNYXRjaGVzO1xuICBjb25zdCBtYXRjaE5vcm1hbGl6ZXIgPSAoMCwgX2FsbFV0aWxzLm1ha2VOb3JtYWxpemVyKSh7XG4gICAgY29sbGFwc2VXaGl0ZXNwYWNlLFxuICAgIHRyaW0sXG4gICAgbm9ybWFsaXplclxuICB9KTtcbiAgcmV0dXJuIEFycmF5LmZyb20oY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoYGlucHV0LHRleHRhcmVhLHNlbGVjdGApKS5maWx0ZXIobm9kZSA9PiB7XG4gICAgaWYgKG5vZGUudGFnTmFtZSA9PT0gJ1NFTEVDVCcpIHtcbiAgICAgIGNvbnN0IHNlbGVjdGVkT3B0aW9ucyA9IEFycmF5LmZyb20obm9kZS5vcHRpb25zKS5maWx0ZXIob3B0aW9uID0+IG9wdGlvbi5zZWxlY3RlZCk7XG4gICAgICByZXR1cm4gc2VsZWN0ZWRPcHRpb25zLnNvbWUob3B0aW9uTm9kZSA9PiBtYXRjaGVyKCgwLCBfYWxsVXRpbHMuZ2V0Tm9kZVRleHQpKG9wdGlvbk5vZGUpLCBvcHRpb25Ob2RlLCB2YWx1ZSwgbWF0Y2hOb3JtYWxpemVyKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBtYXRjaGVyKG5vZGUudmFsdWUsIG5vZGUsIHZhbHVlLCBtYXRjaE5vcm1hbGl6ZXIpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5jb25zdCBnZXRNdWx0aXBsZUVycm9yID0gKGMsIHZhbHVlKSA9PiBgRm91bmQgbXVsdGlwbGUgZWxlbWVudHMgd2l0aCB0aGUgZGlzcGxheSB2YWx1ZTogJHt2YWx1ZX0uYDtcblxuY29uc3QgZ2V0TWlzc2luZ0Vycm9yID0gKGMsIHZhbHVlKSA9PiBgVW5hYmxlIHRvIGZpbmQgYW4gZWxlbWVudCB3aXRoIHRoZSBkaXNwbGF5IHZhbHVlOiAke3ZhbHVlfS5gO1xuXG5jb25zdCBxdWVyeUFsbEJ5RGlzcGxheVZhbHVlV2l0aFN1Z2dlc3Rpb25zID0gKDAsIF9xdWVyeUhlbHBlcnMud3JhcEFsbEJ5UXVlcnlXaXRoU3VnZ2VzdGlvbikocXVlcnlBbGxCeURpc3BsYXlWYWx1ZSwgcXVlcnlBbGxCeURpc3BsYXlWYWx1ZS5uYW1lLCAncXVlcnlBbGwnKTtcbmV4cG9ydHMucXVlcnlBbGxCeURpc3BsYXlWYWx1ZSA9IHF1ZXJ5QWxsQnlEaXNwbGF5VmFsdWVXaXRoU3VnZ2VzdGlvbnM7XG5jb25zdCBbcXVlcnlCeURpc3BsYXlWYWx1ZSwgZ2V0QWxsQnlEaXNwbGF5VmFsdWUsIGdldEJ5RGlzcGxheVZhbHVlLCBmaW5kQWxsQnlEaXNwbGF5VmFsdWUsIGZpbmRCeURpc3BsYXlWYWx1ZV0gPSAoMCwgX2FsbFV0aWxzLmJ1aWxkUXVlcmllcykocXVlcnlBbGxCeURpc3BsYXlWYWx1ZSwgZ2V0TXVsdGlwbGVFcnJvciwgZ2V0TWlzc2luZ0Vycm9yKTtcbmV4cG9ydHMuZmluZEJ5RGlzcGxheVZhbHVlID0gZmluZEJ5RGlzcGxheVZhbHVlO1xuZXhwb3J0cy5maW5kQWxsQnlEaXNwbGF5VmFsdWUgPSBmaW5kQWxsQnlEaXNwbGF5VmFsdWU7XG5leHBvcnRzLmdldEJ5RGlzcGxheVZhbHVlID0gZ2V0QnlEaXNwbGF5VmFsdWU7XG5leHBvcnRzLmdldEFsbEJ5RGlzcGxheVZhbHVlID0gZ2V0QWxsQnlEaXNwbGF5VmFsdWU7XG5leHBvcnRzLnF1ZXJ5QnlEaXNwbGF5VmFsdWUgPSBxdWVyeUJ5RGlzcGxheVZhbHVlOyJdfQ==