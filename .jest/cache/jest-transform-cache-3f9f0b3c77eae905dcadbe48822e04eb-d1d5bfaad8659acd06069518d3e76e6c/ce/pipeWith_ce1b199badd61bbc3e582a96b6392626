8e6bf7a182454f8e42964ea1416d6752
var _arity = require("./internal/_arity");

var _curry2 = require("./internal/_curry2");

var head = require("./head");

var _reduce = require("./internal/_reduce");

var tail = require("./tail");

var identity = require("./identity");

var pipeWith = _curry2(function pipeWith(xf, list) {
  if (list.length <= 0) {
    return identity;
  }

  var headList = head(list);
  var tailList = tail(list);
  return _arity(headList.length, function () {
    return _reduce(function (result, f) {
      return xf.call(this, f, result);
    }, headList.apply(this, arguments), tailList);
  });
});

module.exports = pipeWith;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpcGVXaXRoLmpzIl0sIm5hbWVzIjpbIl9hcml0eSIsInJlcXVpcmUiLCJfY3VycnkyIiwiaGVhZCIsIl9yZWR1Y2UiLCJ0YWlsIiwiaWRlbnRpdHkiLCJwaXBlV2l0aCIsInhmIiwibGlzdCIsImxlbmd0aCIsImhlYWRMaXN0IiwidGFpbExpc3QiLCJyZXN1bHQiLCJmIiwiY2FsbCIsImFwcGx5IiwiYXJndW1lbnRzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsTUFBTSxHQUFnQkMsT0FBTyxxQkFBakM7O0FBRUEsSUFBSUMsT0FBTyxHQUFnQkQsT0FBTyxzQkFBbEM7O0FBRUEsSUFBSUUsSUFBSSxHQUFnQkYsT0FBTyxVQUEvQjs7QUFFQSxJQUFJRyxPQUFPLEdBQWdCSCxPQUFPLHNCQUFsQzs7QUFFQSxJQUFJSSxJQUFJLEdBQWdCSixPQUFPLFVBQS9COztBQUVBLElBQUlLLFFBQVEsR0FBZ0JMLE9BQU8sY0FBbkM7O0FBeUJBLElBQUlNLFFBQVEsR0FBZ0JMLE9BQU8sQ0FBQyxTQUFTSyxRQUFULENBQWtCQyxFQUFsQixFQUFzQkMsSUFBdEIsRUFBNEI7QUFDOUQsTUFBSUEsSUFBSSxDQUFDQyxNQUFMLElBQWUsQ0FBbkIsRUFBc0I7QUFDcEIsV0FBT0osUUFBUDtBQUNEOztBQUVELE1BQUlLLFFBQVEsR0FBR1IsSUFBSSxDQUFDTSxJQUFELENBQW5CO0FBQ0EsTUFBSUcsUUFBUSxHQUFHUCxJQUFJLENBQUNJLElBQUQsQ0FBbkI7QUFFQSxTQUFPVCxNQUFNLENBQUNXLFFBQVEsQ0FBQ0QsTUFBVixFQUFrQixZQUFZO0FBQ3pDLFdBQU9OLE9BQU8sQ0FBQyxVQUFVUyxNQUFWLEVBQWtCQyxDQUFsQixFQUFxQjtBQUNsQyxhQUFPTixFQUFFLENBQUNPLElBQUgsQ0FBUSxJQUFSLEVBQWNELENBQWQsRUFBaUJELE1BQWpCLENBQVA7QUFDRCxLQUZhLEVBRVhGLFFBQVEsQ0FBQ0ssS0FBVCxDQUFlLElBQWYsRUFBcUJDLFNBQXJCLENBRlcsRUFFc0JMLFFBRnRCLENBQWQ7QUFHRCxHQUpZLENBQWI7QUFLRCxDQWJrQyxDQUFuQzs7QUFjQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixRQUFqQiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfYXJpdHkgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi9pbnRlcm5hbC9fYXJpdHknKTtcblxudmFyIF9jdXJyeTIgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi9pbnRlcm5hbC9fY3VycnkyJyk7XG5cbnZhciBoZWFkID0gLyojX19QVVJFX18qL3JlcXVpcmUoJy4vaGVhZCcpO1xuXG52YXIgX3JlZHVjZSA9IC8qI19fUFVSRV9fKi9yZXF1aXJlKCcuL2ludGVybmFsL19yZWR1Y2UnKTtcblxudmFyIHRhaWwgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi90YWlsJyk7XG5cbnZhciBpZGVudGl0eSA9IC8qI19fUFVSRV9fKi9yZXF1aXJlKCcuL2lkZW50aXR5Jyk7XG5cbi8qKlxuICogUGVyZm9ybXMgbGVmdC10by1yaWdodCBmdW5jdGlvbiBjb21wb3NpdGlvbiB1c2luZyB0cmFuc2Zvcm1pbmcgZnVuY3Rpb24uIFRoZSBsZWZ0bW9zdCBmdW5jdGlvbiBtYXkgaGF2ZVxuICogYW55IGFyaXR5OyB0aGUgcmVtYWluaW5nIGZ1bmN0aW9ucyBtdXN0IGJlIHVuYXJ5LlxuICpcbiAqICoqTm90ZToqKiBUaGUgcmVzdWx0IG9mIHBpcGVXaXRoIGlzIG5vdCBhdXRvbWF0aWNhbGx5IGN1cnJpZWQuXG4gKlxuICogQGZ1bmNcbiAqIEBtZW1iZXJPZiBSXG4gKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAqIEBzaWcgKCgqIC0+ICopLCBbKChhLCBiLCAuLi4sIG4pIC0+IG8pLCAobyAtPiBwKSwgLi4uLCAoeCAtPiB5KSwgKHkgLT4geildKSAtPiAoKGEsIGIsIC4uLiwgbikgLT4geilcbiAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IGZ1bmN0aW9uc1xuICogQHJldHVybiB7RnVuY3Rpb259XG4gKiBAc2VlIFIuY29tcG9zZVdpdGgsIFIucGlwZVxuICogQGV4YW1wbGVcbiAqXG4gKiAgICAgIGNvbnN0IHBpcGVXaGlsZU5vdE5pbCA9IFIucGlwZVdpdGgoKGYsIHJlcykgPT4gUi5pc05pbChyZXMpID8gcmVzIDogZihyZXMpKTtcbiAqICAgICAgY29uc3QgZiA9IHBpcGVXaGlsZU5vdE5pbChbTWF0aC5wb3csIFIubmVnYXRlLCBSLmluY10pXG4gKlxuICogICAgICBmKDMsIDQpOyAvLyAtKDNeNCkgKyAxXG4gKiBAc3ltYiBSLnBpcGVXaXRoKGYpKFtnLCBoLCBpXSkoLi4uYXJncykgPSBmKGksIGYoaCwgZihnLCAuLi5hcmdzKSkpXG4gKi9cblxuXG52YXIgcGlwZVdpdGggPSAvKiNfX1BVUkVfXyovX2N1cnJ5MihmdW5jdGlvbiBwaXBlV2l0aCh4ZiwgbGlzdCkge1xuICBpZiAobGlzdC5sZW5ndGggPD0gMCkge1xuICAgIHJldHVybiBpZGVudGl0eTtcbiAgfVxuXG4gIHZhciBoZWFkTGlzdCA9IGhlYWQobGlzdCk7XG4gIHZhciB0YWlsTGlzdCA9IHRhaWwobGlzdCk7XG5cbiAgcmV0dXJuIF9hcml0eShoZWFkTGlzdC5sZW5ndGgsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3JlZHVjZShmdW5jdGlvbiAocmVzdWx0LCBmKSB7XG4gICAgICByZXR1cm4geGYuY2FsbCh0aGlzLCBmLCByZXN1bHQpO1xuICAgIH0sIGhlYWRMaXN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHRhaWxMaXN0KTtcbiAgfSk7XG59KTtcbm1vZHVsZS5leHBvcnRzID0gcGlwZVdpdGg7Il19