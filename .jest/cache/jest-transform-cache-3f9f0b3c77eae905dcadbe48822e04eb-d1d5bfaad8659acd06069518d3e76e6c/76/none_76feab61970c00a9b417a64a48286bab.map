{"version":3,"sources":["none.js"],"names":["_complement","require","_curry2","all","none","fn","input","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAgBC,OAAO,0BAAtC;;AAEA,IAAIC,OAAO,GAAgBD,OAAO,sBAAlC;;AAEA,IAAIE,GAAG,GAAgBF,OAAO,SAA9B;;AA6BA,IAAIG,IAAI,GAAgBF,OAAO,CAAC,SAASE,IAAT,CAAcC,EAAd,EAAkBC,KAAlB,EAAyB;AACvD,SAAOH,GAAG,CAACH,WAAW,CAACK,EAAD,CAAZ,EAAkBC,KAAlB,CAAV;AACD,CAF8B,CAA/B;;AAGAC,MAAM,CAACC,OAAP,GAAiBJ,IAAjB","sourcesContent":["var _complement = /*#__PURE__*/require('./internal/_complement');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar all = /*#__PURE__*/require('./all');\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\n\nvar none = /*#__PURE__*/_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\nmodule.exports = none;"]}