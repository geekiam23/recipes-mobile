8e6bf366e158c263276e4a3acfd8e1c3
'use strict';

var colorConvert = require('color-convert');

var wrapAnsi16 = function wrapAnsi16(fn, offset) {
  return function () {
    var code = fn.apply(colorConvert, arguments);
    return "\x1B[" + (code + offset) + "m";
  };
};

var wrapAnsi256 = function wrapAnsi256(fn, offset) {
  return function () {
    var code = fn.apply(colorConvert, arguments);
    return "\x1B[" + (38 + offset) + ";5;" + code + "m";
  };
};

var wrapAnsi16m = function wrapAnsi16m(fn, offset) {
  return function () {
    var rgb = fn.apply(colorConvert, arguments);
    return "\x1B[" + (38 + offset) + ";2;" + rgb[0] + ";" + rgb[1] + ";" + rgb[2] + "m";
  };
};

function assembleStyles() {
  var codes = new Map();
  var styles = {
    modifier: {
      reset: [0, 0],
      bold: [1, 22],
      dim: [2, 22],
      italic: [3, 23],
      underline: [4, 24],
      inverse: [7, 27],
      hidden: [8, 28],
      strikethrough: [9, 29]
    },
    color: {
      black: [30, 39],
      red: [31, 39],
      green: [32, 39],
      yellow: [33, 39],
      blue: [34, 39],
      magenta: [35, 39],
      cyan: [36, 39],
      white: [37, 39],
      gray: [90, 39],
      redBright: [91, 39],
      greenBright: [92, 39],
      yellowBright: [93, 39],
      blueBright: [94, 39],
      magentaBright: [95, 39],
      cyanBright: [96, 39],
      whiteBright: [97, 39]
    },
    bgColor: {
      bgBlack: [40, 49],
      bgRed: [41, 49],
      bgGreen: [42, 49],
      bgYellow: [43, 49],
      bgBlue: [44, 49],
      bgMagenta: [45, 49],
      bgCyan: [46, 49],
      bgWhite: [47, 49],
      bgBlackBright: [100, 49],
      bgRedBright: [101, 49],
      bgGreenBright: [102, 49],
      bgYellowBright: [103, 49],
      bgBlueBright: [104, 49],
      bgMagentaBright: [105, 49],
      bgCyanBright: [106, 49],
      bgWhiteBright: [107, 49]
    }
  };
  styles.color.grey = styles.color.gray;

  for (var _i = 0, _Object$keys = Object.keys(styles); _i < _Object$keys.length; _i++) {
    var groupName = _Object$keys[_i];
    var group = styles[groupName];

    for (var _i2 = 0, _Object$keys2 = Object.keys(group); _i2 < _Object$keys2.length; _i2++) {
      var styleName = _Object$keys2[_i2];
      var style = group[styleName];
      styles[styleName] = {
        open: "\x1B[" + style[0] + "m",
        close: "\x1B[" + style[1] + "m"
      };
      group[styleName] = styles[styleName];
      codes.set(style[0], style[1]);
    }

    Object.defineProperty(styles, groupName, {
      value: group,
      enumerable: false
    });
    Object.defineProperty(styles, 'codes', {
      value: codes,
      enumerable: false
    });
  }

  var ansi2ansi = function ansi2ansi(n) {
    return n;
  };

  var rgb2rgb = function rgb2rgb(r, g, b) {
    return [r, g, b];
  };

  styles.color.close = "\x1B[39m";
  styles.bgColor.close = "\x1B[49m";
  styles.color.ansi = {
    ansi: wrapAnsi16(ansi2ansi, 0)
  };
  styles.color.ansi256 = {
    ansi256: wrapAnsi256(ansi2ansi, 0)
  };
  styles.color.ansi16m = {
    rgb: wrapAnsi16m(rgb2rgb, 0)
  };
  styles.bgColor.ansi = {
    ansi: wrapAnsi16(ansi2ansi, 10)
  };
  styles.bgColor.ansi256 = {
    ansi256: wrapAnsi256(ansi2ansi, 10)
  };
  styles.bgColor.ansi16m = {
    rgb: wrapAnsi16m(rgb2rgb, 10)
  };

  for (var _i3 = 0, _Object$keys3 = Object.keys(colorConvert); _i3 < _Object$keys3.length; _i3++) {
    var key = _Object$keys3[_i3];

    if (typeof colorConvert[key] !== 'object') {
      continue;
    }

    var suite = colorConvert[key];

    if (key === 'ansi16') {
      key = 'ansi';
    }

    if ('ansi16' in suite) {
      styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);
      styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);
    }

    if ('ansi256' in suite) {
      styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);
      styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);
    }

    if ('rgb' in suite) {
      styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);
      styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);
    }
  }

  return styles;
}

Object.defineProperty(module, 'exports', {
  enumerable: true,
  get: assembleStyles
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbG9yQ29udmVydCIsInJlcXVpcmUiLCJ3cmFwQW5zaTE2IiwiZm4iLCJvZmZzZXQiLCJjb2RlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJ3cmFwQW5zaTI1NiIsIndyYXBBbnNpMTZtIiwicmdiIiwiYXNzZW1ibGVTdHlsZXMiLCJjb2RlcyIsIk1hcCIsInN0eWxlcyIsIm1vZGlmaWVyIiwicmVzZXQiLCJib2xkIiwiZGltIiwiaXRhbGljIiwidW5kZXJsaW5lIiwiaW52ZXJzZSIsImhpZGRlbiIsInN0cmlrZXRocm91Z2giLCJjb2xvciIsImJsYWNrIiwicmVkIiwiZ3JlZW4iLCJ5ZWxsb3ciLCJibHVlIiwibWFnZW50YSIsImN5YW4iLCJ3aGl0ZSIsImdyYXkiLCJyZWRCcmlnaHQiLCJncmVlbkJyaWdodCIsInllbGxvd0JyaWdodCIsImJsdWVCcmlnaHQiLCJtYWdlbnRhQnJpZ2h0IiwiY3lhbkJyaWdodCIsIndoaXRlQnJpZ2h0IiwiYmdDb2xvciIsImJnQmxhY2siLCJiZ1JlZCIsImJnR3JlZW4iLCJiZ1llbGxvdyIsImJnQmx1ZSIsImJnTWFnZW50YSIsImJnQ3lhbiIsImJnV2hpdGUiLCJiZ0JsYWNrQnJpZ2h0IiwiYmdSZWRCcmlnaHQiLCJiZ0dyZWVuQnJpZ2h0IiwiYmdZZWxsb3dCcmlnaHQiLCJiZ0JsdWVCcmlnaHQiLCJiZ01hZ2VudGFCcmlnaHQiLCJiZ0N5YW5CcmlnaHQiLCJiZ1doaXRlQnJpZ2h0IiwiZ3JleSIsIk9iamVjdCIsImtleXMiLCJncm91cE5hbWUiLCJncm91cCIsInN0eWxlTmFtZSIsInN0eWxlIiwib3BlbiIsImNsb3NlIiwic2V0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJhbnNpMmFuc2kiLCJuIiwicmdiMnJnYiIsInIiLCJnIiwiYiIsImFuc2kiLCJhbnNpMjU2IiwiYW5zaTE2bSIsImtleSIsInN1aXRlIiwiYW5zaTE2IiwibW9kdWxlIiwiZ2V0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QUFFRCxRQUFJLFNBQVNHLEtBQWIsRUFBb0I7QUFDbkJuRSxNQUFBQSxNQUFNLENBQUNVLEtBQVAsQ0FBYXVELE9BQWIsQ0FBcUJDLEdBQXJCLElBQTRCdkUsV0FBVyxDQUFDd0UsS0FBSyxDQUFDdkUsR0FBUCxFQUFZLENBQVosQ0FBdkM7QUFDQUksTUFBQUEsTUFBTSxDQUFDMkIsT0FBUCxDQUFlc0MsT0FBZixDQUF1QkMsR0FBdkIsSUFBOEJ2RSxXQUFXLENBQUN3RSxLQUFLLENBQUN2RSxHQUFQLEVBQVksRUFBWixDQUF6QztBQUNBO0FBQ0Q7O0FBRUQsU0FBT0ksTUFBUDtBQUNBOztBQUdENkMsTUFBTSxDQUFDUyxjQUFQLENBQXNCZSxNQUF0QixFQUE4QixTQUE5QixFQUF5QztBQUN4Q2IsRUFBQUEsVUFBVSxFQUFFLElBRDRCO0FBRXhDYyxFQUFBQSxHQUFHLEVBQUV6RTtBQUZtQyxDQUF6QyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IGNvbG9yQ29udmVydCA9IHJlcXVpcmUoJ2NvbG9yLWNvbnZlcnQnKTtcblxuY29uc3Qgd3JhcEFuc2kxNiA9IChmbiwgb2Zmc2V0KSA9PiBmdW5jdGlvbiAoKSB7XG5cdGNvbnN0IGNvZGUgPSBmbi5hcHBseShjb2xvckNvbnZlcnQsIGFyZ3VtZW50cyk7XG5cdHJldHVybiBgXFx1MDAxQlske2NvZGUgKyBvZmZzZXR9bWA7XG59O1xuXG5jb25zdCB3cmFwQW5zaTI1NiA9IChmbiwgb2Zmc2V0KSA9PiBmdW5jdGlvbiAoKSB7XG5cdGNvbnN0IGNvZGUgPSBmbi5hcHBseShjb2xvckNvbnZlcnQsIGFyZ3VtZW50cyk7XG5cdHJldHVybiBgXFx1MDAxQlskezM4ICsgb2Zmc2V0fTs1OyR7Y29kZX1tYDtcbn07XG5cbmNvbnN0IHdyYXBBbnNpMTZtID0gKGZuLCBvZmZzZXQpID0+IGZ1bmN0aW9uICgpIHtcblx0Y29uc3QgcmdiID0gZm4uYXBwbHkoY29sb3JDb252ZXJ0LCBhcmd1bWVudHMpO1xuXHRyZXR1cm4gYFxcdTAwMUJbJHszOCArIG9mZnNldH07Mjske3JnYlswXX07JHtyZ2JbMV19OyR7cmdiWzJdfW1gO1xufTtcblxuZnVuY3Rpb24gYXNzZW1ibGVTdHlsZXMoKSB7XG5cdGNvbnN0IGNvZGVzID0gbmV3IE1hcCgpO1xuXHRjb25zdCBzdHlsZXMgPSB7XG5cdFx0bW9kaWZpZXI6IHtcblx0XHRcdHJlc2V0OiBbMCwgMF0sXG5cdFx0XHQvLyAyMSBpc24ndCB3aWRlbHkgc3VwcG9ydGVkIGFuZCAyMiBkb2VzIHRoZSBzYW1lIHRoaW5nXG5cdFx0XHRib2xkOiBbMSwgMjJdLFxuXHRcdFx0ZGltOiBbMiwgMjJdLFxuXHRcdFx0aXRhbGljOiBbMywgMjNdLFxuXHRcdFx0dW5kZXJsaW5lOiBbNCwgMjRdLFxuXHRcdFx0aW52ZXJzZTogWzcsIDI3XSxcblx0XHRcdGhpZGRlbjogWzgsIDI4XSxcblx0XHRcdHN0cmlrZXRocm91Z2g6IFs5LCAyOV1cblx0XHR9LFxuXHRcdGNvbG9yOiB7XG5cdFx0XHRibGFjazogWzMwLCAzOV0sXG5cdFx0XHRyZWQ6IFszMSwgMzldLFxuXHRcdFx0Z3JlZW46IFszMiwgMzldLFxuXHRcdFx0eWVsbG93OiBbMzMsIDM5XSxcblx0XHRcdGJsdWU6IFszNCwgMzldLFxuXHRcdFx0bWFnZW50YTogWzM1LCAzOV0sXG5cdFx0XHRjeWFuOiBbMzYsIDM5XSxcblx0XHRcdHdoaXRlOiBbMzcsIDM5XSxcblx0XHRcdGdyYXk6IFs5MCwgMzldLFxuXG5cdFx0XHQvLyBCcmlnaHQgY29sb3Jcblx0XHRcdHJlZEJyaWdodDogWzkxLCAzOV0sXG5cdFx0XHRncmVlbkJyaWdodDogWzkyLCAzOV0sXG5cdFx0XHR5ZWxsb3dCcmlnaHQ6IFs5MywgMzldLFxuXHRcdFx0Ymx1ZUJyaWdodDogWzk0LCAzOV0sXG5cdFx0XHRtYWdlbnRhQnJpZ2h0OiBbOTUsIDM5XSxcblx0XHRcdGN5YW5CcmlnaHQ6IFs5NiwgMzldLFxuXHRcdFx0d2hpdGVCcmlnaHQ6IFs5NywgMzldXG5cdFx0fSxcblx0XHRiZ0NvbG9yOiB7XG5cdFx0XHRiZ0JsYWNrOiBbNDAsIDQ5XSxcblx0XHRcdGJnUmVkOiBbNDEsIDQ5XSxcblx0XHRcdGJnR3JlZW46IFs0MiwgNDldLFxuXHRcdFx0YmdZZWxsb3c6IFs0MywgNDldLFxuXHRcdFx0YmdCbHVlOiBbNDQsIDQ5XSxcblx0XHRcdGJnTWFnZW50YTogWzQ1LCA0OV0sXG5cdFx0XHRiZ0N5YW46IFs0NiwgNDldLFxuXHRcdFx0YmdXaGl0ZTogWzQ3LCA0OV0sXG5cblx0XHRcdC8vIEJyaWdodCBjb2xvclxuXHRcdFx0YmdCbGFja0JyaWdodDogWzEwMCwgNDldLFxuXHRcdFx0YmdSZWRCcmlnaHQ6IFsxMDEsIDQ5XSxcblx0XHRcdGJnR3JlZW5CcmlnaHQ6IFsxMDIsIDQ5XSxcblx0XHRcdGJnWWVsbG93QnJpZ2h0OiBbMTAzLCA0OV0sXG5cdFx0XHRiZ0JsdWVCcmlnaHQ6IFsxMDQsIDQ5XSxcblx0XHRcdGJnTWFnZW50YUJyaWdodDogWzEwNSwgNDldLFxuXHRcdFx0YmdDeWFuQnJpZ2h0OiBbMTA2LCA0OV0sXG5cdFx0XHRiZ1doaXRlQnJpZ2h0OiBbMTA3LCA0OV1cblx0XHR9XG5cdH07XG5cblx0Ly8gRml4IGh1bWFuc1xuXHRzdHlsZXMuY29sb3IuZ3JleSA9IHN0eWxlcy5jb2xvci5ncmF5O1xuXG5cdGZvciAoY29uc3QgZ3JvdXBOYW1lIG9mIE9iamVjdC5rZXlzKHN0eWxlcykpIHtcblx0XHRjb25zdCBncm91cCA9IHN0eWxlc1tncm91cE5hbWVdO1xuXG5cdFx0Zm9yIChjb25zdCBzdHlsZU5hbWUgb2YgT2JqZWN0LmtleXMoZ3JvdXApKSB7XG5cdFx0XHRjb25zdCBzdHlsZSA9IGdyb3VwW3N0eWxlTmFtZV07XG5cblx0XHRcdHN0eWxlc1tzdHlsZU5hbWVdID0ge1xuXHRcdFx0XHRvcGVuOiBgXFx1MDAxQlske3N0eWxlWzBdfW1gLFxuXHRcdFx0XHRjbG9zZTogYFxcdTAwMUJbJHtzdHlsZVsxXX1tYFxuXHRcdFx0fTtcblxuXHRcdFx0Z3JvdXBbc3R5bGVOYW1lXSA9IHN0eWxlc1tzdHlsZU5hbWVdO1xuXG5cdFx0XHRjb2Rlcy5zZXQoc3R5bGVbMF0sIHN0eWxlWzFdKTtcblx0XHR9XG5cblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoc3R5bGVzLCBncm91cE5hbWUsIHtcblx0XHRcdHZhbHVlOiBncm91cCxcblx0XHRcdGVudW1lcmFibGU6IGZhbHNlXG5cdFx0fSk7XG5cblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoc3R5bGVzLCAnY29kZXMnLCB7XG5cdFx0XHR2YWx1ZTogY29kZXMsXG5cdFx0XHRlbnVtZXJhYmxlOiBmYWxzZVxuXHRcdH0pO1xuXHR9XG5cblx0Y29uc3QgYW5zaTJhbnNpID0gbiA9PiBuO1xuXHRjb25zdCByZ2IycmdiID0gKHIsIGcsIGIpID0+IFtyLCBnLCBiXTtcblxuXHRzdHlsZXMuY29sb3IuY2xvc2UgPSAnXFx1MDAxQlszOW0nO1xuXHRzdHlsZXMuYmdDb2xvci5jbG9zZSA9ICdcXHUwMDFCWzQ5bSc7XG5cblx0c3R5bGVzLmNvbG9yLmFuc2kgPSB7XG5cdFx0YW5zaTogd3JhcEFuc2kxNihhbnNpMmFuc2ksIDApXG5cdH07XG5cdHN0eWxlcy5jb2xvci5hbnNpMjU2ID0ge1xuXHRcdGFuc2kyNTY6IHdyYXBBbnNpMjU2KGFuc2kyYW5zaSwgMClcblx0fTtcblx0c3R5bGVzLmNvbG9yLmFuc2kxNm0gPSB7XG5cdFx0cmdiOiB3cmFwQW5zaTE2bShyZ2IycmdiLCAwKVxuXHR9O1xuXG5cdHN0eWxlcy5iZ0NvbG9yLmFuc2kgPSB7XG5cdFx0YW5zaTogd3JhcEFuc2kxNihhbnNpMmFuc2ksIDEwKVxuXHR9O1xuXHRzdHlsZXMuYmdDb2xvci5hbnNpMjU2ID0ge1xuXHRcdGFuc2kyNTY6IHdyYXBBbnNpMjU2KGFuc2kyYW5zaSwgMTApXG5cdH07XG5cdHN0eWxlcy5iZ0NvbG9yLmFuc2kxNm0gPSB7XG5cdFx0cmdiOiB3cmFwQW5zaTE2bShyZ2IycmdiLCAxMClcblx0fTtcblxuXHRmb3IgKGxldCBrZXkgb2YgT2JqZWN0LmtleXMoY29sb3JDb252ZXJ0KSkge1xuXHRcdGlmICh0eXBlb2YgY29sb3JDb252ZXJ0W2tleV0gIT09ICdvYmplY3QnKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRjb25zdCBzdWl0ZSA9IGNvbG9yQ29udmVydFtrZXldO1xuXG5cdFx0aWYgKGtleSA9PT0gJ2Fuc2kxNicpIHtcblx0XHRcdGtleSA9ICdhbnNpJztcblx0XHR9XG5cblx0XHRpZiAoJ2Fuc2kxNicgaW4gc3VpdGUpIHtcblx0XHRcdHN0eWxlcy5jb2xvci5hbnNpW2tleV0gPSB3cmFwQW5zaTE2KHN1aXRlLmFuc2kxNiwgMCk7XG5cdFx0XHRzdHlsZXMuYmdDb2xvci5hbnNpW2tleV0gPSB3cmFwQW5zaTE2KHN1aXRlLmFuc2kxNiwgMTApO1xuXHRcdH1cblxuXHRcdGlmICgnYW5zaTI1NicgaW4gc3VpdGUpIHtcblx0XHRcdHN0eWxlcy5jb2xvci5hbnNpMjU2W2tleV0gPSB3cmFwQW5zaTI1NihzdWl0ZS5hbnNpMjU2LCAwKTtcblx0XHRcdHN0eWxlcy5iZ0NvbG9yLmFuc2kyNTZba2V5XSA9IHdyYXBBbnNpMjU2KHN1aXRlLmFuc2kyNTYsIDEwKTtcblx0XHR9XG5cblx0XHRpZiAoJ3JnYicgaW4gc3VpdGUpIHtcblx0XHRcdHN0eWxlcy5jb2xvci5hbnNpMTZtW2tleV0gPSB3cmFwQW5zaTE2bShzdWl0ZS5yZ2IsIDApO1xuXHRcdFx0c3R5bGVzLmJnQ29sb3IuYW5zaTE2bVtrZXldID0gd3JhcEFuc2kxNm0oc3VpdGUucmdiLCAxMCk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuLy8gTWFrZSB0aGUgZXhwb3J0IGltbXV0YWJsZVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgJ2V4cG9ydHMnLCB7XG5cdGVudW1lcmFibGU6IHRydWUsXG5cdGdldDogYXNzZW1ibGVTdHlsZXNcbn0pO1xuIl19