{"version":3,"sources":["config.js"],"names":["Object","defineProperty","exports","value","runWithExpensiveErrorDiagnosticsDisabled","configure","getConfig","_prettyDom","require","config","testIdAttribute","asyncUtilTimeout","asyncWrapper","cb","eventWrapper","defaultHidden","showOriginalStackTrace","throwSuggestions","getElementError","message","container","prettifiedDOM","prettyDOM","error","Error","length","filter","Boolean","join","name","_disableExpensiveErrorDiagnostics","computedStyleSupportsPseudoElements","callback","newConfig"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,wCAAR,GAAmDA,wCAAnD;AACAF,OAAO,CAACG,SAAR,GAAoBA,SAApB;AACAH,OAAO,CAACI,SAAR,GAAoBA,SAApB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,gBAAxB;;AAKA,IAAIC,MAAM,GAAG;AACXC,EAAAA,eAAe,EAAE,aADN;AAEXC,EAAAA,gBAAgB,EAAE,IAFP;AAUXC,EAAAA,YAAY,EAAE,sBAAAC,EAAE;AAAA,WAAIA,EAAE,EAAN;AAAA,GAVL;AAWXC,EAAAA,YAAY,EAAE,sBAAAD,EAAE;AAAA,WAAIA,EAAE,EAAN;AAAA,GAXL;AAaXE,EAAAA,aAAa,EAAE,KAbJ;AAeXC,EAAAA,sBAAsB,EAAE,KAfb;AAiBXC,EAAAA,gBAAgB,EAAE,KAjBP;AAoBXC,EAAAA,eApBW,2BAoBKC,OApBL,EAoBcC,SApBd,EAoByB;AAClC,QAAMC,aAAa,GAAG,CAAC,GAAGd,UAAU,CAACe,SAAf,EAA0BF,SAA1B,CAAtB;AACA,QAAMG,KAAK,GAAG,IAAIC,KAAJ,CAAU,CAACL,OAAD,EAAUE,aAAa,CAACI,MAAd,GAAuB,CAAvB,wDAA8E,CAAC,GAAGlB,UAAU,CAACe,SAAf,EAA0BF,SAA1B,CAA9E,GAAuH,IAAjI,EAAuIM,MAAvI,CAA8IC,OAA9I,EAAuJC,IAAvJ,CAA4J,MAA5J,CAAV,CAAd;AACAL,IAAAA,KAAK,CAACM,IAAN,GAAa,4BAAb;AACA,WAAON,KAAP;AACD,GAzBU;AA2BXO,EAAAA,iCAAiC,EAAE,KA3BxB;AA4BXC,EAAAA,mCAAmC,EAAE;AA5B1B,CAAb;;AA+BA,SAAS3B,wCAAT,CAAkD4B,QAAlD,EAA4D;AAC1D,MAAI;AACFvB,IAAAA,MAAM,CAACqB,iCAAP,GAA2C,IAA3C;AACA,WAAOE,QAAQ,EAAf;AACD,GAHD,SAGU;AACRvB,IAAAA,MAAM,CAACqB,iCAAP,GAA2C,KAA3C;AACD;AACF;;AAED,SAASzB,SAAT,CAAmB4B,SAAnB,EAA8B;AAC5B,MAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AAGnCA,IAAAA,SAAS,GAAGA,SAAS,CAACxB,MAAD,CAArB;AACD;;AAGDA,EAAAA,MAAM,8BAAQA,MAAR,EACDwB,SADC,CAAN;AAGD;;AAED,SAAS3B,SAAT,GAAqB;AACnB,SAAOG,MAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runWithExpensiveErrorDiagnosticsDisabled = runWithExpensiveErrorDiagnosticsDisabled;\nexports.configure = configure;\nexports.getConfig = getConfig;\n\nvar _prettyDom = require(\"./pretty-dom\");\n\n// It would be cleaner for this to live inside './queries', but\n// other parts of the code assume that all exports from\n// './queries' are query functions.\nlet config = {\n  testIdAttribute: 'data-testid',\n  asyncUtilTimeout: 1000,\n  // this is to support React's async `act` function.\n  // forcing react-testing-library to wrap all async functions would've been\n  // a total nightmare (consider wrapping every findBy* query and then also\n  // updating `within` so those would be wrapped too. Total nightmare).\n  // so we have this config option that's really only intended for\n  // react-testing-library to use. For that reason, this feature will remain\n  // undocumented.\n  asyncWrapper: cb => cb(),\n  eventWrapper: cb => cb(),\n  // default value for the `hidden` option in `ByRole` queries\n  defaultHidden: false,\n  // showOriginalStackTrace flag to show the full error stack traces for async errors\n  showOriginalStackTrace: false,\n  // throw errors w/ suggestions for better queries. Opt in so off by default.\n  throwSuggestions: false,\n\n  // called when getBy* queries fail. (message, container) => Error\n  getElementError(message, container) {\n    const prettifiedDOM = (0, _prettyDom.prettyDOM)(container);\n    const error = new Error([message, prettifiedDOM.length > 0 ? `Ignored nodes: comments, <script />, <style />\\n${(0, _prettyDom.prettyDOM)(container)}` : null].filter(Boolean).join('\\n\\n'));\n    error.name = 'TestingLibraryElementError';\n    return error;\n  },\n\n  _disableExpensiveErrorDiagnostics: false,\n  computedStyleSupportsPseudoElements: false\n};\n\nfunction runWithExpensiveErrorDiagnosticsDisabled(callback) {\n  try {\n    config._disableExpensiveErrorDiagnostics = true;\n    return callback();\n  } finally {\n    config._disableExpensiveErrorDiagnostics = false;\n  }\n}\n\nfunction configure(newConfig) {\n  if (typeof newConfig === 'function') {\n    // Pass the existing config out to the provided function\n    // and accept a delta in return\n    newConfig = newConfig(config);\n  } // Merge the incoming config delta\n\n\n  config = { ...config,\n    ...newConfig\n  };\n}\n\nfunction getConfig() {\n  return config;\n}"]}