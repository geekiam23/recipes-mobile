{"version":3,"sources":["then.js"],"names":["_curry2","require","_assertPromise","then","f","p","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAgBC,OAAO,sBAAlC;;AAEA,IAAIC,cAAc,GAAgBD,OAAO,6BAAzC;;AA6BA,IAAIE,IAAI,GAAgBH,OAAO,CAAC,SAASG,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAClDH,EAAAA,cAAc,CAAC,MAAD,EAASG,CAAT,CAAd;;AAEA,SAAOA,CAAC,CAACF,IAAF,CAAOC,CAAP,CAAP;AACD,CAJ8B,CAA/B;;AAKAE,MAAM,CAACC,OAAP,GAAiBJ,IAAjB","sourcesContent":["var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _assertPromise = /*#__PURE__*/require('./internal/_assertPromise');\n\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      var makeQuery = (email) => ({ query: { email }});\n *\n *      //getMemberName :: String -> Promise ({firstName, lastName})\n *      var getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.then(R.pick(['firstName', 'lastName']))\n *      );\n */\n\n\nvar then = /*#__PURE__*/_curry2(function then(f, p) {\n  _assertPromise('then', p);\n\n  return p.then(f);\n});\nmodule.exports = then;"]}