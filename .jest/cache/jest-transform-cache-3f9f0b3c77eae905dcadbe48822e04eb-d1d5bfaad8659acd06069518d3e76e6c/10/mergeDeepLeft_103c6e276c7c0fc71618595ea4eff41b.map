{"version":3,"sources":["mergeDeepLeft.js"],"names":["_curry2","require","mergeDeepWithKey","mergeDeepLeft","lObj","rObj","k","lVal","rVal","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAgBC,OAAO,sBAAlC;;AAEA,IAAIC,gBAAgB,GAAgBD,OAAO,sBAA3C;;AAyBA,IAAIE,aAAa,GAAgBH,OAAO,CAAC,SAASG,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AAC1E,SAAOH,gBAAgB,CAAC,UAAUI,CAAV,EAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAC/C,WAAOD,IAAP;AACD,GAFsB,EAEpBH,IAFoB,EAEdC,IAFc,CAAvB;AAGD,CAJuC,CAAxC;;AAKAI,MAAM,CAACC,OAAP,GAAiBP,aAAjB","sourcesContent":["var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar mergeDeepWithKey = /*#__PURE__*/require('./mergeDeepWithKey');\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\n\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepLeft;"]}