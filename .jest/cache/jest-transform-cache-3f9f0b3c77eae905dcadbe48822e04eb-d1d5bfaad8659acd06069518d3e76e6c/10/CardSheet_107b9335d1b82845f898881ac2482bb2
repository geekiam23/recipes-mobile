65b208895121e8f5078b468c2d0ae47c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["enabled", "layout", "style"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var _default = React.forwardRef(function CardSheet(_ref, ref) {
  var enabled = _ref.enabled,
      layout = _ref.layout,
      style = _ref.style,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var _React$useState = React.useState(false),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      fill = _React$useState2[0],
      setFill = _React$useState2[1];

  React.useEffect(function () {
    if (typeof document === 'undefined' || !document.body) {
      return;
    }

    var width = document.body.clientWidth;
    var height = document.body.clientHeight;
    setFill(width === layout.width && height === layout.height);
  }, [layout.height, layout.width]);
  return React.createElement(_reactNative.View, _extends({}, rest, {
    ref: ref,
    style: [enabled && fill ? styles.page : styles.card, style]
  }));
});

exports.default = _default;

var styles = _reactNative.StyleSheet.create({
  page: {
    minHeight: '100%'
  },
  card: {
    flex: 1,
    overflow: 'hidden'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhcmRTaGVldC50c3giXSwibmFtZXMiOlsicmVzdCIsIlJlYWN0IiwiZG9jdW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsInNldEZpbGwiLCJsYXlvdXQiLCJlbmFibGVkIiwic3R5bGVzIiwicGFnZSIsIm1pbkhlaWdodCIsImNhcmQiLCJmbGV4Iiwib3ZlcmZsb3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxLQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxZQUFBLEdBQUEsT0FBQSxDQUFBLGNBQUEsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBWWUsS0FBSyxDQUFMLFVBQUEsQ0FBOEIsU0FBQSxTQUFBLE9BQUEsR0FBQSxFQUczQztBQUFBLE1BRkEsT0FFQSxRQUZBLE9BRUE7QUFBQSxNQUZBLE1BRUEsUUFGQSxNQUVBO0FBQUEsTUFGQSxLQUVBLFFBRkEsS0FFQTtBQUFBLE1BRjZCQSxJQUU3Qjs7QUFDQSx3QkFBd0JDLEtBQUssQ0FBTEEsUUFBQUEsQ0FBeEIsS0FBd0JBLENBQXhCO0FBQUE7QUFBQSxNQUFNLElBQU47QUFBQSxNQUFNLE9BQU47O0FBRUFBLEVBQUFBLEtBQUssQ0FBTEEsU0FBQUEsQ0FBZ0IsWUFBTTtBQUNwQixRQUFJLE9BQUEsUUFBQSxLQUFBLFdBQUEsSUFBbUMsQ0FBQ0MsUUFBUSxDQUFoRCxJQUFBLEVBQXVEO0FBRXJEO0FBQ0Q7O0FBRUQsUUFBTUMsS0FBSyxHQUFHRCxRQUFRLENBQVJBLElBQUFBLENBQWQsV0FBQTtBQUNBLFFBQU1FLE1BQU0sR0FBR0YsUUFBUSxDQUFSQSxJQUFBQSxDQUFmLFlBQUE7QUFFQUcsSUFBQUEsT0FBTyxDQUFDRixLQUFLLEtBQUtHLE1BQU0sQ0FBaEJILEtBQUFBLElBQTBCQyxNQUFNLEtBQUtFLE1BQU0sQ0FBbkRELE1BQU8sQ0FBUEE7QUFURkosR0FBQUEsRUFVRyxDQUFDSyxNQUFNLENBQVAsTUFBQSxFQUFnQkEsTUFBTSxDQVZ6QkwsS0FVRyxDQVZIQTtBQVlBLFNBQ0UsS0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUQsSUFBQSxFQUFBLFFBQUEsQ0FBQSxFQUFBLEVBQUEsSUFBQSxFQUFBO0FBRUUsSUFBQSxHQUFHLEVBRkwsR0FBQTtBQUdFLElBQUEsS0FBSyxFQUFFLENBQUNNLE9BQU8sSUFBUEEsSUFBQUEsR0FBa0JDLE1BQU0sQ0FBeEJELElBQUFBLEdBQWdDQyxNQUFNLENBQXZDLElBQUEsRUFBQSxLQUFBO0FBSFQsR0FBQSxDQUFBLENBREY7QUFsQmEsQ0FBQSxDOzs7O0FBMkJmLElBQU1BLE1BQU0sR0FBRyxZQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsQ0FBa0I7QUFDL0JDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxTQUFTLEVBQUU7QUFEUCxHQUR5QjtBQUkvQkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFEQSxDQUFBO0FBRUpDLElBQUFBLFFBQVEsRUFBRTtBQUZOO0FBSnlCLENBQWxCLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBWaWV3UHJvcHMsIFN0eWxlU2hlZXQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG50eXBlIFByb3BzID0gVmlld1Byb3BzICYge1xuICBlbmFibGVkOiBib29sZWFuO1xuICBsYXlvdXQ6IHsgd2lkdGg6IG51bWJlcjsgaGVpZ2h0OiBudW1iZXIgfTtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn07XG5cbi8vIFRoaXMgY29tcG9uZW50IHdpbGwgcmVuZGVyIGEgcGFnZSB3aGljaCBvdmVyZmxvd3MgdGhlIHNjcmVlblxuLy8gaWYgdGhlIGNvbnRhaW5lciBmaWxscyB0aGUgYm9keSBieSBjb21wYXJpbmcgdGhlIHNpemVcbi8vIFRoaXMgbGV0cyB0aGUgZG9jdW1lbnQuYm9keSBoYW5kbGUgc2Nyb2xsaW5nIG9mIHRoZSBjb250ZW50XG4vLyBJdCdzIG5lY2Vzc2FyeSBmb3IgbW9iaWxlIGJyb3dzZXJzIHRvIGJlIGFibGUgdG8gaGlkZSBhZGRyZXNzIGJhciBvbiBzY3JvbGxcbmV4cG9ydCBkZWZhdWx0IFJlYWN0LmZvcndhcmRSZWY8VmlldywgUHJvcHM+KGZ1bmN0aW9uIENhcmRTaGVldChcbiAgeyBlbmFibGVkLCBsYXlvdXQsIHN0eWxlLCAuLi5yZXN0IH0sXG4gIHJlZlxuKSB7XG4gIGNvbnN0IFtmaWxsLCBzZXRGaWxsXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnIHx8ICFkb2N1bWVudC5ib2R5KSB7XG4gICAgICAvLyBPbmx5IHJ1biB3aGVuIERPTSBpcyBhdmFpbGFibGVcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB3aWR0aCA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGg7XG4gICAgY29uc3QgaGVpZ2h0ID0gZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7XG5cbiAgICBzZXRGaWxsKHdpZHRoID09PSBsYXlvdXQud2lkdGggJiYgaGVpZ2h0ID09PSBsYXlvdXQuaGVpZ2h0KTtcbiAgfSwgW2xheW91dC5oZWlnaHQsIGxheW91dC53aWR0aF0pO1xuXG4gIHJldHVybiAoXG4gICAgPFZpZXdcbiAgICAgIHsuLi5yZXN0fVxuICAgICAgcmVmPXtyZWZ9XG4gICAgICBzdHlsZT17W2VuYWJsZWQgJiYgZmlsbCA/IHN0eWxlcy5wYWdlIDogc3R5bGVzLmNhcmQsIHN0eWxlXX1cbiAgICAvPlxuICApO1xufSk7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgcGFnZToge1xuICAgIG1pbkhlaWdodDogJzEwMCUnLFxuICB9LFxuICBjYXJkOiB7XG4gICAgZmxleDogMSxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIH0sXG59KTtcbiJdfQ==