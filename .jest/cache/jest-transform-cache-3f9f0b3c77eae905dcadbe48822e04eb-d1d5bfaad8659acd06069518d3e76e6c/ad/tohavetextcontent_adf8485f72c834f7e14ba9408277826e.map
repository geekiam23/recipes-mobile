{"version":3,"sources":["to-have-text-content.js"],"names":["Object","defineProperty","exports","value","toHaveTextContent","_jestMatcherUtils","require","_ramda","_utils","getText","child","currentValue","arguments","length","undefined","Array","isArray","reduce","acc","element","path","checkWith","_this","checkReactElement","textContent","compose","normalize","join","filter","map","is","defaultTo","pass","matches","message","to","isNot","getMessage","matcherHint"],"mappings":"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","sourcesContent":["Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveTextContent = toHaveTextContent;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _ramda = require(\"ramda\");\n\nvar _utils = require(\"./utils\");\n\nfunction getText(child) {\n  var currentValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var value = currentValue;\n\n  if (!child) {\n    return value;\n  } else if (Array.isArray(child)) {\n    return child.reduce(function (acc, element) {\n      return acc + getText((0, _ramda.path)(['props', 'children'], element));\n    }, '');\n  } else if (typeof child === 'object') {\n    return getText((0, _ramda.path)(['props', 'children'], child), value);\n  } else {\n    return \"\" + value + child;\n  }\n}\n\nfunction toHaveTextContent(element, checkWith) {\n  var _this = this;\n\n  (0, _utils.checkReactElement)(element, toHaveTextContent, this);\n  var textContent = (0, _ramda.compose)(_utils.normalize, (0, _ramda.join)(''), (0, _ramda.filter)(function (child) {\n    return typeof child === 'string' || typeof child === 'number';\n  }), (0, _ramda.map)(function (child) {\n    return typeof child === 'object' ? getText(child) : child;\n  }), function (child) {\n    return (0, _ramda.is)(Array, child) ? child : [child];\n  }, (0, _ramda.defaultTo)([]), (0, _ramda.path)(['props', 'children']))(element);\n  return {\n    pass: (0, _utils.matches)(textContent, checkWith),\n    message: function message() {\n      var to = _this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)((0, _jestMatcherUtils.matcherHint)((_this.isNot ? '.not' : '') + \".toHaveTextContent\", 'element', ''), \"Expected element \" + to + \" have text content\", checkWith, 'Received', textContent);\n    }\n  };\n}"]}