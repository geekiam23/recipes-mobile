f5f9e1a79b40af3df387ec6c32d935ed
var _curry2 = require("./internal/_curry2");

var _dispatchable = require("./internal/_dispatchable");

var _xtakeWhile = require("./internal/_xtakeWhile");

var slice = require("./slice");

var takeWhile = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {
  var idx = 0;
  var len = xs.length;

  while (idx < len && fn(xs[idx])) {
    idx += 1;
  }

  return slice(0, idx, xs);
}));

module.exports = takeWhile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRha2VXaGlsZS5qcyJdLCJuYW1lcyI6WyJfY3VycnkyIiwicmVxdWlyZSIsIl9kaXNwYXRjaGFibGUiLCJfeHRha2VXaGlsZSIsInNsaWNlIiwidGFrZVdoaWxlIiwiZm4iLCJ4cyIsImlkeCIsImxlbiIsImxlbmd0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLE9BQU8sR0FBZ0JDLE9BQU8sc0JBQWxDOztBQUVBLElBQUlDLGFBQWEsR0FBZ0JELE9BQU8sNEJBQXhDOztBQUVBLElBQUlFLFdBQVcsR0FBZ0JGLE9BQU8sMEJBQXRDOztBQUVBLElBQUlHLEtBQUssR0FBZ0JILE9BQU8sV0FBaEM7O0FBaUNBLElBQUlJLFNBQVMsR0FBZ0JMLE9BQU8sQ0FBZUUsYUFBYSxDQUFDLENBQUMsV0FBRCxDQUFELEVBQWdCQyxXQUFoQixFQUE2QixTQUFTRSxTQUFULENBQW1CQyxFQUFuQixFQUF1QkMsRUFBdkIsRUFBMkI7QUFDdEgsTUFBSUMsR0FBRyxHQUFHLENBQVY7QUFDQSxNQUFJQyxHQUFHLEdBQUdGLEVBQUUsQ0FBQ0csTUFBYjs7QUFDQSxTQUFPRixHQUFHLEdBQUdDLEdBQU4sSUFBYUgsRUFBRSxDQUFDQyxFQUFFLENBQUNDLEdBQUQsQ0FBSCxDQUF0QixFQUFpQztBQUMvQkEsSUFBQUEsR0FBRyxJQUFJLENBQVA7QUFDRDs7QUFDRCxTQUFPSixLQUFLLENBQUMsQ0FBRCxFQUFJSSxHQUFKLEVBQVNELEVBQVQsQ0FBWjtBQUNELENBUCtELENBQTVCLENBQXBDOztBQVFBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLFNBQWpCIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9jdXJyeTIgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi9pbnRlcm5hbC9fY3VycnkyJyk7XG5cbnZhciBfZGlzcGF0Y2hhYmxlID0gLyojX19QVVJFX18qL3JlcXVpcmUoJy4vaW50ZXJuYWwvX2Rpc3BhdGNoYWJsZScpO1xuXG52YXIgX3h0YWtlV2hpbGUgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi9pbnRlcm5hbC9feHRha2VXaGlsZScpO1xuXG52YXIgc2xpY2UgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi9zbGljZScpO1xuXG4vKipcbiAqIFJldHVybnMgYSBuZXcgbGlzdCBjb250YWluaW5nIHRoZSBmaXJzdCBgbmAgZWxlbWVudHMgb2YgYSBnaXZlbiBsaXN0LFxuICogcGFzc2luZyBlYWNoIHZhbHVlIHRvIHRoZSBzdXBwbGllZCBwcmVkaWNhdGUgZnVuY3Rpb24sIGFuZCB0ZXJtaW5hdGluZyB3aGVuXG4gKiB0aGUgcHJlZGljYXRlIGZ1bmN0aW9uIHJldHVybnMgYGZhbHNlYC4gRXhjbHVkZXMgdGhlIGVsZW1lbnQgdGhhdCBjYXVzZWQgdGhlXG4gKiBwcmVkaWNhdGUgZnVuY3Rpb24gdG8gZmFpbC4gVGhlIHByZWRpY2F0ZSBmdW5jdGlvbiBpcyBwYXNzZWQgb25lIGFyZ3VtZW50OlxuICogKih2YWx1ZSkqLlxuICpcbiAqIERpc3BhdGNoZXMgdG8gdGhlIGB0YWtlV2hpbGVgIG1ldGhvZCBvZiB0aGUgc2Vjb25kIGFyZ3VtZW50LCBpZiBwcmVzZW50LlxuICpcbiAqIEFjdHMgYXMgYSB0cmFuc2R1Y2VyIGlmIGEgdHJhbnNmb3JtZXIgaXMgZ2l2ZW4gaW4gbGlzdCBwb3NpdGlvbi5cbiAqXG4gKiBAZnVuY1xuICogQG1lbWJlck9mIFJcbiAqIEBzaW5jZSB2MC4xLjBcbiAqIEBjYXRlZ29yeSBMaXN0XG4gKiBAc2lnIChhIC0+IEJvb2xlYW4pIC0+IFthXSAtPiBbYV1cbiAqIEBzaWcgKGEgLT4gQm9vbGVhbikgLT4gU3RyaW5nIC0+IFN0cmluZ1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIGNhbGxlZCBwZXIgaXRlcmF0aW9uLlxuICogQHBhcmFtIHtBcnJheX0geHMgVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHJldHVybiB7QXJyYXl9IEEgbmV3IGFycmF5LlxuICogQHNlZSBSLmRyb3BXaGlsZSwgUi50cmFuc2R1Y2UsIFIuYWRkSW5kZXhcbiAqIEBleGFtcGxlXG4gKlxuICogICAgICBjb25zdCBpc05vdEZvdXIgPSB4ID0+IHggIT09IDQ7XG4gKlxuICogICAgICBSLnRha2VXaGlsZShpc05vdEZvdXIsIFsxLCAyLCAzLCA0LCAzLCAyLCAxXSk7IC8vPT4gWzEsIDIsIDNdXG4gKlxuICogICAgICBSLnRha2VXaGlsZSh4ID0+IHggIT09ICdkJyAsICdSYW1kYScpOyAvLz0+ICdSYW0nXG4gKi9cblxuXG52YXIgdGFrZVdoaWxlID0gLyojX19QVVJFX18qL19jdXJyeTIoIC8qI19fUFVSRV9fKi9fZGlzcGF0Y2hhYmxlKFsndGFrZVdoaWxlJ10sIF94dGFrZVdoaWxlLCBmdW5jdGlvbiB0YWtlV2hpbGUoZm4sIHhzKSB7XG4gIHZhciBpZHggPSAwO1xuICB2YXIgbGVuID0geHMubGVuZ3RoO1xuICB3aGlsZSAoaWR4IDwgbGVuICYmIGZuKHhzW2lkeF0pKSB7XG4gICAgaWR4ICs9IDE7XG4gIH1cbiAgcmV0dXJuIHNsaWNlKDAsIGlkeCwgeHMpO1xufSkpO1xubW9kdWxlLmV4cG9ydHMgPSB0YWtlV2hpbGU7Il19