{"version":3,"sources":["complement.js"],"names":["lift","require","not","complement","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAgBC,OAAO,UAA/B;;AAEA,IAAIC,GAAG,GAAgBD,OAAO,SAA9B;;AA0BA,IAAIE,UAAU,GAAgBH,IAAI,CAACE,GAAD,CAAlC;AACAE,MAAM,CAACC,OAAP,GAAiBF,UAAjB","sourcesContent":["var lift = /*#__PURE__*/require('./lift');\n\nvar not = /*#__PURE__*/require('./not');\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\n\nvar complement = /*#__PURE__*/lift(not);\nmodule.exports = complement;"]}