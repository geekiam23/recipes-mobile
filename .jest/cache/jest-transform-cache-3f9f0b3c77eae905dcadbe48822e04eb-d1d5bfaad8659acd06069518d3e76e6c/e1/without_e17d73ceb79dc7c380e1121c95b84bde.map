{"version":3,"sources":["without.js"],"names":["_includes","require","_curry2","flip","reject","without","xs","list","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAgBC,OAAO,wBAApC;;AAEA,IAAIC,OAAO,GAAgBD,OAAO,sBAAlC;;AAEA,IAAIE,IAAI,GAAgBF,OAAO,UAA/B;;AAEA,IAAIG,MAAM,GAAgBH,OAAO,YAAjC;;AAuBA,IAAII,OAAO,GAAgBH,OAAO,CAAC,UAAUI,EAAV,EAAcC,IAAd,EAAoB;AACrD,SAAOH,MAAM,CAACD,IAAI,CAACH,SAAD,CAAJ,CAAgBM,EAAhB,CAAD,EAAsBC,IAAtB,CAAb;AACD,CAFiC,CAAlC;;AAGAC,MAAM,CAACC,OAAP,GAAiBJ,OAAjB","sourcesContent":["var _includes = /*#__PURE__*/require('./internal/_includes');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar flip = /*#__PURE__*/require('./flip');\n\nvar reject = /*#__PURE__*/require('./reject');\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\nmodule.exports = without;"]}