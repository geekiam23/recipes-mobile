b8976ce83909b44634c5fcd43b65e763
"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;
var roletypeRole = {
  abstract: true,
  accessibleNameRequired: false,
  baseConcepts: [],
  childrenPresentational: false,
  nameFrom: [],
  prohibitedProps: [],
  props: {
    'aria-atomic': null,
    'aria-busy': null,
    'aria-controls': null,
    'aria-current': null,
    'aria-describedby': null,
    'aria-details': null,
    'aria-dropeffect': null,
    'aria-flowto': null,
    'aria-grabbed': null,
    'aria-hidden': null,
    'aria-keyshortcuts': null,
    'aria-label': null,
    'aria-labelledby': null,
    'aria-live': null,
    'aria-owns': null,
    'aria-relevant': null,
    'aria-roledescription': null
  },
  relatedConcepts: [{
    concept: {
      name: 'rel'
    },
    module: 'HTML'
  }, {
    concept: {
      name: 'role'
    },
    module: 'XHTML'
  }, {
    concept: {
      name: 'type'
    },
    module: 'Dublin Core'
  }],
  requireContextRole: [],
  requiredContextRole: [],
  requiredOwnedElements: [],
  requiredProps: {},
  superClass: []
};
var _default = roletypeRole;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGV0eXBlUm9sZS5qcyJdLCJuYW1lcyI6WyJfT2JqZWN0JGRlZmluZVByb3BlcnR5IiwicmVxdWlyZSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJyb2xldHlwZVJvbGUiLCJhYnN0cmFjdCIsImFjY2Vzc2libGVOYW1lUmVxdWlyZWQiLCJiYXNlQ29uY2VwdHMiLCJjaGlsZHJlblByZXNlbnRhdGlvbmFsIiwibmFtZUZyb20iLCJwcm9oaWJpdGVkUHJvcHMiLCJwcm9wcyIsInJlbGF0ZWRDb25jZXB0cyIsImNvbmNlcHQiLCJuYW1lIiwibW9kdWxlIiwicmVxdWlyZUNvbnRleHRSb2xlIiwicmVxdWlyZWRDb250ZXh0Um9sZSIsInJlcXVpcmVkT3duZWRFbGVtZW50cyIsInJlcXVpcmVkUHJvcHMiLCJzdXBlckNsYXNzIiwiX2RlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLHNCQUFzQixHQUFHQyxPQUFPLENBQUMsOERBQUQsQ0FBcEM7O0FBRUFELHNCQUFzQixDQUFDRSxPQUFELEVBQVUsWUFBVixFQUF3QjtBQUM1Q0MsRUFBQUEsS0FBSyxFQUFFO0FBRHFDLENBQXhCLENBQXRCOztBQUlBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0IsS0FBSyxDQUF2QjtBQUNBLElBQUlDLFlBQVksR0FBRztBQUNqQkMsRUFBQUEsUUFBUSxFQUFFLElBRE87QUFFakJDLEVBQUFBLHNCQUFzQixFQUFFLEtBRlA7QUFHakJDLEVBQUFBLFlBQVksRUFBRSxFQUhHO0FBSWpCQyxFQUFBQSxzQkFBc0IsRUFBRSxLQUpQO0FBS2pCQyxFQUFBQSxRQUFRLEVBQUUsRUFMTztBQU1qQkMsRUFBQUEsZUFBZSxFQUFFLEVBTkE7QUFPakJDLEVBQUFBLEtBQUssRUFBRTtBQUNMLG1CQUFlLElBRFY7QUFFTCxpQkFBYSxJQUZSO0FBR0wscUJBQWlCLElBSFo7QUFJTCxvQkFBZ0IsSUFKWDtBQUtMLHdCQUFvQixJQUxmO0FBTUwsb0JBQWdCLElBTlg7QUFPTCx1QkFBbUIsSUFQZDtBQVFMLG1CQUFlLElBUlY7QUFTTCxvQkFBZ0IsSUFUWDtBQVVMLG1CQUFlLElBVlY7QUFXTCx5QkFBcUIsSUFYaEI7QUFZTCxrQkFBYyxJQVpUO0FBYUwsdUJBQW1CLElBYmQ7QUFjTCxpQkFBYSxJQWRSO0FBZUwsaUJBQWEsSUFmUjtBQWdCTCxxQkFBaUIsSUFoQlo7QUFpQkwsNEJBQXdCO0FBakJuQixHQVBVO0FBMEJqQkMsRUFBQUEsZUFBZSxFQUFFLENBQUM7QUFDaEJDLElBQUFBLE9BQU8sRUFBRTtBQUNQQyxNQUFBQSxJQUFJLEVBQUU7QUFEQyxLQURPO0FBSWhCQyxJQUFBQSxNQUFNLEVBQUU7QUFKUSxHQUFELEVBS2Q7QUFDREYsSUFBQUEsT0FBTyxFQUFFO0FBQ1BDLE1BQUFBLElBQUksRUFBRTtBQURDLEtBRFI7QUFJREMsSUFBQUEsTUFBTSxFQUFFO0FBSlAsR0FMYyxFQVVkO0FBQ0RGLElBQUFBLE9BQU8sRUFBRTtBQUNQQyxNQUFBQSxJQUFJLEVBQUU7QUFEQyxLQURSO0FBSURDLElBQUFBLE1BQU0sRUFBRTtBQUpQLEdBVmMsQ0ExQkE7QUEwQ2pCQyxFQUFBQSxrQkFBa0IsRUFBRSxFQTFDSDtBQTJDakJDLEVBQUFBLG1CQUFtQixFQUFFLEVBM0NKO0FBNENqQkMsRUFBQUEscUJBQXFCLEVBQUUsRUE1Q047QUE2Q2pCQyxFQUFBQSxhQUFhLEVBQUUsRUE3Q0U7QUE4Q2pCQyxFQUFBQSxVQUFVLEVBQUU7QUE5Q0ssQ0FBbkI7QUFnREEsSUFBSUMsUUFBUSxHQUFHakIsWUFBZjtBQUNBSCxPQUFPLENBQUNFLE9BQVIsR0FBa0JrQixRQUFsQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX09iamVjdCRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS1jb3JlanMzL2NvcmUtanMtc3RhYmxlL29iamVjdC9kZWZpbmUtcHJvcGVydHlcIik7XG5cbl9PYmplY3QkZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgcm9sZXR5cGVSb2xlID0ge1xuICBhYnN0cmFjdDogdHJ1ZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogW10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtYXRvbWljJzogbnVsbCxcbiAgICAnYXJpYS1idXN5JzogbnVsbCxcbiAgICAnYXJpYS1jb250cm9scyc6IG51bGwsXG4gICAgJ2FyaWEtY3VycmVudCc6IG51bGwsXG4gICAgJ2FyaWEtZGVzY3JpYmVkYnknOiBudWxsLFxuICAgICdhcmlhLWRldGFpbHMnOiBudWxsLFxuICAgICdhcmlhLWRyb3BlZmZlY3QnOiBudWxsLFxuICAgICdhcmlhLWZsb3d0byc6IG51bGwsXG4gICAgJ2FyaWEtZ3JhYmJlZCc6IG51bGwsXG4gICAgJ2FyaWEtaGlkZGVuJzogbnVsbCxcbiAgICAnYXJpYS1rZXlzaG9ydGN1dHMnOiBudWxsLFxuICAgICdhcmlhLWxhYmVsJzogbnVsbCxcbiAgICAnYXJpYS1sYWJlbGxlZGJ5JzogbnVsbCxcbiAgICAnYXJpYS1saXZlJzogbnVsbCxcbiAgICAnYXJpYS1vd25zJzogbnVsbCxcbiAgICAnYXJpYS1yZWxldmFudCc6IG51bGwsXG4gICAgJ2FyaWEtcm9sZWRlc2NyaXB0aW9uJzogbnVsbFxuICB9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3JlbCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH0sIHtcbiAgICBjb25jZXB0OiB7XG4gICAgICBuYW1lOiAncm9sZSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ1hIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ3R5cGUnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdEdWJsaW4gQ29yZSdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW11cbn07XG52YXIgX2RlZmF1bHQgPSByb2xldHlwZVJvbGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXX0=