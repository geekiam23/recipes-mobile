{"version":3,"sources":["query-helpers.js"],"names":["Object","defineProperty","exports","value","getElementError","getMultipleElementsFoundError","queryAllByAttribute","queryByAttribute","makeSingleQuery","makeGetAllQuery","makeFindQuery","buildQueries","wrapSingleQueryWithSuggestion","wrapAllByQueryWithSuggestion","_suggestions","require","_matches","_waitFor","_config","message","container","getConfig","attribute","text","exact","collapseWhitespace","trim","normalizer","matcher","matches","fuzzyMatches","matchNormalizer","makeNormalizer","Array","from","querySelectorAll","filter","node","getAttribute","args","els","length","allQuery","getMultipleError","elementStrings","map","element","join","getSuggestionError","suggestion","toString","getMissingError","getter","options","waitForOptions","waitFor","query","queryAllByName","variant","slice","suggest","throwSuggestions","getSuggestedQuery","endsWith","queryName","uniqueSuggestionMessages","Set","_getSuggestedQuery","queryAllBy","queryBy","name","getAllBy","getBy","getByWithSuggestions","getAllWithSuggestions","replace","findAllBy","findBy"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getElementError = getElementError;\nexports.getMultipleElementsFoundError = getMultipleElementsFoundError;\nexports.queryAllByAttribute = queryAllByAttribute;\nexports.queryByAttribute = queryByAttribute;\nexports.makeSingleQuery = makeSingleQuery;\nexports.makeGetAllQuery = makeGetAllQuery;\nexports.makeFindQuery = makeFindQuery;\nexports.buildQueries = buildQueries;\nexports.wrapSingleQueryWithSuggestion = exports.wrapAllByQueryWithSuggestion = void 0;\n\nvar _suggestions = require(\"./suggestions\");\n\nvar _matches = require(\"./matches\");\n\nvar _waitFor = require(\"./wait-for\");\n\nvar _config = require(\"./config\");\n\nfunction getElementError(message, container) {\n  return (0, _config.getConfig)().getElementError(message, container);\n}\n\nfunction getMultipleElementsFoundError(message, container) {\n  return getElementError(`${message}\\n\\n(If this is intentional, then use the \\`*AllBy*\\` variant of the query (like \\`queryAllByText\\`, \\`getAllByText\\`, or \\`findAllByText\\`)).`, container);\n}\n\nfunction queryAllByAttribute(attribute, container, text, {\n  exact = true,\n  collapseWhitespace,\n  trim,\n  normalizer\n} = {}) {\n  const matcher = exact ? _matches.matches : _matches.fuzzyMatches;\n  const matchNormalizer = (0, _matches.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  return Array.from(container.querySelectorAll(`[${attribute}]`)).filter(node => matcher(node.getAttribute(attribute), node, text, matchNormalizer));\n}\n\nfunction queryByAttribute(attribute, container, text, ...args) {\n  const els = queryAllByAttribute(attribute, container, text, ...args);\n\n  if (els.length > 1) {\n    throw getMultipleElementsFoundError(`Found multiple elements by [${attribute}=${text}]`, container);\n  }\n\n  return els[0] || null;\n} // this accepts a query function and returns a function which throws an error\n// if more than one elements is returned, otherwise it returns the first\n// element or null\n\n\nfunction makeSingleQuery(allQuery, getMultipleError) {\n  return (container, ...args) => {\n    const els = allQuery(container, ...args);\n\n    if (els.length > 1) {\n      const elementStrings = els.map(element => getElementError(null, element).message).join('\\n\\n');\n      throw getMultipleElementsFoundError(`${getMultipleError(container, ...args)}\n\nHere are the matching elements:\n\n${elementStrings}`, container);\n    }\n\n    return els[0] || null;\n  };\n}\n\nfunction getSuggestionError(suggestion, container) {\n  return (0, _config.getConfig)().getElementError(`A better query is available, try this:\n${suggestion.toString()}\n`, container);\n} // this accepts a query function and returns a function which throws an error\n// if an empty list of elements is returned\n\n\nfunction makeGetAllQuery(allQuery, getMissingError) {\n  return (container, ...args) => {\n    const els = allQuery(container, ...args);\n\n    if (!els.length) {\n      throw (0, _config.getConfig)().getElementError(getMissingError(container, ...args), container);\n    }\n\n    return els;\n  };\n} // this accepts a getter query function and returns a function which calls\n// waitFor and passing a function which invokes the getter.\n\n\nfunction makeFindQuery(getter) {\n  return (container, text, options, waitForOptions) => {\n    return (0, _waitFor.waitFor)(() => {\n      return getter(container, text, options);\n    }, {\n      container,\n      ...waitForOptions\n    });\n  };\n}\n\nconst wrapSingleQueryWithSuggestion = (query, queryAllByName, variant) => (container, ...args) => {\n  const element = query(container, ...args);\n  const [{\n    suggest = (0, _config.getConfig)().throwSuggestions\n  } = {}] = args.slice(-1);\n\n  if (element && suggest) {\n    const suggestion = (0, _suggestions.getSuggestedQuery)(element, variant);\n\n    if (suggestion && !queryAllByName.endsWith(suggestion.queryName)) {\n      throw getSuggestionError(suggestion.toString(), container);\n    }\n  }\n\n  return element;\n};\n\nexports.wrapSingleQueryWithSuggestion = wrapSingleQueryWithSuggestion;\n\nconst wrapAllByQueryWithSuggestion = (query, queryAllByName, variant) => (container, ...args) => {\n  const els = query(container, ...args);\n  const [{\n    suggest = (0, _config.getConfig)().throwSuggestions\n  } = {}] = args.slice(-1);\n\n  if (els.length && suggest) {\n    // get a unique list of all suggestion messages.  We are only going to make a suggestion if\n    // all the suggestions are the same\n    const uniqueSuggestionMessages = [...new Set(els.map(element => {\n      var _getSuggestedQuery;\n\n      return (_getSuggestedQuery = (0, _suggestions.getSuggestedQuery)(element, variant)) == null ? void 0 : _getSuggestedQuery.toString();\n    }))];\n\n    if ( // only want to suggest if all the els have the same suggestion.\n    uniqueSuggestionMessages.length === 1 && !queryAllByName.endsWith((0, _suggestions.getSuggestedQuery)(els[0], variant).queryName)) {\n      throw getSuggestionError(uniqueSuggestionMessages[0], container);\n    }\n  }\n\n  return els;\n};\n\nexports.wrapAllByQueryWithSuggestion = wrapAllByQueryWithSuggestion;\n\nfunction buildQueries(queryAllBy, getMultipleError, getMissingError) {\n  const queryBy = wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllBy, getMultipleError), queryAllBy.name, 'query');\n  const getAllBy = makeGetAllQuery(queryAllBy, getMissingError);\n  const getBy = makeSingleQuery(getAllBy, getMultipleError);\n  const getByWithSuggestions = wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'get');\n  const getAllWithSuggestions = wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name.replace('query', 'get'), 'getAll');\n  const findAllBy = makeFindQuery(wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name, 'findAll'));\n  const findBy = makeFindQuery(wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'find'));\n  return [queryBy, getAllWithSuggestions, getByWithSuggestions, findAllBy, findBy];\n}"]}