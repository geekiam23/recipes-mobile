{"version":3,"sources":["pathEq.js"],"names":["_curry3","require","equals","path","pathEq","_path","val","obj","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAgBC,OAAO,sBAAlC;;AAEA,IAAIC,MAAM,GAAgBD,OAAO,YAAjC;;AAEA,IAAIE,IAAI,GAAgBF,OAAO,UAA/B;;AA4BA,IAAIG,MAAM,GAAgBJ,OAAO,CAAC,SAASI,MAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AACjE,SAAOL,MAAM,CAACC,IAAI,CAACE,KAAD,EAAQE,GAAR,CAAL,EAAmBD,GAAnB,CAAb;AACD,CAFgC,CAAjC;;AAGAE,MAAM,CAACC,OAAP,GAAiBL,MAAjB","sourcesContent":["var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar equals = /*#__PURE__*/require('./equals');\n\nvar path = /*#__PURE__*/require('./path');\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\n\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nmodule.exports = pathEq;"]}