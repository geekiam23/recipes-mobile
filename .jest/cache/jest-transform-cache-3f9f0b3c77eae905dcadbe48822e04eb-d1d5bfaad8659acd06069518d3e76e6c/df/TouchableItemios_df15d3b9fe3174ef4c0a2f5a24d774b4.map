{"version":3,"sources":["TouchableItem.ios.tsx"],"names":["AnimatedBaseButton","Animated","BaseButton","useNativeDriver","Platform","TouchableItem","React","pressOpacity","borderless","enabled","active","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","toValue","render","rest","opacity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,0BAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,kBAAkB,GAAGC,YAAAA,CAAAA,QAAAA,CAAAA,uBAAAA,CAAiCC,0BAAAA,CAA5D,UAA2BD,CAA3B;;AAMA,IAAME,eAAe,GAAGC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAxB,KAAA;;IAEe,a;;;;;AAAmD,2BAAA;AAAA;;AAAA;;AAAA,sCAAA,IAAA;AAAA,MAAA,IAAA;AAAA;;AAAA,oDAAA,IAAA;;AAAA,IAAA,eAAA,8CAAA,SAAA,EAO9C,IAAIH,YAAAA,CAAAA,QAAAA,CAAJ,KAAA,CAP8C,CAO9C,CAP8C,CAAA;;AAAA,IAAA,eAAA,8CAAA,yBAAA,EAS7BS,UAAAA,MAAD,EAAqB;AAAA,UAAA,qBAAA,EAAA,WAAA;;AACrDT,MAAAA,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAgB,MAAhBA,OAAAA,EAA8B;AAC5BU,QAAAA,SAAS,EADmB,IAAA;AAE5BC,QAAAA,OAAO,EAFqB,GAAA;AAG5BC,QAAAA,IAAI,EAHwB,CAAA;AAI5BC,QAAAA,iBAAiB,EAJW,IAAA;AAK5BC,QAAAA,yBAAyB,EALG,IAAA;AAM5BC,QAAAA,kBAAkB,EANU,IAAA;AAO5BC,QAAAA,OAAO,EAAEP,MAAM,GAAG,MAAA,KAAA,CAAH,YAAA,GAPa,CAAA;AAQ5BP,QAAAA,eAAAA,EAAAA;AAR4B,OAA9BF,EAAAA,KAAAA;;AAWA,OAAA,qBAAA,GAAA,CAAA,WAAA,GAAA,MAAA,KAAA,EAAA,mBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,IAAA,CAAA,WAAA,EAAA,MAAA,CAAA;AArB8D,KAAA,CAAA;;AAAA;AAAA;;;;WAwBhEiB,kBAAS;AACP,yBAA8C,KAA9C,KAAA;AAAA,UAAM,QAAN,gBAAM,QAAN;AAAA,UAAM,KAAN,gBAAM,KAAN;AAAA,UAAM,OAAN,gBAAM,OAAN;AAAA,UAAqCC,IAArC;AAEA,aACE,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,QAAA,mBAAmB,EAAE,KAFvB,uBAAA;AAGE,QAAA,KAAK,EAAE,CAAA,KAAA,EAAQV,OAAO,IAAI;AAAEW,UAAAA,OAAO,EAAE,KAAKA;AAAhB,SAAnB;AAHT,OAAA,CAAA,EADF,QACE,CADF;AASD;;;EApCwCd,KAAK,CAAjC,S;;;;gBAAMD,a,kBACG;AACpBE,EAAAA,YAAY,EADQ,GAAA;AAEpBC,EAAAA,UAAU,EAFU,IAAA;AAGpBC,EAAAA,OAAO,EAAE;AAHW,C","sourcesContent":["import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { BaseButton } from 'react-native-gesture-handler';\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\ntype Props = React.ComponentProps<typeof BaseButton> & {\n  pressOpacity: number;\n};\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default class TouchableItem extends React.Component<Props> {\n  static defaultProps = {\n    pressOpacity: 0.3,\n    borderless: true,\n    enabled: true,\n  };\n\n  private opacity = new Animated.Value(1);\n\n  private handleActiveStateChange = (active: boolean) => {\n    Animated.spring(this.opacity, {\n      stiffness: 1000,\n      damping: 500,\n      mass: 3,\n      overshootClamping: true,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 0.01,\n      toValue: active ? this.props.pressOpacity : 1,\n      useNativeDriver,\n    }).start();\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, enabled, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this.handleActiveStateChange}\n        style={[style, enabled && { opacity: this.opacity }]}\n      >\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n"]}