61c6a7f7942f035b098ce2d328b031df
var _arity = require("./internal/_arity");

var _curry2 = require("./internal/_curry2");

var _has = require("./internal/_has");

var memoizeWith = _curry2(function memoizeWith(mFn, fn) {
  var cache = {};
  return _arity(fn.length, function () {
    var key = mFn.apply(this, arguments);

    if (!_has(key, cache)) {
      cache[key] = fn.apply(this, arguments);
    }

    return cache[key];
  });
});

module.exports = memoizeWith;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbW9pemVXaXRoLmpzIl0sIm5hbWVzIjpbIl9hcml0eSIsInJlcXVpcmUiLCJfY3VycnkyIiwiX2hhcyIsIm1lbW9pemVXaXRoIiwibUZuIiwiZm4iLCJjYWNoZSIsImxlbmd0aCIsImtleSIsImFwcGx5IiwiYXJndW1lbnRzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsTUFBTSxHQUFnQkMsT0FBTyxxQkFBakM7O0FBRUEsSUFBSUMsT0FBTyxHQUFnQkQsT0FBTyxzQkFBbEM7O0FBRUEsSUFBSUUsSUFBSSxHQUFnQkYsT0FBTyxtQkFBL0I7O0FBZ0NBLElBQUlHLFdBQVcsR0FBZ0JGLE9BQU8sQ0FBQyxTQUFTRSxXQUFULENBQXFCQyxHQUFyQixFQUEwQkMsRUFBMUIsRUFBOEI7QUFDbkUsTUFBSUMsS0FBSyxHQUFHLEVBQVo7QUFDQSxTQUFPUCxNQUFNLENBQUNNLEVBQUUsQ0FBQ0UsTUFBSixFQUFZLFlBQVk7QUFDbkMsUUFBSUMsR0FBRyxHQUFHSixHQUFHLENBQUNLLEtBQUosQ0FBVSxJQUFWLEVBQWdCQyxTQUFoQixDQUFWOztBQUNBLFFBQUksQ0FBQ1IsSUFBSSxDQUFDTSxHQUFELEVBQU1GLEtBQU4sQ0FBVCxFQUF1QjtBQUNyQkEsTUFBQUEsS0FBSyxDQUFDRSxHQUFELENBQUwsR0FBYUgsRUFBRSxDQUFDSSxLQUFILENBQVMsSUFBVCxFQUFlQyxTQUFmLENBQWI7QUFDRDs7QUFDRCxXQUFPSixLQUFLLENBQUNFLEdBQUQsQ0FBWjtBQUNELEdBTlksQ0FBYjtBQU9ELENBVHFDLENBQXRDOztBQVVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULFdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9hcml0eSA9IC8qI19fUFVSRV9fKi9yZXF1aXJlKCcuL2ludGVybmFsL19hcml0eScpO1xuXG52YXIgX2N1cnJ5MiA9IC8qI19fUFVSRV9fKi9yZXF1aXJlKCcuL2ludGVybmFsL19jdXJyeTInKTtcblxudmFyIF9oYXMgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi9pbnRlcm5hbC9faGFzJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBmdW5jdGlvbiB0aGF0LCB3aGVuIGludm9rZWQsIGNhY2hlcyB0aGUgcmVzdWx0IG9mIGNhbGxpbmcgYGZuYFxuICogZm9yIGEgZ2l2ZW4gYXJndW1lbnQgc2V0IGFuZCByZXR1cm5zIHRoZSByZXN1bHQuIFN1YnNlcXVlbnQgY2FsbHMgdG8gdGhlXG4gKiBtZW1vaXplZCBgZm5gIHdpdGggdGhlIHNhbWUgYXJndW1lbnQgc2V0IHdpbGwgbm90IHJlc3VsdCBpbiBhbiBhZGRpdGlvbmFsXG4gKiBjYWxsIHRvIGBmbmA7IGluc3RlYWQsIHRoZSBjYWNoZWQgcmVzdWx0IGZvciB0aGF0IHNldCBvZiBhcmd1bWVudHMgd2lsbCBiZVxuICogcmV0dXJuZWQuXG4gKlxuICpcbiAqIEBmdW5jXG4gKiBAbWVtYmVyT2YgUlxuICogQHNpbmNlIHYwLjI0LjBcbiAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICogQHNpZyAoKi4uLiAtPiBTdHJpbmcpIC0+ICgqLi4uIC0+IGEpIC0+ICgqLi4uIC0+IGEpXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gZ2VuZXJhdGUgdGhlIGNhY2hlIGtleS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBtZW1vaXplLlxuICogQHJldHVybiB7RnVuY3Rpb259IE1lbW9pemVkIHZlcnNpb24gb2YgYGZuYC5cbiAqIEBleGFtcGxlXG4gKlxuICogICAgICBsZXQgY291bnQgPSAwO1xuICogICAgICBjb25zdCBmYWN0b3JpYWwgPSBSLm1lbW9pemVXaXRoKFIuaWRlbnRpdHksIG4gPT4ge1xuICogICAgICAgIGNvdW50ICs9IDE7XG4gKiAgICAgICAgcmV0dXJuIFIucHJvZHVjdChSLnJhbmdlKDEsIG4gKyAxKSk7XG4gKiAgICAgIH0pO1xuICogICAgICBmYWN0b3JpYWwoNSk7IC8vPT4gMTIwXG4gKiAgICAgIGZhY3RvcmlhbCg1KTsgLy89PiAxMjBcbiAqICAgICAgZmFjdG9yaWFsKDUpOyAvLz0+IDEyMFxuICogICAgICBjb3VudDsgLy89PiAxXG4gKi9cblxuXG52YXIgbWVtb2l6ZVdpdGggPSAvKiNfX1BVUkVfXyovX2N1cnJ5MihmdW5jdGlvbiBtZW1vaXplV2l0aChtRm4sIGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gX2FyaXR5KGZuLmxlbmd0aCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBrZXkgPSBtRm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoIV9oYXMoa2V5LCBjYWNoZSkpIHtcbiAgICAgIGNhY2hlW2tleV0gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgICByZXR1cm4gY2FjaGVba2V5XTtcbiAgfSk7XG59KTtcbm1vZHVsZS5leHBvcnRzID0gbWVtb2l6ZVdpdGg7Il19