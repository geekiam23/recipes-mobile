18efe4f025ff701c73646f9d1192d933
var _concat = require("./_concat");

var _curry2 = require("./_curry2");

var _xfBase = require("./_xfBase");

var XAperture = function () {
  function XAperture(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }

  XAperture.prototype['@@transducer/init'] = _xfBase.init;

  XAperture.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };

  XAperture.prototype['@@transducer/step'] = function (result, input) {
    this.store(input);
    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
  };

  XAperture.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;

    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };

  XAperture.prototype.getCopy = function () {
    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));
  };

  return XAperture;
}();

var _xaperture = _curry2(function _xaperture(n, xf) {
  return new XAperture(n, xf);
});

module.exports = _xaperture;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl94YXBlcnR1cmUuanMiXSwibmFtZXMiOlsiX2NvbmNhdCIsInJlcXVpcmUiLCJfY3VycnkyIiwiX3hmQmFzZSIsIlhBcGVydHVyZSIsIm4iLCJ4ZiIsInBvcyIsImZ1bGwiLCJhY2MiLCJBcnJheSIsInByb3RvdHlwZSIsImluaXQiLCJyZXN1bHQiLCJpbnB1dCIsInN0b3JlIiwiZ2V0Q29weSIsImxlbmd0aCIsInNsaWNlIiwiY2FsbCIsIl94YXBlcnR1cmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQWdCQyxPQUFPLGFBQWxDOztBQUVBLElBQUlDLE9BQU8sR0FBZ0JELE9BQU8sYUFBbEM7O0FBRUEsSUFBSUUsT0FBTyxHQUFnQkYsT0FBTyxhQUFsQzs7QUFFQSxJQUFJRyxTQUFTLEdBQWdCLFlBQVk7QUFFdkMsV0FBU0EsU0FBVCxDQUFtQkMsQ0FBbkIsRUFBc0JDLEVBQXRCLEVBQTBCO0FBQ3hCLFNBQUtBLEVBQUwsR0FBVUEsRUFBVjtBQUNBLFNBQUtDLEdBQUwsR0FBVyxDQUFYO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLEtBQVo7QUFDQSxTQUFLQyxHQUFMLEdBQVcsSUFBSUMsS0FBSixDQUFVTCxDQUFWLENBQVg7QUFDRDs7QUFDREQsRUFBQUEsU0FBUyxDQUFDTyxTQUFWLENBQW9CLG1CQUFwQixJQUEyQ1IsT0FBTyxDQUFDUyxJQUFuRDs7QUFDQVIsRUFBQUEsU0FBUyxDQUFDTyxTQUFWLENBQW9CLHFCQUFwQixJQUE2QyxVQUFVRSxNQUFWLEVBQWtCO0FBQzdELFNBQUtKLEdBQUwsR0FBVyxJQUFYO0FBQ0EsV0FBTyxLQUFLSCxFQUFMLENBQVEscUJBQVIsRUFBK0JPLE1BQS9CLENBQVA7QUFDRCxHQUhEOztBQUlBVCxFQUFBQSxTQUFTLENBQUNPLFNBQVYsQ0FBb0IsbUJBQXBCLElBQTJDLFVBQVVFLE1BQVYsRUFBa0JDLEtBQWxCLEVBQXlCO0FBQ2xFLFNBQUtDLEtBQUwsQ0FBV0QsS0FBWDtBQUNBLFdBQU8sS0FBS04sSUFBTCxHQUFZLEtBQUtGLEVBQUwsQ0FBUSxtQkFBUixFQUE2Qk8sTUFBN0IsRUFBcUMsS0FBS0csT0FBTCxFQUFyQyxDQUFaLEdBQW1FSCxNQUExRTtBQUNELEdBSEQ7O0FBSUFULEVBQUFBLFNBQVMsQ0FBQ08sU0FBVixDQUFvQkksS0FBcEIsR0FBNEIsVUFBVUQsS0FBVixFQUFpQjtBQUMzQyxTQUFLTCxHQUFMLENBQVMsS0FBS0YsR0FBZCxJQUFxQk8sS0FBckI7QUFDQSxTQUFLUCxHQUFMLElBQVksQ0FBWjs7QUFDQSxRQUFJLEtBQUtBLEdBQUwsS0FBYSxLQUFLRSxHQUFMLENBQVNRLE1BQTFCLEVBQWtDO0FBQ2hDLFdBQUtWLEdBQUwsR0FBVyxDQUFYO0FBQ0EsV0FBS0MsSUFBTCxHQUFZLElBQVo7QUFDRDtBQUNGLEdBUEQ7O0FBUUFKLEVBQUFBLFNBQVMsQ0FBQ08sU0FBVixDQUFvQkssT0FBcEIsR0FBOEIsWUFBWTtBQUN4QyxXQUFPaEIsT0FBTyxDQUFDVSxLQUFLLENBQUNDLFNBQU4sQ0FBZ0JPLEtBQWhCLENBQXNCQyxJQUF0QixDQUEyQixLQUFLVixHQUFoQyxFQUFxQyxLQUFLRixHQUExQyxDQUFELEVBQWlERyxLQUFLLENBQUNDLFNBQU4sQ0FBZ0JPLEtBQWhCLENBQXNCQyxJQUF0QixDQUEyQixLQUFLVixHQUFoQyxFQUFxQyxDQUFyQyxFQUF3QyxLQUFLRixHQUE3QyxDQUFqRCxDQUFkO0FBQ0QsR0FGRDs7QUFJQSxTQUFPSCxTQUFQO0FBQ0QsQ0E5QjRCLEVBQTdCOztBQWdDQSxJQUFJZ0IsVUFBVSxHQUFnQmxCLE9BQU8sQ0FBQyxTQUFTa0IsVUFBVCxDQUFvQmYsQ0FBcEIsRUFBdUJDLEVBQXZCLEVBQTJCO0FBQy9ELFNBQU8sSUFBSUYsU0FBSixDQUFjQyxDQUFkLEVBQWlCQyxFQUFqQixDQUFQO0FBQ0QsQ0FGb0MsQ0FBckM7O0FBR0FlLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsVUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2NvbmNhdCA9IC8qI19fUFVSRV9fKi9yZXF1aXJlKCcuL19jb25jYXQnKTtcblxudmFyIF9jdXJyeTIgPSAvKiNfX1BVUkVfXyovcmVxdWlyZSgnLi9fY3VycnkyJyk7XG5cbnZhciBfeGZCYXNlID0gLyojX19QVVJFX18qL3JlcXVpcmUoJy4vX3hmQmFzZScpO1xuXG52YXIgWEFwZXJ0dXJlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcblxuICBmdW5jdGlvbiBYQXBlcnR1cmUobiwgeGYpIHtcbiAgICB0aGlzLnhmID0geGY7XG4gICAgdGhpcy5wb3MgPSAwO1xuICAgIHRoaXMuZnVsbCA9IGZhbHNlO1xuICAgIHRoaXMuYWNjID0gbmV3IEFycmF5KG4pO1xuICB9XG4gIFhBcGVydHVyZS5wcm90b3R5cGVbJ0BAdHJhbnNkdWNlci9pbml0J10gPSBfeGZCYXNlLmluaXQ7XG4gIFhBcGVydHVyZS5wcm90b3R5cGVbJ0BAdHJhbnNkdWNlci9yZXN1bHQnXSA9IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICB0aGlzLmFjYyA9IG51bGw7XG4gICAgcmV0dXJuIHRoaXMueGZbJ0BAdHJhbnNkdWNlci9yZXN1bHQnXShyZXN1bHQpO1xuICB9O1xuICBYQXBlcnR1cmUucHJvdG90eXBlWydAQHRyYW5zZHVjZXIvc3RlcCddID0gZnVuY3Rpb24gKHJlc3VsdCwgaW5wdXQpIHtcbiAgICB0aGlzLnN0b3JlKGlucHV0KTtcbiAgICByZXR1cm4gdGhpcy5mdWxsID8gdGhpcy54ZlsnQEB0cmFuc2R1Y2VyL3N0ZXAnXShyZXN1bHQsIHRoaXMuZ2V0Q29weSgpKSA6IHJlc3VsdDtcbiAgfTtcbiAgWEFwZXJ0dXJlLnByb3RvdHlwZS5zdG9yZSA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIHRoaXMuYWNjW3RoaXMucG9zXSA9IGlucHV0O1xuICAgIHRoaXMucG9zICs9IDE7XG4gICAgaWYgKHRoaXMucG9zID09PSB0aGlzLmFjYy5sZW5ndGgpIHtcbiAgICAgIHRoaXMucG9zID0gMDtcbiAgICAgIHRoaXMuZnVsbCA9IHRydWU7XG4gICAgfVxuICB9O1xuICBYQXBlcnR1cmUucHJvdG90eXBlLmdldENvcHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9jb25jYXQoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcy5hY2MsIHRoaXMucG9zKSwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcy5hY2MsIDAsIHRoaXMucG9zKSk7XG4gIH07XG5cbiAgcmV0dXJuIFhBcGVydHVyZTtcbn0oKTtcblxudmFyIF94YXBlcnR1cmUgPSAvKiNfX1BVUkVfXyovX2N1cnJ5MihmdW5jdGlvbiBfeGFwZXJ0dXJlKG4sIHhmKSB7XG4gIHJldHVybiBuZXcgWEFwZXJ0dXJlKG4sIHhmKTtcbn0pO1xubW9kdWxlLmV4cG9ydHMgPSBfeGFwZXJ0dXJlOyJdfQ==