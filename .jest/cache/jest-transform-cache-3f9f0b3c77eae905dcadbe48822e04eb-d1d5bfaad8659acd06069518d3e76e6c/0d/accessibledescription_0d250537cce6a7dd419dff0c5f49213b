6b27b19929f140e9dce158e95acc01b0
"use strict";

exports.__esModule = true;
exports.computeAccessibleDescription = computeAccessibleDescription;

var _accessibleNameAndDescription = require("./accessible-name-and-description");

var _util = require("./util");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function computeAccessibleDescription(root) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var description = (0, _util.queryIdRefs)(root, "aria-describedby").map(function (element) {
    return (0, _accessibleNameAndDescription.computeTextAlternative)(element, _objectSpread(_objectSpread({}, options), {}, {
      compute: "description"
    }));
  }).join(" ");

  if (description === "") {
    var title = root.getAttribute("title");
    description = title === null ? "" : title;
  }

  return description;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NvdXJjZXMvYWNjZXNzaWJsZS1kZXNjcmlwdGlvbi50cyJdLCJuYW1lcyI6WyJvcHRpb25zIiwiZGVzY3JpcHRpb24iLCJjb21wdXRlIiwidGl0bGUiLCJyb290Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUEsNkJBQUEsR0FBQSxPQUFBLHFDQUFBOztBQUlBLElBQUEsS0FBQSxHQUFBLE9BQUEsVUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVFPLFNBQUEsNEJBQUEsQ0FBQSxJQUFBLEVBR0c7QUFBQSxNQURUQSxPQUNTLEdBQUEsU0FBQSxDQUFBLE1BQUEsR0FBQSxDQUFBLElBQUEsU0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBLFNBQUEsR0FBQSxTQUFBLENBQUEsQ0FBQSxDQUFBLEdBRGdDLEVBQ2hDO0FBQ1QsTUFBSUMsV0FBVyxHQUFHLENBQUEsR0FBQSxLQUFBLENBQUEsV0FBQSxFQUFBLElBQUEsRUFBQSxrQkFBQSxFQUFBLEdBQUEsQ0FDWixVQUFBLE9BQUEsRUFBYTtBQUNqQixXQUFPLENBQUEsR0FBQSw2QkFBQSxDQUFBLHNCQUFBLEVBQUEsT0FBQSxFQUFBLGFBQUEsQ0FBQSxhQUFBLENBQUEsRUFBQSxFQUFBLE9BQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQTtBQUVOQyxNQUFBQSxPQUFPLEVBQUU7QUFGSCxLQUFBLENBQUEsQ0FBUDtBQUZnQixHQUFBLEVBQUEsSUFBQSxDQURULEdBQ1MsQ0FBbEI7O0FBY0EsTUFBSUQsV0FBVyxLQUFmLEVBQUEsRUFBd0I7QUFDdkIsUUFBTUUsS0FBSyxHQUFHQyxJQUFJLENBQUpBLFlBQUFBLENBQWQsT0FBY0EsQ0FBZDtBQUNBSCxJQUFBQSxXQUFXLEdBQUdFLEtBQUssS0FBTEEsSUFBQUEsR0FBQUEsRUFBQUEsR0FBZEYsS0FBQUE7QUFDQTs7QUFFRCxTQUFBLFdBQUE7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdGNvbXB1dGVUZXh0QWx0ZXJuYXRpdmUsXG5cdENvbXB1dGVUZXh0QWx0ZXJuYXRpdmVPcHRpb25zLFxufSBmcm9tIFwiLi9hY2Nlc3NpYmxlLW5hbWUtYW5kLWRlc2NyaXB0aW9uXCI7XG5pbXBvcnQgeyBxdWVyeUlkUmVmcyB9IGZyb20gXCIuL3V0aWxcIjtcblxuLyoqXG4gKiBpbXBsZW1lbnRzIGh0dHBzOi8vdzNjLmdpdGh1Yi5pby9hY2NuYW1lLyNtYXBwaW5nX2FkZGl0aW9uYWxfbmRfZGVzY3JpcHRpb25cbiAqIEBwYXJhbSByb290XG4gKiBAcGFyYW0gW29wdGlvbnNdXG4gKiBAcGFybWEgW29wdGlvbnMuZ2V0Q29tcHV0ZWRTdHlsZV0gLSBtb2NrIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlLiBOZWVkcyBgY29udGVudGAsIGBkaXNwbGF5YCBhbmQgYHZpc2liaWxpdHlgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wdXRlQWNjZXNzaWJsZURlc2NyaXB0aW9uKFxuXHRyb290OiBFbGVtZW50LFxuXHRvcHRpb25zOiBDb21wdXRlVGV4dEFsdGVybmF0aXZlT3B0aW9ucyA9IHt9XG4pOiBzdHJpbmcge1xuXHRsZXQgZGVzY3JpcHRpb24gPSBxdWVyeUlkUmVmcyhyb290LCBcImFyaWEtZGVzY3JpYmVkYnlcIilcblx0XHQubWFwKChlbGVtZW50KSA9PiB7XG5cdFx0XHRyZXR1cm4gY29tcHV0ZVRleHRBbHRlcm5hdGl2ZShlbGVtZW50LCB7XG5cdFx0XHRcdC4uLm9wdGlvbnMsXG5cdFx0XHRcdGNvbXB1dGU6IFwiZGVzY3JpcHRpb25cIixcblx0XHRcdH0pO1xuXHRcdH0pXG5cdFx0LmpvaW4oXCIgXCIpO1xuXG5cdC8vIFRPRE86IFRlY2huaWNhbGx5IHdlIG5lZWQgdG8gbWFrZSBzdXJlIHRoYXQgbm9kZSB3YXNuJ3QgdXNlZCBmb3IgdGhlIGFjY2Vzc2libGUgbmFtZVxuXHQvLyAgICAgICBUaGlzIGNhdXNlcyBgZGVzY3JpcHRpb25fMS4wX2NvbWJvYm94LWZvY3VzYWJsZS1tYW51YWxgIHRvIGZhaWxcblx0Ly9cblx0Ly8gaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWwtYWFtLTEuMC8jYWNjZXNzaWJsZS1uYW1lLWFuZC1kZXNjcmlwdGlvbi1jb21wdXRhdGlvblxuXHQvLyBzYXlzIGZvciBzbyBtYW55IGVsZW1lbnRzIHRvIHVzZSB0aGUgYHRpdGxlYCB0aGF0IHdlIGFzc3VtZSBhbGwgZWxlbWVudHMgYXJlIGNvbnNpZGVyZWRcblx0aWYgKGRlc2NyaXB0aW9uID09PSBcIlwiKSB7XG5cdFx0Y29uc3QgdGl0bGUgPSByb290LmdldEF0dHJpYnV0ZShcInRpdGxlXCIpO1xuXHRcdGRlc2NyaXB0aW9uID0gdGl0bGUgPT09IG51bGwgPyBcIlwiIDogdGl0bGU7XG5cdH1cblxuXHRyZXR1cm4gZGVzY3JpcHRpb247XG59XG4iXX0=