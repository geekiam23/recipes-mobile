{"version":3,"sources":["../sources/accessible-description.ts"],"names":["options","description","compute","title","root"],"mappings":";;;;;AAAA,IAAA,6BAAA,GAAA,OAAA,qCAAA;;AAIA,IAAA,KAAA,GAAA,OAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQO,SAAA,4BAAA,CAAA,IAAA,EAGG;AAAA,MADTA,OACS,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADgC,EAChC;AACT,MAAIC,WAAW,GAAG,CAAA,GAAA,KAAA,CAAA,WAAA,EAAA,IAAA,EAAA,kBAAA,EAAA,GAAA,CACZ,UAAA,OAAA,EAAa;AACjB,WAAO,CAAA,GAAA,6BAAA,CAAA,sBAAA,EAAA,OAAA,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA;AAENC,MAAAA,OAAO,EAAE;AAFH,KAAA,CAAA,CAAP;AAFgB,GAAA,EAAA,IAAA,CADT,GACS,CAAlB;;AAcA,MAAID,WAAW,KAAf,EAAA,EAAwB;AACvB,QAAME,KAAK,GAAGC,IAAI,CAAJA,YAAAA,CAAd,OAAcA,CAAd;AACAH,IAAAA,WAAW,GAAGE,KAAK,KAALA,IAAAA,GAAAA,EAAAA,GAAdF,KAAAA;AACA;;AAED,SAAA,WAAA;AACA","sourcesContent":["import {\n\tcomputeTextAlternative,\n\tComputeTextAlternativeOptions,\n} from \"./accessible-name-and-description\";\nimport { queryIdRefs } from \"./util\";\n\n/**\n * implements https://w3c.github.io/accname/#mapping_additional_nd_description\n * @param root\n * @param [options]\n * @parma [options.getComputedStyle] - mock window.getComputedStyle. Needs `content`, `display` and `visibility`\n */\nexport function computeAccessibleDescription(\n\troot: Element,\n\toptions: ComputeTextAlternativeOptions = {}\n): string {\n\tlet description = queryIdRefs(root, \"aria-describedby\")\n\t\t.map((element) => {\n\t\t\treturn computeTextAlternative(element, {\n\t\t\t\t...options,\n\t\t\t\tcompute: \"description\",\n\t\t\t});\n\t\t})\n\t\t.join(\" \");\n\n\t// TODO: Technically we need to make sure that node wasn't used for the accessible name\n\t//       This causes `description_1.0_combobox-focusable-manual` to fail\n\t//\n\t// https://www.w3.org/TR/html-aam-1.0/#accessible-name-and-description-computation\n\t// says for so many elements to use the `title` that we assume all elements are considered\n\tif (description === \"\") {\n\t\tconst title = root.getAttribute(\"title\");\n\t\tdescription = title === null ? \"\" : title;\n\t}\n\n\treturn description;\n}\n"]}