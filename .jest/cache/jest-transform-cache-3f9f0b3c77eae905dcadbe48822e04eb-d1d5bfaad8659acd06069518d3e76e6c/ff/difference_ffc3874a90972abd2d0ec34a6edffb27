ac23afdfa96e3dfba7a455b3da3909c5
var _curry2 = require("./internal/_curry2");

var _Set = require("./internal/_Set");

var difference = _curry2(function difference(first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  var secondLen = second.length;
  var toFilterOut = new _Set();

  for (var i = 0; i < secondLen; i += 1) {
    toFilterOut.add(second[i]);
  }

  while (idx < firstLen) {
    if (toFilterOut.add(first[idx])) {
      out[out.length] = first[idx];
    }

    idx += 1;
  }

  return out;
});

module.exports = difference;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpZmZlcmVuY2UuanMiXSwibmFtZXMiOlsiX2N1cnJ5MiIsInJlcXVpcmUiLCJfU2V0IiwiZGlmZmVyZW5jZSIsImZpcnN0Iiwic2Vjb25kIiwib3V0IiwiaWR4IiwiZmlyc3RMZW4iLCJsZW5ndGgiLCJzZWNvbmRMZW4iLCJ0b0ZpbHRlck91dCIsImkiLCJhZGQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQWdCQyxPQUFPLHNCQUFsQzs7QUFFQSxJQUFJQyxJQUFJLEdBQWdCRCxPQUFPLG1CQUEvQjs7QUF3QkEsSUFBSUUsVUFBVSxHQUFnQkgsT0FBTyxDQUFDLFNBQVNHLFVBQVQsQ0FBb0JDLEtBQXBCLEVBQTJCQyxNQUEzQixFQUFtQztBQUN2RSxNQUFJQyxHQUFHLEdBQUcsRUFBVjtBQUNBLE1BQUlDLEdBQUcsR0FBRyxDQUFWO0FBQ0EsTUFBSUMsUUFBUSxHQUFHSixLQUFLLENBQUNLLE1BQXJCO0FBQ0EsTUFBSUMsU0FBUyxHQUFHTCxNQUFNLENBQUNJLE1BQXZCO0FBQ0EsTUFBSUUsV0FBVyxHQUFHLElBQUlULElBQUosRUFBbEI7O0FBRUEsT0FBSyxJQUFJVSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixTQUFwQixFQUErQkUsQ0FBQyxJQUFJLENBQXBDLEVBQXVDO0FBQ3JDRCxJQUFBQSxXQUFXLENBQUNFLEdBQVosQ0FBZ0JSLE1BQU0sQ0FBQ08sQ0FBRCxDQUF0QjtBQUNEOztBQUVELFNBQU9MLEdBQUcsR0FBR0MsUUFBYixFQUF1QjtBQUNyQixRQUFJRyxXQUFXLENBQUNFLEdBQVosQ0FBZ0JULEtBQUssQ0FBQ0csR0FBRCxDQUFyQixDQUFKLEVBQWlDO0FBQy9CRCxNQUFBQSxHQUFHLENBQUNBLEdBQUcsQ0FBQ0csTUFBTCxDQUFILEdBQWtCTCxLQUFLLENBQUNHLEdBQUQsQ0FBdkI7QUFDRDs7QUFDREEsSUFBQUEsR0FBRyxJQUFJLENBQVA7QUFDRDs7QUFDRCxTQUFPRCxHQUFQO0FBQ0QsQ0FsQm9DLENBQXJDOztBQW1CQVEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixVQUFqQiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfY3VycnkyID0gLyojX19QVVJFX18qL3JlcXVpcmUoJy4vaW50ZXJuYWwvX2N1cnJ5MicpO1xuXG52YXIgX1NldCA9IC8qI19fUFVSRV9fKi9yZXF1aXJlKCcuL2ludGVybmFsL19TZXQnKTtcblxuLyoqXG4gKiBGaW5kcyB0aGUgc2V0IChpLmUuIG5vIGR1cGxpY2F0ZXMpIG9mIGFsbCBlbGVtZW50cyBpbiB0aGUgZmlyc3QgbGlzdCBub3RcbiAqIGNvbnRhaW5lZCBpbiB0aGUgc2Vjb25kIGxpc3QuIE9iamVjdHMgYW5kIEFycmF5cyBhcmUgY29tcGFyZWQgaW4gdGVybXMgb2ZcbiAqIHZhbHVlIGVxdWFsaXR5LCBub3QgcmVmZXJlbmNlIGVxdWFsaXR5LlxuICpcbiAqIEBmdW5jXG4gKiBAbWVtYmVyT2YgUlxuICogQHNpbmNlIHYwLjEuMFxuICogQGNhdGVnb3J5IFJlbGF0aW9uXG4gKiBAc2lnIFsqXSAtPiBbKl0gLT4gWypdXG4gKiBAcGFyYW0ge0FycmF5fSBsaXN0MSBUaGUgZmlyc3QgbGlzdC5cbiAqIEBwYXJhbSB7QXJyYXl9IGxpc3QyIFRoZSBzZWNvbmQgbGlzdC5cbiAqIEByZXR1cm4ge0FycmF5fSBUaGUgZWxlbWVudHMgaW4gYGxpc3QxYCB0aGF0IGFyZSBub3QgaW4gYGxpc3QyYC5cbiAqIEBzZWUgUi5kaWZmZXJlbmNlV2l0aCwgUi5zeW1tZXRyaWNEaWZmZXJlbmNlLCBSLnN5bW1ldHJpY0RpZmZlcmVuY2VXaXRoLCBSLndpdGhvdXRcbiAqIEBleGFtcGxlXG4gKlxuICogICAgICBSLmRpZmZlcmVuY2UoWzEsMiwzLDRdLCBbNyw2LDUsNCwzXSk7IC8vPT4gWzEsMl1cbiAqICAgICAgUi5kaWZmZXJlbmNlKFs3LDYsNSw0LDNdLCBbMSwyLDMsNF0pOyAvLz0+IFs3LDYsNV1cbiAqICAgICAgUi5kaWZmZXJlbmNlKFt7YTogMX0sIHtiOiAyfV0sIFt7YTogMX0sIHtjOiAzfV0pIC8vPT4gW3tiOiAyfV1cbiAqL1xuXG5cbnZhciBkaWZmZXJlbmNlID0gLyojX19QVVJFX18qL19jdXJyeTIoZnVuY3Rpb24gZGlmZmVyZW5jZShmaXJzdCwgc2Vjb25kKSB7XG4gIHZhciBvdXQgPSBbXTtcbiAgdmFyIGlkeCA9IDA7XG4gIHZhciBmaXJzdExlbiA9IGZpcnN0Lmxlbmd0aDtcbiAgdmFyIHNlY29uZExlbiA9IHNlY29uZC5sZW5ndGg7XG4gIHZhciB0b0ZpbHRlck91dCA9IG5ldyBfU2V0KCk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWNvbmRMZW47IGkgKz0gMSkge1xuICAgIHRvRmlsdGVyT3V0LmFkZChzZWNvbmRbaV0pO1xuICB9XG5cbiAgd2hpbGUgKGlkeCA8IGZpcnN0TGVuKSB7XG4gICAgaWYgKHRvRmlsdGVyT3V0LmFkZChmaXJzdFtpZHhdKSkge1xuICAgICAgb3V0W291dC5sZW5ndGhdID0gZmlyc3RbaWR4XTtcbiAgICB9XG4gICAgaWR4ICs9IDE7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn0pO1xubW9kdWxlLmV4cG9ydHMgPSBkaWZmZXJlbmNlOyJdfQ==