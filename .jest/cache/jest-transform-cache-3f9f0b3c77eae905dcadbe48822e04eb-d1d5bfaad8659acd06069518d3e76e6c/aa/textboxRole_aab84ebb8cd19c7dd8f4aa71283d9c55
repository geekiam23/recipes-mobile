3ec078554a066ef9f30657b68e66233e
"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;
var textboxRole = {
  abstract: false,
  accessibleNameRequired: true,
  baseConcepts: [],
  childrenPresentational: false,
  nameFrom: ['author'],
  prohibitedProps: [],
  props: {
    'aria-activedescendant': null,
    'aria-autocomplete': null,
    'aria-errormessage': null,
    'aria-haspopup': null,
    'aria-invalid': null,
    'aria-multiline': null,
    'aria-placeholder': null,
    'aria-readonly': null,
    'aria-required': null
  },
  relatedConcepts: [{
    concept: {
      attributes: [{
        constraints: ['undefined'],
        name: 'type'
      }, {
        constraints: ['undefined'],
        name: 'list'
      }],
      name: 'input'
    },
    module: 'HTML'
  }, {
    concept: {
      attributes: [{
        constraints: ['undefined'],
        name: 'list'
      }, {
        name: 'type',
        value: 'email'
      }],
      name: 'input'
    },
    module: 'HTML'
  }, {
    concept: {
      attributes: [{
        constraints: ['undefined'],
        name: 'list'
      }, {
        name: 'type',
        value: 'tel'
      }],
      name: 'input'
    },
    module: 'HTML'
  }, {
    concept: {
      attributes: [{
        constraints: ['undefined'],
        name: 'list'
      }, {
        name: 'type',
        value: 'text'
      }],
      name: 'input'
    },
    module: 'HTML'
  }, {
    concept: {
      attributes: [{
        constraints: ['undefined'],
        name: 'list'
      }, {
        name: 'type',
        value: 'url'
      }],
      name: 'input'
    },
    module: 'HTML'
  }, {
    concept: {
      name: 'input'
    },
    module: 'XForms'
  }, {
    concept: {
      name: 'textarea'
    },
    module: 'HTML'
  }],
  requireContextRole: [],
  requiredContextRole: [],
  requiredOwnedElements: [],
  requiredProps: {},
  superClass: [['roletype', 'widget', 'input']]
};
var _default = textboxRole;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRleHRib3hSb2xlLmpzIl0sIm5hbWVzIjpbIl9PYmplY3QkZGVmaW5lUHJvcGVydHkiLCJyZXF1aXJlIiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInRleHRib3hSb2xlIiwiYWJzdHJhY3QiLCJhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkIiwiYmFzZUNvbmNlcHRzIiwiY2hpbGRyZW5QcmVzZW50YXRpb25hbCIsIm5hbWVGcm9tIiwicHJvaGliaXRlZFByb3BzIiwicHJvcHMiLCJyZWxhdGVkQ29uY2VwdHMiLCJjb25jZXB0IiwiYXR0cmlidXRlcyIsImNvbnN0cmFpbnRzIiwibmFtZSIsIm1vZHVsZSIsInJlcXVpcmVDb250ZXh0Um9sZSIsInJlcXVpcmVkQ29udGV4dFJvbGUiLCJyZXF1aXJlZE93bmVkRWxlbWVudHMiLCJyZXF1aXJlZFByb3BzIiwic3VwZXJDbGFzcyIsIl9kZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxzQkFBc0IsR0FBR0MsT0FBTyxDQUFDLDhEQUFELENBQXBDOztBQUVBRCxzQkFBc0IsQ0FBQ0UsT0FBRCxFQUFVLFlBQVYsRUFBd0I7QUFDNUNDLEVBQUFBLEtBQUssRUFBRTtBQURxQyxDQUF4QixDQUF0Qjs7QUFJQUQsT0FBTyxDQUFDRSxPQUFSLEdBQWtCLEtBQUssQ0FBdkI7QUFDQSxJQUFJQyxXQUFXLEdBQUc7QUFDaEJDLEVBQUFBLFFBQVEsRUFBRSxLQURNO0FBRWhCQyxFQUFBQSxzQkFBc0IsRUFBRSxJQUZSO0FBR2hCQyxFQUFBQSxZQUFZLEVBQUUsRUFIRTtBQUloQkMsRUFBQUEsc0JBQXNCLEVBQUUsS0FKUjtBQUtoQkMsRUFBQUEsUUFBUSxFQUFFLENBQUMsUUFBRCxDQUxNO0FBTWhCQyxFQUFBQSxlQUFlLEVBQUUsRUFORDtBQU9oQkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0wsNkJBQXlCLElBRHBCO0FBRUwseUJBQXFCLElBRmhCO0FBR0wseUJBQXFCLElBSGhCO0FBSUwscUJBQWlCLElB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QTdGSSxDQUFsQjtBQStGQSxJQUFJQyxRQUFRLEdBQUduQixXQUFmO0FBQ0FILE9BQU8sQ0FBQ0UsT0FBUixHQUFrQm9CLFFBQWxCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfT2JqZWN0JGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lLWNvcmVqczMvY29yZS1qcy1zdGFibGUvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eVwiKTtcblxuX09iamVjdCRkZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciB0ZXh0Ym94Um9sZSA9IHtcbiAgYWJzdHJhY3Q6IGZhbHNlLFxuICBhY2Nlc3NpYmxlTmFtZVJlcXVpcmVkOiB0cnVlLFxuICBiYXNlQ29uY2VwdHM6IFtdLFxuICBjaGlsZHJlblByZXNlbnRhdGlvbmFsOiBmYWxzZSxcbiAgbmFtZUZyb206IFsnYXV0aG9yJ10sXG4gIHByb2hpYml0ZWRQcm9wczogW10sXG4gIHByb3BzOiB7XG4gICAgJ2FyaWEtYWN0aXZlZGVzY2VuZGFudCc6IG51bGwsXG4gICAgJ2FyaWEtYXV0b2NvbXBsZXRlJzogbnVsbCxcbiAgICAnYXJpYS1lcnJvcm1lc3NhZ2UnOiBudWxsLFxuICAgICdhcmlhLWhhc3BvcHVwJzogbnVsbCxcbiAgICAnYXJpYS1pbnZhbGlkJzogbnVsbCxcbiAgICAnYXJpYS1tdWx0aWxpbmUnOiBudWxsLFxuICAgICdhcmlhLXBsYWNlaG9sZGVyJzogbnVsbCxcbiAgICAnYXJpYS1yZWFkb25seSc6IG51bGwsXG4gICAgJ2FyaWEtcmVxdWlyZWQnOiBudWxsXG4gIH0sXG4gIHJlbGF0ZWRDb25jZXB0czogW3tcbiAgICBjb25jZXB0OiB7XG4gICAgICBhdHRyaWJ1dGVzOiBbe1xuICAgICAgICBjb25zdHJhaW50czogWyd1bmRlZmluZWQnXSxcbiAgICAgICAgbmFtZTogJ3R5cGUnXG4gICAgICB9LCB7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3VuZGVmaW5lZCddLFxuICAgICAgICBuYW1lOiAnbGlzdCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3VuZGVmaW5lZCddLFxuICAgICAgICBuYW1lOiAnbGlzdCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ2VtYWlsJ1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnaW5wdXQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgY29uc3RyYWludHM6IFsndW5kZWZpbmVkJ10sXG4gICAgICAgIG5hbWU6ICdsaXN0J1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAndHlwZScsXG4gICAgICAgIHZhbHVlOiAndGVsJ1xuICAgICAgfV0sXG4gICAgICBuYW1lOiAnaW5wdXQnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgY29uc3RyYWludHM6IFsndW5kZWZpbmVkJ10sXG4gICAgICAgIG5hbWU6ICdsaXN0J1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAndHlwZScsXG4gICAgICAgIHZhbHVlOiAndGV4dCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3VuZGVmaW5lZCddLFxuICAgICAgICBuYW1lOiAnbGlzdCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ3R5cGUnLFxuICAgICAgICB2YWx1ZTogJ3VybCdcbiAgICAgIH1dLFxuICAgICAgbmFtZTogJ2lucHV0J1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICdpbnB1dCdcbiAgICB9LFxuICAgIG1vZHVsZTogJ1hGb3JtcydcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIG5hbWU6ICd0ZXh0YXJlYSdcbiAgICB9LFxuICAgIG1vZHVsZTogJ0hUTUwnXG4gIH1dLFxuICByZXF1aXJlQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZENvbnRleHRSb2xlOiBbXSxcbiAgcmVxdWlyZWRPd25lZEVsZW1lbnRzOiBbXSxcbiAgcmVxdWlyZWRQcm9wczoge30sXG4gIHN1cGVyQ2xhc3M6IFtbJ3JvbGV0eXBlJywgJ3dpZGdldCcsICdpbnB1dCddXVxufTtcbnZhciBfZGVmYXVsdCA9IHRleHRib3hSb2xlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il19