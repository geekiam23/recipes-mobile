{"version":3,"sources":["innerJoin.js"],"names":["_includesWith","require","_curry3","_filter","innerJoin","pred","xs","ys","x","module","exports"],"mappings":"AAAA,IAAIA,aAAa,GAAgBC,OAAO,4BAAxC;;AAEA,IAAIC,OAAO,GAAgBD,OAAO,sBAAlC;;AAEA,IAAIE,OAAO,GAAgBF,OAAO,sBAAlC;;AAuCA,IAAIG,SAAS,GAAgBF,OAAO,CAAC,SAASE,SAAT,CAAmBC,IAAnB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiC;AACpE,SAAOJ,OAAO,CAAC,UAAUK,CAAV,EAAa;AAC1B,WAAOR,aAAa,CAACK,IAAD,EAAOG,CAAP,EAAUD,EAAV,CAApB;AACD,GAFa,EAEXD,EAFW,CAAd;AAGD,CAJmC,CAApC;;AAKAG,MAAM,CAACC,OAAP,GAAiBN,SAAjB","sourcesContent":["var _includesWith = /*#__PURE__*/require('./internal/_includesWith');\n\nvar _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _filter = /*#__PURE__*/require('./internal/_filter');\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\n\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\nmodule.exports = innerJoin;"]}