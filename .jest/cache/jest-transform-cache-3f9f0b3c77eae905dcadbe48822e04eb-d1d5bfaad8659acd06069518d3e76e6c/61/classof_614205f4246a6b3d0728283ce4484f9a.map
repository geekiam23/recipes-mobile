{"version":3,"sources":["classof.js"],"names":["TO_STRING_TAG_SUPPORT","require","classofRaw","wellKnownSymbol","TO_STRING_TAG","CORRECT_ARGUMENTS","arguments","tryGet","it","key","error","module","exports","O","tag","result","undefined","Object","callee"],"mappings":"AAAA,IAAIA,qBAAqB,GAAGC,OAAO,sCAAnC;;AACA,IAAIC,UAAU,GAAGD,OAAO,4BAAxB;;AACA,IAAIE,eAAe,GAAGF,OAAO,kCAA7B;;AAEA,IAAIG,aAAa,GAAGD,eAAe,CAAC,aAAD,CAAnC;AAEA,IAAIE,iBAAiB,GAAGH,UAAU,CAAC,YAAY;AAAE,SAAOI,SAAP;AAAmB,CAAjC,EAAD,CAAV,IAAmD,WAA3E;;AAGA,IAAIC,MAAM,GAAG,SAATA,MAAS,CAAUC,EAAV,EAAcC,GAAd,EAAmB;AAC9B,MAAI;AACF,WAAOD,EAAE,CAACC,GAAD,CAAT;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc,CAAe;AAChC,CAJD;;AAOAC,MAAM,CAACC,OAAP,GAAiBZ,qBAAqB,GAAGE,UAAH,GAAgB,UAAUM,EAAV,EAAc;AAClE,MAAIK,CAAJ,EAAOC,GAAP,EAAYC,MAAZ;AACA,SAAOP,EAAE,KAAKQ,SAAP,GAAmB,WAAnB,GAAiCR,EAAE,KAAK,IAAP,GAAc,MAAd,GAEpC,QAAQM,GAAG,GAAGP,MAAM,CAACM,CAAC,GAAGI,MAAM,CAACT,EAAD,CAAX,EAAiBJ,aAAjB,CAApB,KAAwD,QAAxD,GAAmEU,GAAnE,GAEAT,iBAAiB,GAAGH,UAAU,CAACW,CAAD,CAAb,GAEjB,CAACE,MAAM,GAAGb,UAAU,CAACW,CAAD,CAApB,KAA4B,QAA5B,IAAwC,OAAOA,CAAC,CAACK,MAAT,IAAmB,UAA3D,GAAwE,WAAxE,GAAsFH,MAN1F;AAOD,CATD","sourcesContent":["var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n"]}