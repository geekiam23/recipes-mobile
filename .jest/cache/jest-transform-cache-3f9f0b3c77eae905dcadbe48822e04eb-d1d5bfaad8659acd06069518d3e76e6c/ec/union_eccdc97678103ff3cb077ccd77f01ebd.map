{"version":3,"sources":["union.js"],"names":["_concat","require","_curry2","compose","uniq","union","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAgBC,OAAO,sBAAlC;;AAEA,IAAIC,OAAO,GAAgBD,OAAO,sBAAlC;;AAEA,IAAIE,OAAO,GAAgBF,OAAO,aAAlC;;AAEA,IAAIG,IAAI,GAAgBH,OAAO,UAA/B;;AAqBA,IAAII,KAAK,GAAgBH,OAAO,CAAeC,OAAO,CAACC,IAAD,EAAOJ,OAAP,CAAtB,CAAhC;;AACAM,MAAM,CAACC,OAAP,GAAiBF,KAAjB","sourcesContent":["var _concat = /*#__PURE__*/require('./internal/_concat');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar compose = /*#__PURE__*/require('./compose');\n\nvar uniq = /*#__PURE__*/require('./uniq');\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\n\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nmodule.exports = union;"]}