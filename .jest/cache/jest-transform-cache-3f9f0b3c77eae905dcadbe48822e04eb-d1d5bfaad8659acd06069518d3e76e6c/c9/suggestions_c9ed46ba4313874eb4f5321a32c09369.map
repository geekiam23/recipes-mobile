{"version":3,"sources":["suggestions.js"],"names":["Object","defineProperty","exports","value","getSuggestedQuery","_domAccessibilityApi","require","_matches","_getNodeText","_config","_roleHelpers","_labelHelpers","_shared","normalize","getDefaultNormalizer","escapeRegExp","string","replace","getRegExpMatcher","RegExp","toLowerCase","makeSuggestion","queryName","element","content","variant","name","warning","queryOptions","queryArgs","includes","isInaccessible","hidden","keys","length","push","queryMethod","toString","console","warn","text","options","entries","map","k","v","join","canSuggest","currentMethod","requestedMethod","data","method","_element$getAttribute","_getImplicitAriaRoles","matches","DEFAULT_IGNORE_TAGS","undefined","role","getAttribute","getImplicitAriaRoles","computeAccessibleName","computedStyleSupportsPseudoElements","getConfig","labelText","getLabels","document","label","placeholderText","textContent","getNodeText","alt","title","testId","testIdAttribute"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSuggestedQuery = getSuggestedQuery;\n\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\n\nvar _matches = require(\"./matches\");\n\nvar _getNodeText = require(\"./get-node-text\");\n\nvar _config = require(\"./config\");\n\nvar _roleHelpers = require(\"./role-helpers\");\n\nvar _labelHelpers = require(\"./label-helpers\");\n\nvar _shared = require(\"./shared\");\n\nconst normalize = (0, _matches.getDefaultNormalizer)();\n\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nfunction getRegExpMatcher(string) {\n  return new RegExp(escapeRegExp(string.toLowerCase()), 'i');\n}\n\nfunction makeSuggestion(queryName, element, content, {\n  variant,\n  name\n}) {\n  let warning = '';\n  const queryOptions = {};\n  const queryArgs = [['Role', 'TestId'].includes(queryName) ? content : getRegExpMatcher(content)];\n\n  if (name) {\n    queryOptions.name = getRegExpMatcher(name);\n  }\n\n  if (queryName === 'Role' && (0, _roleHelpers.isInaccessible)(element)) {\n    queryOptions.hidden = true;\n    warning = `Element is inaccessible. This means that the element and all its children are invisible to screen readers.\n    If you are using the aria-hidden prop, make sure this is the right choice for your case.\n    `;\n  }\n\n  if (Object.keys(queryOptions).length > 0) {\n    queryArgs.push(queryOptions);\n  }\n\n  const queryMethod = `${variant}By${queryName}`;\n  return {\n    queryName,\n    queryMethod,\n    queryArgs,\n    variant,\n    warning,\n\n    toString() {\n      if (warning) {\n        console.warn(warning);\n      }\n\n      let [text, options] = queryArgs;\n      text = typeof text === 'string' ? `'${text}'` : text;\n      options = options ? `, { ${Object.entries(options).map(([k, v]) => `${k}: ${v}`).join(', ')} }` : '';\n      return `${queryMethod}(${text}${options})`;\n    }\n\n  };\n}\n\nfunction canSuggest(currentMethod, requestedMethod, data) {\n  return data && (!requestedMethod || requestedMethod.toLowerCase() === currentMethod.toLowerCase());\n}\n\nfunction getSuggestedQuery(element, variant = 'get', method) {\n  var _element$getAttribute, _getImplicitAriaRoles;\n\n  // don't create suggestions for script and style elements\n  if (element.matches(_shared.DEFAULT_IGNORE_TAGS)) {\n    return undefined;\n  } //We prefer to suggest something else if the role is generic\n\n\n  const role = (_element$getAttribute = element.getAttribute('role')) != null ? _element$getAttribute : (_getImplicitAriaRoles = (0, _roleHelpers.getImplicitAriaRoles)(element)) == null ? void 0 : _getImplicitAriaRoles[0];\n\n  if (role !== 'generic' && canSuggest('Role', method, role)) {\n    return makeSuggestion('Role', element, role, {\n      variant,\n      name: (0, _domAccessibilityApi.computeAccessibleName)(element, {\n        computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n      })\n    });\n  }\n\n  const labelText = (0, _labelHelpers.getLabels)(document, element).map(label => label.content).join(' ');\n\n  if (canSuggest('LabelText', method, labelText)) {\n    return makeSuggestion('LabelText', element, labelText, {\n      variant\n    });\n  }\n\n  const placeholderText = element.getAttribute('placeholder');\n\n  if (canSuggest('PlaceholderText', method, placeholderText)) {\n    return makeSuggestion('PlaceholderText', element, placeholderText, {\n      variant\n    });\n  }\n\n  const textContent = normalize((0, _getNodeText.getNodeText)(element));\n\n  if (canSuggest('Text', method, textContent)) {\n    return makeSuggestion('Text', element, textContent, {\n      variant\n    });\n  }\n\n  if (canSuggest('DisplayValue', method, element.value)) {\n    return makeSuggestion('DisplayValue', element, normalize(element.value), {\n      variant\n    });\n  }\n\n  const alt = element.getAttribute('alt');\n\n  if (canSuggest('AltText', method, alt)) {\n    return makeSuggestion('AltText', element, alt, {\n      variant\n    });\n  }\n\n  const title = element.getAttribute('title');\n\n  if (canSuggest('Title', method, title)) {\n    return makeSuggestion('Title', element, title, {\n      variant\n    });\n  }\n\n  const testId = element.getAttribute((0, _config.getConfig)().testIdAttribute);\n\n  if (canSuggest('TestId', method, testId)) {\n    return makeSuggestion('TestId', element, testId, {\n      variant\n    });\n  }\n\n  return undefined;\n}"]}